{"version":3,"file":"formjs-esm.min.js","sources":["../src/modules/version.js","../src/modules/helpers/addClass.js","../src/modules/helpers/isNodeList.js","../src/modules/helpers/removeClass.js","../src/modules/helpers/isDOMNode.js","../src/modules/helpers/checkFormEl.js","../src/modules/helpers/customEvents.js","../src/modules/helpers/mergeObjects.js","../src/modules/helpers/dispatchCustomEvent.js","../src/modules/helpers/fieldsStringSelector.js","../src/modules/helpers/getDateAsNumber.js","../src/modules/helpers/getSplitChar.js","../src/modules/helpers/getUniqueFields.js","../src/modules/helpers/getValidateFieldDefault.js","../src/modules/helpers/getValidateFormDefault.js","../src/modules/helpers/isFieldForChangeEvent.js","../src/modules/helpers/runFunctionsSequence.js","../src/modules/helpers/serializeObject.js","../src/modules/helpers/toCamelCase.js","../src/modules/optionsUtils.js","../src/modules/helpers/checkDirtyField.js","../src/modules/options.js","../src/modules/validationRules.js","../src/modules/validationRules/date.js","../src/modules/validationRules/email.js","../src/modules/validationRules/number.js","../src/modules/submit.js","../src/modules/ajaxCall.js","../src/modules/listenerCallbacks.js","../src/modules/formStartup.js","../src/modules/init.js","../src/modules/helpers/getFilledFields.js","../src/modules/validationRulesAttributes.js","../src/modules/validationRules/checkbox.js","../src/modules/validationRules/checks.js","../src/modules/validationRules/equalTo.js","../src/modules/validationRules/exactLength.js","../src/modules/validationRules/file.js","../src/modules/validationRules/length.js","../src/modules/validationRules/max.js","../src/modules/validationRules/maxlength.js","../src/modules/validationRules/min.js","../src/modules/validationRules/minlength.js","../src/modules/validationRules/pattern.js","../src/modules/validationRules/radio.js","../src/modules/validationRules/requiredFrom.js","../src/modules/checkFieldValidity.js","../src/modules/isValid.js","../src/modules/checkFormValidity.js","../src/index.js","../src/modules/constructor.js","../src/modules/destroy.js","../src/modules/helpers/excludeSelector.js","../src/modules/validationErrors.js"],"sourcesContent":["\nexport const version = '4.1.0';\n","\nexport const addClass = ( element, cssClasses ) => {\n    cssClasses.split(' ').forEach(className => {\n        element.classList.add( className );\n    });\n}\n","\nexport const isNodeList = nodeList => {\n    return NodeList.prototype.isPrototypeOf( nodeList );\n}\n","\nexport const removeClass = ( element, cssClasses ) => {\n    cssClasses.split(' ').forEach(className => {\n        element.classList.remove( className );\n    });\n}\n","\nexport const isDOMNode = node => {\n    return Element.prototype.isPrototypeOf( node );\n}\n","\nimport { isDOMNode } from './isDOMNode';\n\nexport const checkFormEl = formEl => {\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n}\n","\nexport const customEvents = {\n    field: {\n        validation: 'fjs.field:validation'\n    },\n    form: {\n        submit:     'fjs.form:submit',\n        validation: 'fjs.form:validation'\n    }\n}\n","\nexport const mergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // * STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        // IF THIS IS ONE OF ABOVE (*) AND THE DESTINATION OBJECT IS AN ARRAY\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n}\n","\nimport { mergeObjects } from './mergeObjects';\n\nexport const dispatchCustomEvent = ( elem, eventName, data = {}, eventOptions = {} ) => {\n    eventOptions = mergeObjects({}, { bubbles: true }, eventOptions);\n    const eventObj = new Event(eventName, eventOptions);\n    eventObj.data = data;\n    elem.dispatchEvent( eventObj );\n}\n","\nexport const fieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"hidden\"]), select, textarea'\n","\nimport { getSplitChar } from './getSplitChar';\n\nconst formatMap = {\n    'YYYY-MM-DD': function(dateArray){\n        return dateArray;\n    },\n    'MM-DD-YYYY': function(dateArray){\n        return [dateArray[2], dateArray[0], dateArray[1]];\n    },\n    'DD-MM-YYYY': function(dateArray){\n        return dateArray.reverse();\n    }\n};\n\nexport const getDateAsNumber = ( dateString, dateFormat ) => {\n    dateFormat = dateFormat || 'YYYY-MM-DD';\n    const splitChar = getSplitChar(dateString);\n\n    if( dateFormat.indexOf(splitChar) < 0 ){\n        return;\n    }\n\n    dateFormat = dateFormat.replace(/[^YMD]/g, '-');\n    dateString = dateString.split(splitChar);\n    dateString = formatMap[dateFormat](dateString).join('');\n    \n    return dateString;\n}\n","\nexport const getSplitChar = string => {\n    // MATCH ANY NON-DIGIT CHAR\n    const separator = string.match(/\\D/);\n    return (separator && separator.length > 0) ? separator[0] : null;\n}\n","\nexport const getUniqueFields = nodeList => {\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    return Array.from( nodeList ).filter(fieldEl => {\n        const name = fieldEl.name,\n              type = fieldEl.type;\n\n        if( name === currentFieldName && type === currentFieldType ){\n            return false;\n        }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        return true;\n    });\n    \n}\n","\nimport { mergeObjects } from './mergeObjects';\n\nexport const getValidateFieldDefault = obj => {\n    return mergeObjects({}, { result: false, fieldEl: null }, obj);\n}\n","\nimport { mergeObjects } from './mergeObjects';\n\nexport const getValidateFormDefault = obj => {\n    return mergeObjects({}, { result: true, fields: [] }, obj);\n}\n","\nexport const isFieldForChangeEvent = fieldEl => {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n}\n","\nimport { mergeObjects } from './mergeObjects';\n\nexport const runFunctionsSequence = ( { functionsList = [], data = {}, stopConditionFn = () => false } = {} ) => {\n    return functionsList.reduce((acc, promiseFn) => {\n        return acc.then(res => {\n            let dataNew = mergeObjects({}, res[res.length - 1]);\n            if( stopConditionFn(dataNew) ){\n                return Promise.resolve(res);\n            }\n            return new Promise(resolve => { resolve(promiseFn(dataNew)) })\n                .then((result = dataNew) => {\n                    res.push(result);\n                    return res;\n                });\n        });\n    }, Promise.resolve([data]))\n        .then(dataList => dataList.length > 1 ? dataList.slice(1) : dataList);\n}\n","\nexport const serializeObject = obj => {\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce((a,k) => {\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n}\n","\nexport const toCamelCase = string => {\n    return string.replace(/-([a-z])/ig, (all, letter) => { return letter.toUpperCase(); });\n}\n","\nimport { addClass, checkDirtyField } from './helpers';\n\nexport const defaultCallbacksInOptions = {\n    fieldOptions: {\n\n        beforeValidation: function beforeValidationDefault ( fieldObj ) {\n\n            const fieldOptions = this.options.fieldOptions;\n\n            checkDirtyField( fieldObj.fieldEl, fieldOptions.cssClasses.dirty );\n            if( !fieldOptions.skipUIfeedback ){\n                addClass( fieldObj.fieldEl.closest('[data-formjs-question]'), fieldOptions.cssClasses.pending );\n            }\n\n        }\n\n    },\n    formOptions: {\n\n        getFormData: function getFormDataDefault ( filteredFields ) {\n\n            const formData = {},\n                  formEl = this.formEl;\n\n            filteredFields.forEach(function( fieldEl ){\n                const isCheckbox = fieldEl.type === 'checkbox',\n                      isRadio = fieldEl.type === 'radio',\n                      isSelect = fieldEl.matches('select'),\n                      name = fieldEl.name;\n                let value = fieldEl.value;\n                                \n                if( isCheckbox ) {\n                    \n                    value = fieldEl.checked;\n                    let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                    if( checkboxes.length > 1 ){\n\n                        value = [];\n                        let checkedElems = checkboxes.filter(field => field.checked);\n                        checkedElems.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                        \n                } else if( isRadio ){\n                    \n                    let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                    value = (checkedRadio === null ? null : checkedRadio.value);\n                    \n                } else if( isSelect ){\n\n                    let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                    if( selectedOpts.length > 1 ){\n\n                        value = [];\n                        selectedOpts.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                }\n\n                formData[ name ] = value;\n            });\n\n            return formData;\n\n        }\n\n    }\n}\n","\nimport { addClass } from './addClass';\nimport { isNodeList } from './isNodeList';\nimport { removeClass } from './removeClass';\n\nexport const checkDirtyField = ( fields, cssClasses ) => {\n\n    var fields = (isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(fieldEl => {\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n}\n","\nimport { defaultCallbacksInOptions } from './optionsUtils';\n\nexport const options = {\n\n    fieldOptions: {\n        beforeValidation:       [defaultCallbacksInOptions.fieldOptions.beforeValidation],\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            pending:            'is-pending',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onValidationCheckAll:   true,\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            {\n            cache:              'no-store',\n            credentials:        'same-origin',\n            headers: {\n                                'Content-Type': 'application/json',\n                                'Accept':       'application/json'\n            },\n            method:             'POST',\n            mode:               'same-origin',\n            redirect:           'follow',\n            timeout:            0,\n            url:                location.href\n        },\n        ajaxSubmit:             true,\n        beforeSend:             [],\n        cssClasses: {\n            ajaxComplete:       'ajax-complete',\n            ajaxError:          'ajax-error',\n            ajaxPending:        'ajax-pending',\n            ajaxSuccess:        'ajax-success',\n            submit:             'is-submitting',\n            valid:              'is-valid'\n        },\n        getFormData:            defaultCallbacksInOptions.formOptions.getFormData,\n        handleSubmit:           true\n    }\n    \n}\n","\nimport { date }         from './validationRules/date';\nimport { email }        from './validationRules/email';\nimport { number }       from './validationRules/number';\n\nexport const validationRules = {\n    date,\n    email,\n    number\n}\n","\n/*\n    DATE AS ISO 8601 DATE FORMAT:\n    YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n*/\n\nexport const date = function( string ){\n    let date = /^((((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29))$/g.test( string ),\n        obj = {\n            result: date\n        };\n\n    return obj;\n}\n","\n// https://regex101.com/r/cdlyJy/3\n\nexport const email = function( string ){\n    let obj = {\n        result: /^[a-zA-Z_-]([\\w.-]?[a-zA-Z0-9])*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.([a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?){2,})+$/.test( string )\n    };\n\n    return obj;\n}\n","\n/*\n    ALL NUMBERS ( INTEGERS AND FLOATING )\n    VALID NUMBERS: 123 | 123.456 | .123\n*/\n\nexport const number = function( string ){\n    let obj = {\n        result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n    };\n\n    return obj;\n}","\nimport { addClass, customEvents, dispatchCustomEvent, getValidateFormDefault, removeClass, runFunctionsSequence } from './helpers';\nimport { ajaxCall } from './ajaxCall';\n\nexport function submit( event ){\n\n    const formEl = event.target,\n          instance = formEl.formjs,\n          options = instance.options,\n          formCssClasses = options.formOptions.cssClasses,\n          isAjaxForm = options.formOptions.ajaxSubmit,\n          btnEl = formEl.querySelector('[type=\"submit\"]'),\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n\n    if( isAjaxForm ){\n        eventPreventDefault(false);\n    }\n\n    if( btnEl ){\n        if( btnEl.disabled ){\n            eventPreventDefault(false);\n            return false;\n        }\n        btnEl.disabled = true;\n    }\n\n    removeClass( formEl, (formCssClasses.ajaxComplete + ' ' + formCssClasses.ajaxError + ' ' + formCssClasses.ajaxSuccess) );\n    addClass( formEl, formCssClasses.submit );\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidationPromise = (handleValidation ? instance.validateForm() : Promise.resolve(getValidateFormDefault()));\n\n    formValidationPromise.then(formValidation => {\n\n        let beforeSendData = { stopExecution: false, formData: {} };\n\n        if( !formValidation.result ){\n            eventPreventDefault();\n            removeClass( formEl, formCssClasses.submit );\n            beforeSendData.stopExecution = true;\n            return [beforeSendData];\n        }\n        \n        let formDataObj = (isAjaxForm ? instance.getFormData() : null),\n            callbacksBeforeSend = options.formOptions.beforeSend;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        const rfsObject = {\n            functionsList: callbacksBeforeSend,\n            data: beforeSendData,\n            stopConditionFn: function(data){ return data.stopExecution; }\n        };\n        return runFunctionsSequence(rfsObject);\n\n    }).then(dataList => {\n\n        if( dataList.filter(data => data.stopExecution).length > 0 ){\n            eventPreventDefault();\n            return false;\n        }\n        \n        if( isAjaxForm ){\n\n            const formData = dataList.pop().formData;\n            addClass( formEl, formCssClasses.ajaxPending );\n            dispatchCustomEvent( formEl, customEvents.form.submit, ajaxCall( formEl, formData, options ) );\n            \n        }\n\n    });\n    \n}\n","\nimport { addClass, mergeObjects, removeClass, serializeObject } from './helpers';\n\nconst getFetchMethod = (response, options) => {\n    const accept = options.headers.get('Accept');\n    const contentType = response.headers.get('Content-Type');\n    const headerOpt = accept || contentType || '';\n\n    if( headerOpt.indexOf('application/json') > -1 || headerOpt === '' ){\n        return 'json';\n    } else if( headerOpt.indexOf('text/') > -1 ){\n        return 'text';\n    } else {\n        return 'blob';\n    }\n};\n\nexport function ajaxCall( formEl, formDataObj, options ){\n\n    let btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        ajaxOptions = mergeObjects( {}, options.formOptions.ajaxOptions ),\n        isMultipart = ajaxOptions.headers['Content-Type'] === 'multipart/form-data';\n\n    ajaxOptions.body = formDataObj;\n    \n    // POST A FormData OBJECT ( multipart )\n    if( isMultipart && options.fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in ajaxOptions.body){\n            formDataMultipart.append( key, ajaxOptions.body[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        ajaxOptions.body = formDataMultipart;\n    }\n\n    if( ajaxOptions.method === 'GET' ){\n\n        // FETCH WITH \"GET\" METHOD CAN'T HAVE \"body\". SO IT IS APPENDED TO THE URL\n        ajaxOptions.url += ( /\\?/.test(ajaxOptions.url) ? '&' : '?' ) + serializeObject( ajaxOptions.body );\n        delete ajaxOptions.body;\n\n    } else {\n\n        if( ajaxOptions.headers['Content-Type'].indexOf('application/x-www-form-urlencoded') > -1 ){\n            // POST A NORMAL FORM\n            ajaxOptions.body = serializeObject( ajaxOptions.body );\n        } else if( !isMultipart ){\n            // POST A JSON STRING\n            ajaxOptions.body = JSON.stringify(ajaxOptions.body);\n        }\n\n    }\n\n    ajaxOptions.headers = new Headers( ajaxOptions.headers );\n\n    if ( ajaxOptions.timeout > 0 ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        ajaxOptions.signal = signal;\n\n        timeoutTimer = window.setTimeout(function() {\n            controller.abort();\n        }, ajaxOptions.timeout);\n    }\n\n    return fetch(ajaxOptions.url, ajaxOptions)\n        .then(function( response ){\n            if( !response.ok ){\n                return Promise.reject(response);\n            }\n\n            let fetchMethod = getFetchMethod(response, ajaxOptions);\n\n            return response[fetchMethod]();\n        })\n        .then(function( data ){\n            addClass( formEl, options.formOptions.cssClasses.ajaxSuccess );\n            return data;\n        })\n        .catch(function( error ){\n            addClass( formEl, options.formOptions.cssClasses.ajaxError );\n            return Promise.reject(error);\n        })\n        .finally(function(){\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n            removeClass( formEl, options.formOptions.cssClasses.submit + ' ' + options.formOptions.cssClasses.ajaxPending );\n            addClass( formEl, options.formOptions.cssClasses.ajaxComplete );\n            btnEl.disabled = false;\n        });\n\n}\n","\nimport { addClass, fieldsStringSelector, isFieldForChangeEvent, removeClass } from './helpers';\nimport { submit } from './submit';\n\nexport const listenerCallbacks = {\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const fieldEl = event.target;\n        let fieldOptions = fieldEl.closest('form').formjs.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n        }\n\n    },\n\n    submit: function( event ){\n        submit(event);\n    },\n\n    validation: function( event ){\n\n        const isChangeEvent = event.type === 'change',\n              fieldEl = event.target,\n              self = fieldEl.closest('form').formjs;\n\n        if( fieldEl.matches( fieldsStringSelector ) ){\n            const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl);\n            \n            if(\n                (isFieldForChangeEventBoolean && isChangeEvent) ||\n                (!isFieldForChangeEventBoolean && !isChangeEvent)\n            ){\n                \n                return self.validateField( fieldEl ).then(obj => {\n                    const type = obj.fieldEl.type,\n                          realtedFieldEqualTo = obj.fieldEl.closest('form').querySelector('[data-equal-to=\"'+ obj.fieldEl.name +'\"]');\n\n                    if(\n                        // FIELD IS ( required OR data-validate-if-filled ) AND RELATED FIELD data-equal-to HAS A VALUE\n                        (obj.fieldEl.required || obj.fieldEl.matches('[data-validate-if-filled]')) && \n                        !(type === 'checkbox' || type === 'radio') && \n                        realtedFieldEqualTo && realtedFieldEqualTo.value.trim() !== ''\n                    ){\n                        return self.validateField( realtedFieldEqualTo );\n                    } else {\n                        return obj;\n                    }\n                });\n\n            }\n        }\n        \n    },\n\n    validationEnd: function( event ){\n\n        const fieldsArray = event.data.fieldEl ? [event.data] : event.data.fields,\n              options = fieldsArray[0].fieldEl.closest('form').formjs.options.fieldOptions;\n\n        fieldsArray.forEach(function( obj ){\n            let fieldEl = obj.fieldEl;\n            if( fieldEl.matches( fieldsStringSelector ) ){\n                let containerEl = fieldEl.closest('[data-formjs-question]'),\n                    isReqFrom = fieldEl.matches('[data-required-from]'),\n                    reqMoreEl = document.querySelector( fieldEl.getAttribute('data-required-from') );\n\n                if( containerEl !== null ){\n                    removeClass( containerEl, options.cssClasses.pending );\n                }\n\n                if( containerEl !== null && !options.skipUIfeedback ){\n\n                    if( obj.result ){\n\n                        if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                            // IF FIELD IS VALID\n                            let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            removeClass( containerEl, errorClasses );\n                            addClass( containerEl, options.cssClasses.valid );\n                        }\n\n                    } else {\n\n                        // IF FIELD IS NOT VALID\n                        let extraErrorClass = options.cssClasses.errorRule;\n\n                        // HANDLE CASE OF FIELD data-checks\n                        let isChecks = fieldEl.matches('[data-checks]'),\n                            checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                        if( (!isChecks && (obj.errors && obj.errors.empty)) || (isChecks && checkedElLength === 0) ){\n                            extraErrorClass = options.cssClasses.errorEmpty;\n                        }\n\n                        let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                            errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                        removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                        addClass( containerEl, errorClasses );\n\n                    }\n                }\n            }\n        });\n\n    }\n\n}\n","\nimport { customEvents } from './helpers';\nimport { listenerCallbacks } from './listenerCallbacks';\n\nexport function formStartup( formEl, options ){\n\n    formEl.noValidate = true;\n\n    let fieldOptions = options.fieldOptions,\n        formOptions = options.formOptions;\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // MAXLENGTH IS BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', listenerCallbacks.pastePrevent, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, listenerCallbacks.validation, useCapturing);\n        });\n\n        formEl.addEventListener(customEvents.field.validation, listenerCallbacks.validationEnd, false);\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nimport { getFilledFields, isFieldForChangeEvent } from './helpers';\nimport { listenerCallbacks } from './listenerCallbacks';\n\nexport const init = function( formEl ){\n\n    const instance = formEl.formjs;\n    const formFields = getFilledFields( formEl );\n\n    // VALIDATE ALL FILLED FIELDS\n    return Promise.all( formFields.map(fieldEl => {\n\n        const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl);\n        const fakeEventObj = { target: fieldEl, type: (isFieldForChangeEventBoolean ? 'change': '') };\n        return listenerCallbacks.validation( fakeEventObj );\n\n    }) ).then(fields => {\n        instance.isInitialized = true;\n        return { instance, fields };\n    });;\n\n}\n","\nimport { fieldsStringSelector } from './fieldsStringSelector';\nimport { getUniqueFields } from './getUniqueFields';\n\nexport const getFilledFields = formEl => {\n    return getUniqueFields( formEl.querySelectorAll(fieldsStringSelector) )\n    .map(fieldEl => {\n\n        const name = fieldEl.name,\n              type = fieldEl.type,\n              isCheckboxOrRadio = (type === 'checkbox' || type === 'radio'),\n              fieldChecked = formEl.querySelector('[name=\"' + name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        return (\n            isCheckboxOrRadio ? (fieldChecked || null) :\n            (isReqFrom && reqMoreEl.checked) || (!isReqFrom && fieldEl.value) ? fieldEl : null\n        );\n\n    })\n    .filter(fieldEl => fieldEl !== null);\n}\n","\nimport { checkbox }     from './validationRules/checkbox';\nimport { equalTo }      from './validationRules/equalTo';\nimport { exactLength }  from './validationRules/exactLength';\nimport { file }         from './validationRules/file';\nimport { length }       from './validationRules/length';\nimport { max }          from './validationRules/max';\nimport { maxlength }    from './validationRules/maxlength';\nimport { min }          from './validationRules/min';\nimport { minlength }    from './validationRules/minlength';\nimport { pattern }      from './validationRules/pattern';\nimport { radio }        from './validationRules/radio';\nimport { requiredFrom } from './validationRules/requiredFrom';\n\nexport const validationRulesAttributes = {\n    checkbox,\n    equalTo,\n    exactLength,\n    file,\n    length,\n    max,\n    maxlength,\n    min,\n    minlength,\n    pattern,\n    radio,\n    requiredFrom,\n}\n","\nimport { checks } from './checks';\n\nexport const checkbox = function( fieldEl ){\n    let dataChecksEl = fieldEl.closest('form').querySelector('[name=\"' + fieldEl.name + '\"][data-checks]');\n    return dataChecksEl ? checks(dataChecksEl): {result: fieldEl.checked};\n}\n","\nexport const checks = function( fieldEl ){\n    try {\n        let attrValue = JSON.parse( fieldEl.getAttribute('data-checks') ),\n            checkedElLength = fieldEl.closest('form').querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n            isMinOk = checkedElLength >= attrValue[0],\n            isMaxOk = checkedElLength <= attrValue[1],\n            obj = { result: isMinOk && isMaxOk };\n\n        if( !obj.result ){\n            obj.errors = { checks: true };\n            if( !isMinOk ){ obj.errors.minChecks = true; }\n            if( !isMaxOk ){ obj.errors.maxChecks = true; }\n        }\n\n        return obj;\n    } catch(e){\n        throw new Error('\"data-checks\" attribute is not a valid array!');\n    }\n}\n","\nexport const equalTo = function( fieldEl ){\n    let checkFromEl = fieldEl.closest('form').querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n        obj = { result: !!checkFromEl && fieldEl.value === checkFromEl.value };\n\n    if( !obj.result ){\n        obj.errors = { equalTo: true };\n    }\n\n    return obj;\n}\n","\nexport const exactLength = function( fieldEl ){\n    try {\n        let valueLength = fieldEl.value.length,\n            exactLength = fieldEl.getAttribute('data-exact-length') * 1,\n            obj = { result: !Number.isNaN(exactLength) && valueLength === exactLength };\n\n        if( !obj.result ){\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n        }\n\n        return obj;\n    }catch(e){\n        throw new Error('\"data-exact-length\" attribute is not a number!');\n    }\n}\n","\nexport const file = function( fieldEl, fieldOptions ){\n    let maxFileSize = (fieldEl.getAttribute('data-max-file-size') || fieldOptions.maxFileSize) * 1,\n        MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n        filesList = Array.from(fieldEl.files),\n        obj = { result: true };\n\n    filesList.forEach(function( file ){\n        let exceedMaxFileSize = maxFileSize > 0 && (file.size/1024/1024) > maxFileSize,\n            isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n        if( exceedMaxFileSize || !isAcceptedFileType ){\n            obj.result = false;\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.file = true;\n            if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n            if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n        }\n    });\n\n    return obj;\n}\n","\nexport const length = function( fieldEl ){\n    try {\n        let valueL = fieldEl.value.length,\n            attrValue = JSON.parse( fieldEl.getAttribute('data-length') ),\n            isMinlengthOk = valueL >= attrValue[0],\n            isMaxlengthOk = valueL <= attrValue[1],\n            obj = { result: isMinlengthOk && isMaxlengthOk };\n\n        if( !obj.result ){\n            obj.errors = { stringLength: true };\n            if( !isMinlengthOk ){ obj.errors.minlength = true; }\n            if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n        }\n\n        return obj;\n    } catch(e){\n        throw new Error('\"data-length\" attribute is not a valid array!');\n    }\n}\n","\nimport { getDateAsNumber } from '../helpers';\n\nexport const max = function( fieldEl ){\n    let value = fieldEl.value,\n        maxVal = fieldEl.max,\n        dateFormat = fieldEl.getAttribute('data-date-format');\n    \n    if( fieldEl.type === 'date' || dateFormat ){\n        value = getDateAsNumber( value, dateFormat );\n        maxVal = maxVal.split('-').join('');\n    }\n\n    value = value * 1;\n    maxVal = maxVal * 1;\n\n    let obj = { result: value <= maxVal };\n\n    if( !obj.result ){\n        obj.errors = { max: true };\n    }\n    \n    return obj;\n}\n","\nexport const maxlength = function( fieldEl ){\n    try {\n        const obj = { result: fieldEl.value.length <= fieldEl.maxLength * 1 };\n\n        if( !obj.result ){\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    }catch(e){\n        throw new Error('\"maxlength\" is not a number!');\n    }\n}\n","\nimport { getDateAsNumber } from '../helpers';\n\nexport const min = function( fieldEl ){\n    let value = fieldEl.value,\n        minVal = fieldEl.min,\n        dateFormat = fieldEl.getAttribute('data-date-format');\n    \n    if( fieldEl.type === 'date' || fieldEl.getAttribute('data-date-format') ){\n        value = getDateAsNumber( value, dateFormat );\n        minVal = minVal.split('-').join('');\n    }\n\n    value = value * 1;\n    minVal = minVal * 1;\n\n    let obj = { result: value >= minVal };\n\n    if( !obj.result ){\n        obj.errors = { min: true };\n    }\n    \n    return obj;\n}\n","\nexport const minlength = function( fieldEl ){\n    try {\n        const obj = { result: fieldEl.value.length >= fieldEl.minLength * 1 };\n\n        if( !obj.result ){\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    }catch(e){\n        throw new Error('\"minlength\" is not a number!');\n    }\n}\n","\nexport const pattern = function( fieldEl ){\n    try {\n        let fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = { result: fieldRegex.test( fieldEl.value ) };\n\n        if( !obj.result ){\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    }catch(e){\n        throw new Error('\"pattern\" is not a valid RegExp!');\n    }\n}\n","\nexport const radio = function( fieldEl ){\n    let fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n        isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0;\n\n    return { result: isValid };\n}\n","\nexport const requiredFrom = function( fieldEl ){\n    let formEl = fieldEl.closest('form'),\n        isValidValue = fieldEl.value.trim().length > 0,\n        reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n        checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n        obj = { result: checkedEl !== null };\n\n    if( reqMoreEl.checked && reqMoreEl.required ){\n        obj.result = isValidValue;\n    }\n\n    if( !obj.result ){\n        obj.errors = { requiredFrom: true };\n    }\n    \n    return obj;\n}\n","\nimport { getValidateFieldDefault, isDOMNode, runFunctionsSequence } from './helpers';\nimport { isValid } from './isValid';\n\nexport function checkFieldValidity( fieldEl, fieldOptions, validationRules, validationErrors ){\n\n    if( !isDOMNode(fieldEl) ){\n        const obj = getValidateFieldDefault({fieldEl});\n        return Promise.resolve(obj);\n    }\n\n    const formEl = fieldEl.closest('form'),\n          isValidValue = fieldEl.value.trim().length > 0;\n\n     // HANDLE FIELDS radio/data-require-more\n     if( fieldEl.type === 'radio' ){\n        const checkedEl = fieldEl.checked ? fieldEl : formEl.querySelector('[name=\"'+ fieldEl.name +'\"]:checked'),\n              reqMoreIsChecked = checkedEl && checkedEl.matches('[data-require-more]'),\n              findReqMoreEl = reqMoreIsChecked ? checkedEl : formEl.querySelector('[data-require-more][name=\"'+ fieldEl.name +'\"]'),\n              findReqFromEl = findReqMoreEl ? formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null;\n        \n        if( checkedEl && findReqFromEl ){\n            findReqFromEl.required = findReqMoreEl.required && findReqMoreEl.checked;\n            if( !reqMoreIsChecked ){\n                findReqFromEl.value = '';\n            } else if( fieldOptions.focusOnRelated ) {\n                findReqFromEl.focus();\n            }\n        }\n    }\n\n    // HANDLE FIELDS data-required-from\n    if( fieldEl.matches('[data-required-from]') && isValidValue ){\n        const reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n        reqMoreEl.checked = true;\n        fieldEl.required = reqMoreEl.required;\n    }\n\n    const needsValidation = fieldEl.required || (fieldEl.matches('[data-validate-if-filled]') && isValidValue);\n\n    return runFunctionsSequence({\n            functionsList: fieldOptions.beforeValidation,\n            data: {fieldEl}\n        })\n        .then(data => {\n            let dataObj = data.pop();\n            return new Promise(resolve => {\n                if( !needsValidation ){\n                    dataObj.result = true;\n                }\n                resolve( needsValidation ? isValid(fieldEl, fieldOptions, validationRules, validationErrors) : dataObj );\n            });\n        });\n\n}\n","\nimport { getValidateFieldDefault, mergeObjects, toCamelCase } from './helpers';\nimport { validationRulesAttributes } from './validationRulesAttributes';\n\nexport function isValid( fieldEl, fieldOptions, validationRules, validationErrors ){\n\n    const fieldType = fieldEl.matches('[data-subtype]') ? toCamelCase(fieldEl.getAttribute('data-subtype')) : fieldEl.type,\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0;\n\n    let obj = getValidateFieldDefault({result: isValidValue, fieldEl});\n\n    if( !obj.result ){\n        obj.errors = { empty: true };\n        return Promise.resolve(obj);\n    }\n\n    let attrValidationsResult;\n\n    return new Promise(resolve => {\n\n        // RUN SPECIFIC VALIDATIONS FOR validationRulesAttributes\n        attrValidationsResult = Array.from(fieldEl.attributes).reduce((valResult, attr) => {\n            // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n            const attrName = toCamelCase( attr.name.replace('data-', '') ),\n                  attrValue = attr.value,\n                  isAttrValueWithFn = attrName === 'type' && typeof validationRulesAttributes[attrValue] === 'function',\n                  isAttrNameWithFn = typeof validationRulesAttributes[attrName] === 'function';\n\n            if( isAttrValueWithFn || isAttrNameWithFn ){\n                const method = isAttrValueWithFn ? attrValue : attrName;\n                const extraVal = validationRulesAttributes[method]( fieldEl, fieldOptions );\n                if( !extraVal.result ){\n                    obj = mergeObjects({}, obj, extraVal);\n                    return false;\n                }\n            }\n            return valResult;\n        }, isValidValue);\n\n        // RUN VALIDATION FOR validationRules\n        if( typeof validationRules[fieldType] === 'function' ){\n            resolve( validationRules[fieldType](fieldValue, fieldEl) );\n        } else {\n            resolve( obj );\n        }\n\n    }).then(data => {\n\n        obj = mergeObjects( {}, obj, data );\n        obj.result = obj.result && attrValidationsResult;\n\n        if( !obj.result ){\n            const fieldErrors = (typeof validationErrors[fieldType] === 'function' ? validationErrors[fieldType](fieldValue, fieldEl) : {});\n            obj.errors = mergeObjects({}, obj.errors || {}, fieldErrors);\n            obj.errors.rule = true;\n        }\n        \n        return obj;\n\n    });\n\n}\n","\nimport { fieldsStringSelector, getUniqueFields, getValidateFieldDefault, getValidateFormDefault, mergeObjects } from './helpers';\nimport { checkFieldValidity } from './checkFieldValidity';\n\nexport function checkFormValidity( formEl, fieldOptions, validationRules, validationErrors, fieldToSkip = null ){\n\n    fieldOptions = mergeObjects( {}, fieldOptions, {focusOnRelated: false} );\n\n    const obj = getValidateFormDefault(),\n          fieldsList = getUniqueFields( formEl.querySelectorAll(fieldsStringSelector) );\n\n    return Promise.all( fieldsList.map(fieldEl => {\n\n        if( fieldToSkip && fieldEl === fieldToSkip ){\n            const obj2 = getValidateFieldDefault({fieldEl, result: true});\n            return Promise.resolve(obj2);\n        }\n        \n        return checkFieldValidity( fieldEl, fieldOptions, validationRules, validationErrors );\n\n    }) ).then(list => {\n\n        let areAllFieldsValid = list.filter(fieldObj => !fieldObj.result).length === 0;\n        obj.result = areAllFieldsValid;\n        obj.fields = list;\n\n        return obj;\n\n    });\n\n}\n","\nimport { version }              from './modules/version';\nimport { customEvents, dispatchCustomEvent, excludeSelector, mergeObjects, removeClass } from './modules/helpers';\nimport { options }              from './modules/options';\nimport { validationRules }      from './modules/validationRules';\nimport { validationErrors }     from './modules/validationErrors';\nimport { listenerCallbacks }    from './modules/listenerCallbacks';\nimport { constructorFn }        from './modules/constructor';\nimport { destroy }              from './modules/destroy';\nimport { init }                 from './modules/init';\nimport { checkFieldValidity }   from './modules/checkFieldValidity';\nimport { checkFormValidity }    from './modules/checkFormValidity';\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        constructorFn(this, formEl, optionsObj);\n    }\n\n    destroy(){\n        destroy(this.formEl, this.options);\n    }\n    \n    getFormData(){\n        const formFieldsEl = this.formEl.querySelectorAll('input, select, textarea'),\n              filteredFields = Array.from( formFieldsEl ).filter( elem => elem.matches(excludeSelector) );\n        return this.options.formOptions.getFormData(filteredFields);\n    }\n\n    init(){\n        return init(this.formEl);\n    }\n\n    validateField( fieldEl, fieldOptions ){\n        fieldEl = (typeof fieldEl === 'string' ? this.formEl.querySelector(fieldEl) : fieldEl);\n        fieldOptions = mergeObjects({}, this.options.fieldOptions, fieldOptions);\n        const formEl = this.formEl;\n        const skipUIfeedback = this.options.fieldOptions.skipUIfeedback;\n        return checkFieldValidity(fieldEl, fieldOptions, this.validationRules, this.validationErrors)\n            .then(obj => {\n                return new Promise(resolve => {\n                    if( obj.fieldEl ){\n                        dispatchCustomEvent( obj.fieldEl, customEvents.field.validation, obj, { bubbles: false } );\n                        dispatchCustomEvent( formEl, customEvents.field.validation, obj );\n                        if( fieldOptions.onValidationCheckAll && obj.result ){\n                            // FORCE skipUIfeedback TO true\n                            fieldOptions.skipUIfeedback = true;\n                            resolve(\n                                checkFormValidity( formEl, fieldOptions, this.validationRules, this.validationErrors, obj.fieldEl )\n                                    .then(dataForm => {\n                                        const clMethodName = dataForm.result ? 'add' : 'remove';\n                                        formEl.classList[clMethodName]( this.options.formOptions.cssClasses.valid );\n                                        dispatchCustomEvent( formEl, customEvents.form.validation, dataForm );\n                                        // RESTORE skipUIfeedback TO THE ORIGINAL VALUE\n                                        fieldOptions.skipUIfeedback = skipUIfeedback;\n                                        return obj;\n                                    })\n                            );\n                        } else if( !obj.result ){\n                            removeClass( formEl, this.options.formOptions.cssClasses.valid );\n                        }\n                    }\n                    resolve( obj );\n                });\n            });\n    }\n\n    validateForm( fieldOptions ){\n        fieldOptions = mergeObjects({}, this.options.fieldOptions, fieldOptions);\n        const formEl = this.formEl;\n        return checkFormValidity(formEl, fieldOptions, this.validationRules, this.validationErrors)\n            .then(data => {\n                const clMethodName = data.result ? 'add' : 'remove';\n                formEl.classList[clMethodName]( this.options.formOptions.cssClasses.valid );\n                listenerCallbacks.validationEnd( {data} );\n                dispatchCustomEvent( formEl, customEvents.form.validation, data );\n                return data;\n            });\n\n    }\n    \n    static addValidationErrors( errorsObj ){\n        this.prototype.validationErrors = mergeObjects({}, this.prototype.validationErrors, errorsObj);\n    }\n\n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = mergeObjects({}, this.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationErrors = validationErrors;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\nexport default Form;\n","\nimport { checkFormEl, isNodeList, mergeObjects }   from './helpers';\nimport { formStartup }                             from './formStartup';\n\nexport function constructorFn( self, formEl, optionsObj ){\n\n    let argsL = arguments.length,\n        checkFormElem = checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormElem.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormElem.element;\n    self.formEl.formjs = self;\n    self.options = mergeObjects({}, self.constructor.prototype.options, optionsObj);\n\n    // BINDING CONTEXT FOR FUTURE EXECUTION\n    const cbList = [\n        // IN fieldOptions\n        'beforeValidation',\n        // IN formOptions\n        'beforeSend',\n        'getFormData'\n    ];\n    cbList.forEach(cbName => {\n        let optionType = self.options.formOptions[cbName] ? 'formOptions' : 'fieldOptions',\n            cbOpt = self.options[optionType][cbName];\n\n        if( cbOpt ){\n            self.options[optionType][cbName] = ( Array.isArray(cbOpt) ? cbOpt.map(cbFn => cbFn.bind(self)) : cbOpt.bind(self) );\n        }\n    });\n\n    formStartup( self.formEl, self.options );\n    \n}\n","\nimport { customEvents } from './helpers';\nimport { listenerCallbacks } from './listenerCallbacks';\n\n\nexport function destroy( formEl, options ){\n\n    if( options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', listenerCallbacks.pastePrevent, false);\n    }\n\n    if( options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', listenerCallbacks.submit);\n    }\n\n    options.fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, listenerCallbacks.validation, useCapturing);\n    });\n\n    formEl.removeEventListener(customEvents.field.validation, listenerCallbacks.validationEnd, false);\n\n    delete formEl.formjs;\n    \n}\n","\nexport const excludeSelector = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])'\n","\nexport const validationErrors = {\n\n    email: function ( string ) {\n        const obj = {};\n\n        if( string.indexOf('@') === -1 ){\n\n            // @ IS MISSING\n            obj.missingAtChar = true;\n\n        } else {\n\n            let splitAt_at = string.split('@');\n            if( splitAt_at[0].length === 0 ){\n\n                // USER NAME IS MISSING\n                obj.missingUserName = true;\n\n            }\n\n            if( splitAt_at[1].length === 0 ){\n\n                // IS EMPTY AFTER @\n                obj.missingDomain = true;\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                // DOT IS MISSING\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else {\n\n                // EXTENSION MISSING OR NOT LONG ENOUGH\n                let splitAt_dot = splitAt_at[1].split('.'),\n                    extLength = splitAt_dot[1].length;\n                if( extLength === 0 ) {\n                    obj.missingExtension = true;\n                } else if( extLength < 2 ){\n                    obj.minlengthExtension = true;\n                }\n\n            }\n        }\n\n        return obj;\n\n    }\n\n}"],"names":["addClass","element","cssClasses","split","forEach","className","classList","add","isNodeList","nodeList","NodeList","prototype","isPrototypeOf","removeClass","remove","isDOMNode","node","Element","checkFormEl","formEl","isString","isFormSelector","document","querySelector","tagName","toLowerCase","result","customEvents","validation","submit","mergeObjects","out","i","arguments","length","obj","key","isArray","Object","toString","call","isObject","hasOwnProperty","concat","slice","Array","push","dispatchCustomEvent","elem","eventName","data","eventOptions","bubbles","eventObj","Event","dispatchEvent","fieldsStringSelector","formatMap","YYYY-MM-DD","dateArray","MM-DD-YYYY","DD-MM-YYYY","reverse","getDateAsNumber","dateString","dateFormat","splitChar","string","separator","match","getSplitChar","indexOf","replace","join","getUniqueFields","currentFieldName","currentFieldType","from","filter","fieldEl","name","type","matches","getValidateFieldDefault","getValidateFormDefault","fields","isFieldForChangeEvent","runFunctionsSequence","functionsList","stopConditionFn","reduce","acc","promiseFn","then","res","dataNew","Promise","resolve","dataList","serializeObject","constructor","keys","a","k","encodeURIComponent","toCamelCase","all","letter","toUpperCase","defaultCallbacksInOptions","fieldOptions","beforeValidation","fieldObj","this","options","dirty","containerEl","closest","value","skipUIfeedback","pending","formOptions","getFormData","filteredFields","formData","isCheckbox","isRadio","isSelect","checked","checkboxes","querySelectorAll","field","checkedRadio","selectedOpts","option","selected","error","errorEmpty","errorRule","valid","focusOnRelated","handleFileUpload","handleValidation","maxFileSize","onValidationCheckAll","preventPasteFields","strictHtmlValidation","validateOnEvents","ajaxOptions","cache","credentials","headers","Content-Type","Accept","method","mode","redirect","timeout","url","location","href","ajaxSubmit","beforeSend","ajaxComplete","ajaxError","ajaxPending","ajaxSuccess","handleSubmit","validationRules","date","test","email","number","event","target","instance","formjs","formCssClasses","isAjaxForm","btnEl","eventPreventDefault","enableBtn","disabled","preventDefault","validateForm","formValidation","beforeSendData","stopExecution","formDataObj","callbacksBeforeSend","pop","timeoutTimer","isMultipart","body","formDataMultipart","FormData","append","files","file","idx","JSON","stringify","Headers","controller","AbortController","signal","window","setTimeout","abort","fetch","response","ok","reject","fetchMethod","accept","get","contentType","headerOpt","getFetchMethod","catch","finally","clearTimeout","ajaxCall","listenerCallbacks","fieldValue","stopImmediatePropagation","valueReplaced","maxLength","keyPressed","which","keyCode","allowedKeys","isChangeEvent","self","isFieldForChangeEventBoolean","validateField","realtedFieldEqualTo","required","trim","fieldsArray","isReqFrom","reqMoreEl","getAttribute","errorClasses","extraErrorClass","isChecks","checkedElLength","errors","empty","errorClassToRemove","formStartup","noValidate","addEventListener","useCapturing","init","formFields","map","isCheckboxOrRadio","fieldChecked","getFilledFields","isInitialized","validationRulesAttributes","checkbox","dataChecksEl","attrValue","parse","isMinOk","isMaxOk","checks","minChecks","maxChecks","e","Error","equalTo","checkFromEl","exactLength","valueLength","Number","isNaN","minlength","maxlength","MIMEtype","RegExp","filesList","exceedMaxFileSize","size","isAcceptedFileType","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","stringLength","max","maxVal","min","minVal","minLength","pattern","fieldPattern","radio","requiredFrom","isValidValue","checkFieldValidity","validationErrors","checkedEl","reqMoreIsChecked","findReqMoreEl","findReqFromEl","id","focus","needsValidation","dataObj","fieldType","attrValidationsResult","attributes","valResult","attr","attrName","isAttrValueWithFn","isAttrNameWithFn","extraVal","fieldErrors","rule","isValid","checkFormValidity","fieldToSkip","fieldsList","obj2","list","areAllFieldsValid","Form","[object Object]","optionsObj","argsL","checkFormElem","cbList","cbName","optionType","cbOpt","cbFn","bind","constructorFn","removeEventListener","destroy","formFieldsEl","dataForm","clMethodName","errorsObj","rulesObj","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","version"],"mappings":"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"}
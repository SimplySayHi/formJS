{"version":3,"file":"formjs-esm.min.js","sources":["../src/modules/version.js","../src/modules/helpers/addClass.js","../src/modules/helpers/isNodeList.js","../src/modules/helpers/removeClass.js","../src/modules/helpers/isDOMNode.js","../src/modules/helpers/customEvents.js","../src/modules/helpers/isPlainObject.js","../src/modules/helpers/mergeObjects.js","../src/modules/helpers/dispatchCustomEvent.js","../src/modules/helpers/fieldsStringSelector.js","../src/modules/helpers/getDateAsNumber.js","../src/modules/helpers/getSplitChar.js","../src/modules/helpers/getUniqueFields.js","../src/modules/helpers/getValidateFieldDefault.js","../src/modules/helpers/getValidateFormDefault.js","../src/modules/helpers/isFieldForChangeEvent.js","../src/modules/helpers/runFunctionsSequence.js","../src/modules/helpers/serializeObject.js","../src/modules/helpers/toCamelCase.js","../src/modules/optionsUtils.js","../src/modules/helpers/checkDirtyField.js","../src/modules/options.js","../src/modules/validationRules.js","../src/modules/validationRules/date.js","../src/modules/validationRules/email.js","../src/modules/validationRules/number.js","../src/modules/validationRules/checkbox.js","../src/modules/validationRules/checks.js","../src/modules/validationRules/equalTo.js","../src/modules/validationRules/exactLength.js","../src/modules/validationRules/file.js","../src/modules/validationRules/length.js","../src/modules/validationRules/max.js","../src/modules/validationRules/maxlength.js","../src/modules/validationRules/min.js","../src/modules/validationRules/minlength.js","../src/modules/validationRules/pattern.js","../src/modules/validationRules/radio.js","../src/modules/listenerCallbacks/dataTypeNumber.js","../src/modules/listenerCallbacks/formValidationEnd.js","../src/modules/listenerCallbacks/keypressMaxlength.js","../src/modules/listenerCallbacks/pastePrevent.js","../src/modules/listenerCallbacks/submit.js","../src/modules/ajaxCall.js","../src/modules/listenerCallbacks/validation.js","../src/modules/listenerCallbacks/validationEnd.js","../src/modules/init.js","../src/modules/helpers/getFilledFields.js","../src/modules/checkFieldValidity.js","../src/modules/isValid.js","../src/modules/checkFormValidity.js","../src/index.js","../src/modules/helpers/checkFormEl.js","../src/modules/formStartup.js","../src/modules/destroy.js","../src/modules/helpers/excludeSelector.js","../src/modules/validationErrors.js"],"sourcesContent":["\nexport const version = '4.3.2';\n","\nexport const addClass = ( element, cssClasses ) => {\n    cssClasses.split(' ').forEach(className => {\n        element.classList.add( className );\n    });\n}\n","\nexport const isNodeList = nodeList => {\n    return NodeList.prototype.isPrototypeOf( nodeList );\n}\n","\nexport const removeClass = ( element, cssClasses ) => {\n    cssClasses.split(' ').forEach(className => {\n        element.classList.remove( className );\n    });\n}\n","\nexport const isDOMNode = node => {\n    return Element.prototype.isPrototypeOf( node );\n}\n","\nexport const customEvents = {\n    field: {\n        validation: 'fjs.field:validation'\n    },\n    form: {\n        submit:     'fjs.form:submit',\n        validation: 'fjs.form:validation'\n    }\n}\n","\nexport const isPlainObject = object => {\n    return Object.prototype.toString.call( object ) === '[object Object]';\n}\n","\nimport { isPlainObject } from './isPlainObject';\n\nexport const mergeObjects = function( out = {} ){\n    Array.from(arguments).slice(1).filter(arg => !!arg).forEach(arg => {\n        Object.keys(arg).forEach(key => {\n            if( Array.isArray(arg[key]) ){\n                out[key] = (out[key] || []).concat( arg[key].slice(0) );\n            } else if( isPlainObject(arg[key]) ){\n                out[key] = mergeObjects((out[key] || {}), arg[key]);\n            } else {\n                // * STRING | NUMBER | BOOLEAN | FUNCTION\n                if( Array.isArray(out[key]) ){\n                    // IF THIS IS ONE OF ABOVE (*) AND THE DESTINATION OBJECT IS AN ARRAY\n                    out[key].push(arg[key]);\n                } else {\n                    out[key] = arg[key];\n                }\n            }\n        });\n    });\n\n    return out;\n}\n","\nimport { mergeObjects } from './mergeObjects';\n\nexport const dispatchCustomEvent = ( elem, eventName, data = {}, eventOptions = {} ) => {\n    eventOptions = mergeObjects({}, { bubbles: true }, eventOptions);\n    const eventObj = new Event(eventName, eventOptions);\n    eventObj.data = data;\n    elem.dispatchEvent( eventObj );\n}\n","\nexport const fieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"hidden\"]), select, textarea'\n","\nimport { getSplitChar } from './getSplitChar';\n\nconst formatMap = {\n    'YYYY-MM-DD': function(dateArray){\n        return dateArray;\n    },\n    'MM-DD-YYYY': function(dateArray){\n        return [dateArray[2], dateArray[0], dateArray[1]];\n    },\n    'DD-MM-YYYY': function(dateArray){\n        return dateArray.reverse();\n    }\n};\n\nexport const getDateAsNumber = ( dateString, dateFormat ) => {\n    dateFormat = dateFormat || 'YYYY-MM-DD';\n    const splitChar = getSplitChar(dateString);\n\n    if( dateFormat.indexOf(splitChar) < 0 ){\n        return;\n    }\n\n    dateFormat = dateFormat.replace(/[^YMD]/g, '-');\n    dateString = dateString.split(splitChar);\n    dateString = formatMap[dateFormat](dateString).join('');\n    \n    return dateString;\n}\n","\nexport const getSplitChar = string => {\n    // MATCH ANY NON-DIGIT CHAR\n    const separator = string.match(/\\D/);\n    return (separator && separator.length > 0) ? separator[0] : null;\n}\n","\nexport const getUniqueFields = nodeList => {\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    return Array.from( nodeList ).filter(fieldEl => {\n        const name = fieldEl.name,\n              type = fieldEl.type;\n\n        if( name === currentFieldName && type === currentFieldType ){\n            return false;\n        }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        return true;\n    });\n    \n}\n","\nimport { mergeObjects } from './mergeObjects';\n\nexport const getValidateFieldDefault = obj => {\n    return mergeObjects({}, { result: false, fieldEl: null }, obj);\n}\n","\nimport { mergeObjects } from './mergeObjects';\n\nexport const getValidateFormDefault = obj => {\n    return mergeObjects({}, { result: true, fields: [] }, obj);\n}\n","\nexport const isFieldForChangeEvent = fieldEl => {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n}\n","\nimport { mergeObjects } from './mergeObjects';\n\nexport const runFunctionsSequence = ( { functionsList = [], data = {}, stopConditionFn = () => false } = {} ) => {\n    return functionsList.reduce((acc, promiseFn) => {\n        return acc.then(res => {\n            let dataNew = mergeObjects({}, res[res.length - 1]);\n            if( stopConditionFn(dataNew) ){\n                return Promise.resolve(res);\n            }\n            return new Promise(resolve => { resolve(promiseFn(dataNew)) })\n                .then((result = dataNew) => {\n                    res.push(result);\n                    return res;\n                });\n        });\n    }, Promise.resolve([data]))\n        .then(dataList => dataList.length > 1 ? dataList.slice(1) : dataList);\n}\n","\nexport const serializeObject = obj => {\n    const objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce((a,k) => {\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n}\n","\nexport const toCamelCase = string => {\n    return string.replace(/-([a-z])/ig, (all, letter) => { return letter.toUpperCase(); });\n}\n","\nimport { addClass, checkDirtyField } from './helpers';\n\nexport const defaultCallbacksInOptions = {\n    fieldOptions: {\n\n        beforeValidation: function beforeValidationDefault ( fieldObj ) {\n\n            const fieldOptions = this.options.fieldOptions;\n\n            checkDirtyField( fieldObj.fieldEl, fieldOptions );\n            if( !fieldOptions.skipUIfeedback ){\n                addClass( fieldObj.fieldEl.closest( fieldOptions.questionContainer ), fieldOptions.cssClasses.pending );\n            }\n\n        }\n\n    },\n    formOptions: {\n\n        getFormData: function getFormDataDefault ( filteredFields ) {\n\n            const formData = {},\n                  formEl = this.formEl;\n\n            filteredFields.forEach(function( fieldEl ){\n                const isCheckbox = fieldEl.type === 'checkbox',\n                      isRadio = fieldEl.type === 'radio',\n                      isSelect = fieldEl.matches('select'),\n                      name = fieldEl.name;\n                let value = fieldEl.value;\n                                \n                if( isCheckbox ) {\n                    \n                    value = fieldEl.checked;\n                    const checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                    if( checkboxes.length > 1 ){\n\n                        value = [];\n                        const checkedElems = checkboxes.filter(field => field.checked);\n                        checkedElems.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                        \n                } else if( isRadio ){\n                    \n                    const checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                    value = (checkedRadio === null ? null : checkedRadio.value);\n                    \n                } else if( isSelect ){\n\n                    const selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                    if( selectedOpts.length > 1 ){\n\n                        value = [];\n                        selectedOpts.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                }\n\n                formData[ name ] = value;\n            });\n\n            return formData;\n\n        }\n\n    }\n}\n","\nimport { addClass } from './addClass';\nimport { isNodeList } from './isNodeList';\nimport { removeClass } from './removeClass';\n\nexport const checkDirtyField = ( fields, fieldOptions ) => {\n\n    fields = isNodeList(fields) ? Array.from( fields ) : [fields];\n    fields.forEach(fieldEl => {\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            const containerEl = fieldEl.closest( fieldOptions.questionContainer ) || fieldEl;\n            if( fieldEl.value ){\n                addClass( containerEl, fieldOptions.cssClasses.dirty );\n            } else {\n                removeClass( containerEl, fieldOptions.cssClasses.dirty );\n            }\n        }\n    });\n    \n}\n","\nimport { defaultCallbacksInOptions } from './optionsUtils';\n\nexport const options = {\n\n    fieldOptions: {\n        beforeValidation:       [defaultCallbacksInOptions.fieldOptions.beforeValidation],\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            pending:            'is-pending',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onValidationCheckAll:   true,\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        questionContainer:      '[data-formjs-question]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            {\n            cache:              'no-store',\n            credentials:        'same-origin',\n            headers: {\n                                'Content-Type': 'application/json',\n                                'Accept':       'application/json'\n            },\n            method:             'POST',\n            mode:               'same-origin',\n            redirect:           'follow',\n            timeout:            0,\n            url:                location.href\n        },\n        ajaxSubmit:             true,\n        beforeSend:             [],\n        cssClasses: {\n            ajaxComplete:       'ajax-complete',\n            ajaxError:          'ajax-error',\n            ajaxPending:        'ajax-pending',\n            ajaxSuccess:        'ajax-success',\n            submit:             'is-submitting',\n            valid:              'is-valid'\n        },\n        getFormData:            defaultCallbacksInOptions.formOptions.getFormData,\n        handleSubmit:           true\n    }\n    \n}\n","\nimport { date }         from './validationRules/date';\nimport { email }        from './validationRules/email';\nimport { number }       from './validationRules/number';\n\nimport { checkbox }     from './validationRules/checkbox';\nimport { equalTo }      from './validationRules/equalTo';\nimport { exactLength }  from './validationRules/exactLength';\nimport { file }         from './validationRules/file';\nimport { length }       from './validationRules/length';\nimport { max }          from './validationRules/max';\nimport { maxlength }    from './validationRules/maxlength';\nimport { min }          from './validationRules/min';\nimport { minlength }    from './validationRules/minlength';\nimport { pattern }      from './validationRules/pattern';\nimport { radio }        from './validationRules/radio';\n\nexport const validationRules = {\n    date,\n    email,\n    number,\n\n    checkbox,\n    equalTo,\n    exactLength,\n    file,\n    length,\n    max,\n    maxlength,\n    min,\n    minlength,\n    pattern,\n    radio\n}\n","\n/*\n    DATE AS ISO 8601 DATE FORMAT:\n    YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n*/\n\nexport const date = function( string ){\n    return {\n        result: /^((((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29))$/g.test( string )\n    };\n}\n","\n// https://regex101.com/r/cdlyJy/3\n\nexport const email = function( string ){\n    return {\n        result: /^[a-zA-Z_-]([\\w.-]?[a-zA-Z0-9])*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.([a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?){2,})+$/.test( string )\n    };\n}\n","\n/*\n    ALL NUMBERS ( INTEGERS AND FLOATING )\n    VALID NUMBERS: 123 | 123.456 | .123\n*/\n\nexport const number = function( string ){\n    return {\n        result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n    };\n}","\nimport { checks } from './checks';\n\nexport const checkbox = function( value, fieldEl ){\n    const dataChecksEl = fieldEl.closest('form').querySelector('[name=\"' + fieldEl.name + '\"][data-checks]');\n    return dataChecksEl ? checks(dataChecksEl) : { result: fieldEl.checked };\n}\n","\nexport const checks = function( fieldEl ){\n    const attrValue = JSON.parse( fieldEl.getAttribute('data-checks') ),\n          checkedElLength = fieldEl.closest('form').querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n          isMinOk = checkedElLength >= attrValue[0],\n          isMaxOk = checkedElLength <= attrValue[1],\n          obj = { result: isMinOk && isMaxOk };\n\n    if( !obj.result ){\n        obj.errors = { checks: true };\n        if( !isMinOk ){ obj.errors.minChecks = true; }\n        if( !isMaxOk ){ obj.errors.maxChecks = true; }\n    }\n\n    return obj;\n}\n","\nexport const equalTo = function( value, fieldEl ){\n    const checkFromEl = fieldEl.closest('form').querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' );\n    return { result: value === checkFromEl.value };\n}\n","\nexport const exactLength = function( value, fieldEl ){\n    const valueLength = value.length,\n          exactLength = fieldEl.getAttribute('data-exact-length') * 1,\n          obj = { result: valueLength === exactLength };\n\n    if( !obj.result ){\n        obj.errors = {};\n        if( valueLength < exactLength ){ obj.errors.minlength = true; }\n        else { obj.errors.maxlength = true; }\n    }\n\n    return obj;\n}\n","\nexport const file = function( value, fieldEl ){\n    const maxFileSize = (fieldEl.getAttribute('data-max-file-size') || fieldOptions.maxFileSize) * 1,\n          MIMEtype = fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null,\n          filesList = Array.from(fieldEl.files),\n          obj = { result: true };\n\n    filesList.forEach(file => {\n        const exceedMaxFileSize = maxFileSize > 0 && (file.size/1024/1024) > maxFileSize,\n              isAcceptedFileType = MIMEtype !== null ? MIMEtype.test(file.type) : true;\n\n        if( exceedMaxFileSize || !isAcceptedFileType ){\n            obj.result = false;\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n            if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n        }\n    });\n\n    return obj;\n}\n","\nexport const length = function( value, fieldEl ){\n    const valueL = value.length,\n          attrValue = JSON.parse( fieldEl.getAttribute('data-length') ),\n          isMinlengthOk = valueL >= attrValue[0],\n          isMaxlengthOk = valueL <= attrValue[1],\n          obj = { result: isMinlengthOk && isMaxlengthOk };\n\n    if( !obj.result ){\n        obj.errors = { stringLength: true };\n        if( !isMinlengthOk ){ obj.errors.minlength = true; }\n        if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n    }\n\n    return obj;\n}\n","\nimport { getDateAsNumber } from '../helpers';\n\nexport const max = function( value, fieldEl ){\n    let maxVal = fieldEl.max;\n    const dateFormat = fieldEl.getAttribute('data-date-format');\n    \n    if( fieldEl.type === 'date' || dateFormat ){\n        value = getDateAsNumber( value, dateFormat );\n        maxVal = maxVal.split('-').join('');\n    }\n\n    value = value * 1;\n    maxVal = maxVal * 1;\n    \n    return { result: value <= maxVal };\n}\n","\nexport const maxlength = function( value, fieldEl ){\n    return { result: value.length <= fieldEl.maxLength * 1 };\n}\n","\nimport { getDateAsNumber } from '../helpers';\n\nexport const min = function( value, fieldEl ){\n    let minVal = fieldEl.min;\n    const dateFormat = fieldEl.getAttribute('data-date-format');\n    \n    if( fieldEl.type === 'date' || fieldEl.getAttribute('data-date-format') ){\n        value = getDateAsNumber( value, dateFormat );\n        minVal = minVal.split('-').join('');\n    }\n\n    value = value * 1;\n    minVal = minVal * 1;\n    \n    return { result: value >= minVal };\n}\n","\nexport const minlength = function( value, fieldEl ){\n    return { result: value.length >= fieldEl.minLength * 1 };\n}\n","\nexport const pattern = function( value, fieldEl ){\n    return { result: new RegExp(fieldEl.pattern).test(value) };\n}\n","\nexport const radio = function( value, fieldEl ){\n    const fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n          isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0;\n\n    return { result: isValid };\n}\n","\nexport const dataTypeNumber = function( event ){\n\n    const fieldEl = event.target;\n    \n    if( fieldEl.matches('[data-type=\"number\"]') ){\n        let fieldValue = fieldEl.value,\n            hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n        \n        if( hasInvalidChars ){\n            event.stopImmediatePropagation();\n            const valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n            fieldEl.value = valueReplaced;\n        }\n    }\n\n}\n","\nexport const formValidationEnd = function( event ){\n    const formEl = event.target;\n    const options = formEl.formjs.options;\n    \n    if( !options.fieldOptions.skipUIfeedback ){\n        const clMethodName = event.data.result ? 'add' : 'remove';\n        formEl.classList[clMethodName]( options.formOptions.cssClasses.valid );\n    }\n}\n","\nexport const keypressMaxlength = function( event ){\n\n    const fieldEl = event.target;\n    \n    if( fieldEl.matches( '[maxlength]' ) ){\n        const maxLength = fieldEl.maxLength * 1,\n            keyPressed = event.which || event.keyCode,\n            allowedKeys = [8, 37, 38, 39, 46];\n\n        if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n            return false;\n        }\n    }\n\n}\n","\nexport const pastePrevent = function( event ){\n\n    const fieldEl = event.target;\n    const fieldOptions = fieldEl.closest('form').formjs.options.fieldOptions;\n\n    if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n        event.preventDefault();\n    }\n\n}\n","\nimport { addClass, customEvents, dispatchCustomEvent, getValidateFormDefault, removeClass, runFunctionsSequence } from '../helpers';\nimport { ajaxCall } from '../ajaxCall';\n\nexport function submit( event ){\n\n    const formEl = event.target,\n          instance = formEl.formjs,\n          options = instance.options,\n          formCssClasses = options.formOptions.cssClasses,\n          isAjaxForm = options.formOptions.ajaxSubmit,\n          btnEl = formEl.querySelector('[type=\"submit\"]'),\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n\n    if( isAjaxForm ){\n        eventPreventDefault(false);\n    }\n\n    if( btnEl ){\n        if( btnEl.disabled ){\n            eventPreventDefault(false);\n            return false;\n        }\n        btnEl.disabled = true;\n    }\n\n    removeClass( formEl, (formCssClasses.ajaxComplete + ' ' + formCssClasses.ajaxError + ' ' + formCssClasses.ajaxSuccess) );\n    addClass( formEl, formCssClasses.submit );\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidationPromise = (handleValidation ? instance.validateForm() : Promise.resolve(getValidateFormDefault()));\n\n    formValidationPromise.then(formValidation => {\n\n        const beforeSendData = { stopExecution: false, formData: {} };\n\n        if( !formValidation.result ){\n            eventPreventDefault();\n            removeClass( formEl, formCssClasses.submit );\n            beforeSendData.stopExecution = true;\n            return [beforeSendData];\n        }\n        \n        const formDataObj = (isAjaxForm ? instance.getFormData() : null),\n              callbacksBeforeSend = options.formOptions.beforeSend;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        const rfsObject = {\n              functionsList: callbacksBeforeSend,\n              data: beforeSendData,\n              stopConditionFn: function(data){ return data.stopExecution; }\n        };\n        return runFunctionsSequence(rfsObject);\n\n    }).then(dataList => {\n\n        if( dataList.filter(data => data.stopExecution).length > 0 ){\n            eventPreventDefault();\n            return false;\n        }\n        \n        if( isAjaxForm ){\n\n            const formData = dataList.pop().formData;\n            addClass( formEl, formCssClasses.ajaxPending );\n            dispatchCustomEvent( formEl, customEvents.form.submit, ajaxCall( formEl, formData, options ) );\n            \n        }\n\n    });\n    \n}\n","\nimport { addClass, mergeObjects, removeClass, serializeObject } from './helpers';\n\nconst getFetchMethod = (response, options) => {\n    const accept = options.headers.get('Accept');\n    const contentType = response.headers.get('Content-Type');\n    const headerOpt = accept || contentType || '';\n\n    if( headerOpt.indexOf('application/json') > -1 || headerOpt === '' ){\n        return 'json';\n    } else if( headerOpt.indexOf('text/') > -1 ){\n        return 'text';\n    } else {\n        return 'blob';\n    }\n};\n\nexport function ajaxCall( formEl, formDataObj, options ){\n\n    let btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        ajaxOptions = mergeObjects( {}, options.formOptions.ajaxOptions ),\n        isMultipart = ajaxOptions.headers['Content-Type'] === 'multipart/form-data';\n\n    ajaxOptions.body = formDataObj;\n    \n    // POST A FormData OBJECT ( multipart )\n    if( isMultipart && options.fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in ajaxOptions.body){\n            formDataMultipart.append( key, ajaxOptions.body[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                const name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        ajaxOptions.body = formDataMultipart;\n    }\n\n    if( ajaxOptions.method === 'GET' ){\n\n        // FETCH WITH \"GET\" METHOD CAN'T HAVE \"body\". SO IT IS APPENDED TO THE URL\n        ajaxOptions.url += ( /\\?/.test(ajaxOptions.url) ? '&' : '?' ) + serializeObject( ajaxOptions.body );\n        delete ajaxOptions.body;\n\n    } else {\n\n        if( ajaxOptions.headers['Content-Type'].indexOf('application/x-www-form-urlencoded') > -1 ){\n            // POST A NORMAL FORM\n            ajaxOptions.body = serializeObject( ajaxOptions.body );\n        } else if( !isMultipart ){\n            // POST A JSON STRING\n            ajaxOptions.body = JSON.stringify(ajaxOptions.body);\n        }\n\n    }\n\n    ajaxOptions.headers = new Headers( ajaxOptions.headers );\n\n    if ( ajaxOptions.timeout > 0 ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        ajaxOptions.signal = signal;\n\n        timeoutTimer = window.setTimeout(function() {\n            controller.abort();\n        }, ajaxOptions.timeout);\n    }\n\n    return fetch(ajaxOptions.url, ajaxOptions)\n        .then(function( response ){\n            if( !response.ok ){\n                throw new Error(response.statusText);\n            }\n\n            const fetchMethod = getFetchMethod(response, ajaxOptions);\n\n            return response[fetchMethod]();\n        })\n        .then(function( data ){\n            addClass( formEl, options.formOptions.cssClasses.ajaxSuccess );\n            return data;\n        })\n        .catch(function( error ){\n            addClass( formEl, options.formOptions.cssClasses.ajaxError );\n            throw new Error(error.message);\n        })\n        .finally(function(){\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n            removeClass( formEl, options.formOptions.cssClasses.submit + ' ' + options.formOptions.cssClasses.ajaxPending );\n            addClass( formEl, options.formOptions.cssClasses.ajaxComplete );\n            btnEl.disabled = false;\n        });\n\n}\n","\nimport { fieldsStringSelector, isFieldForChangeEvent } from '../helpers';\n\nexport const validation = function( event ){\n\n    const isChangeEvent = event.type === 'change',\n          fieldEl = event.target,\n          self = fieldEl.closest('form').formjs;\n\n    if( fieldEl.matches( fieldsStringSelector ) ){\n        const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl);\n        \n        if(\n            (isFieldForChangeEventBoolean && isChangeEvent) ||\n            (!isFieldForChangeEventBoolean && !isChangeEvent)\n        ){\n            \n            return self.validateField( fieldEl ).then(obj => {\n                const type = obj.fieldEl.type,\n                      realtedFieldEqualTo = obj.fieldEl.closest('form').querySelector('[data-equal-to=\"'+ obj.fieldEl.name +'\"]');\n\n                if(\n                    // FIELD IS ( required OR data-validate-if-filled ) AND RELATED FIELD data-equal-to HAS A VALUE\n                    (obj.fieldEl.required || obj.fieldEl.matches('[data-validate-if-filled]')) && \n                    !(type === 'checkbox' || type === 'radio') && \n                    realtedFieldEqualTo && realtedFieldEqualTo.value.trim() !== ''\n                ){\n                    self.validateField( realtedFieldEqualTo );\n                }\n\n                return obj;\n            });\n\n        }\n    }\n    \n}\n","\nimport { addClass, removeClass } from '../helpers';\n\nexport const validationEnd = function( event ){\n\n    const eventData = event.data,\n          fieldEl = eventData.fieldEl,\n          options = fieldEl.closest('form').formjs.options.fieldOptions,\n          containerEl = fieldEl.closest( options.questionContainer ),\n          isReqFrom = fieldEl.matches('[data-required-from]'),\n          reqMoreEl = document.querySelector( fieldEl.getAttribute('data-required-from') );\n\n    if( containerEl !== null ){\n        removeClass( containerEl, options.cssClasses.pending );\n    }\n\n    if( containerEl !== null && !options.skipUIfeedback ){\n\n        if( eventData.result ){\n\n            if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                // IF FIELD IS VALID\n                const errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                removeClass( containerEl, errorClasses );\n                addClass( containerEl, options.cssClasses.valid );\n            }\n\n        } else {\n\n            // IF FIELD IS NOT VALID\n            let extraErrorClass = options.cssClasses.errorRule;\n\n            // HANDLE CASE OF FIELD data-checks\n            const isChecks = fieldEl.matches('[data-checks]'),\n                    checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n            if( (!isChecks && (eventData.errors && eventData.errors.empty)) || (isChecks && checkedElLength === 0) ){\n                extraErrorClass = options.cssClasses.errorEmpty;\n            }\n\n            let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n            removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n            addClass( containerEl, errorClasses );\n\n        }\n    }\n\n}\n","\nimport { getFilledFields, isFieldForChangeEvent } from './helpers';\nimport { validation } from './listenerCallbacks';\n\nexport const init = function( formEl ){\n\n    const instance = formEl.formjs;\n    const formFields = getFilledFields( formEl );\n\n    // VALIDATE ALL FILLED FIELDS\n    return Promise.all( formFields.map(fieldEl => {\n\n        const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl);\n        const fakeEventObj = { target: fieldEl, type: (isFieldForChangeEventBoolean ? 'change': '') };\n        return validation( fakeEventObj );\n\n    }) ).then(fields => {\n        instance.isInitialized = true;\n        return { instance, fields };\n    });\n\n}\n","\nimport { fieldsStringSelector } from './fieldsStringSelector';\nimport { getUniqueFields } from './getUniqueFields';\n\nexport const getFilledFields = formEl => {\n    return getUniqueFields( formEl.querySelectorAll(fieldsStringSelector) )\n    .map(fieldEl => {\n\n        const name = fieldEl.name,\n              type = fieldEl.type,\n              isCheckboxOrRadio = (type === 'checkbox' || type === 'radio'),\n              fieldChecked = formEl.querySelector('[name=\"' + name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        return (\n            isCheckboxOrRadio ? (fieldChecked || null) :\n            (isReqFrom && reqMoreEl.checked) || (!isReqFrom && fieldEl.value) ? fieldEl : null\n        );\n\n    })\n    .filter(fieldEl => fieldEl !== null);\n}\n","\nimport { getValidateFieldDefault, isDOMNode, runFunctionsSequence } from './helpers';\nimport { isValid } from './isValid';\n\nexport function checkFieldValidity( fieldEl, fieldOptions, validationRules, validationErrors ){\n\n    if( !isDOMNode(fieldEl) ){\n        const obj = getValidateFieldDefault({fieldEl});\n        return Promise.resolve(obj);\n    }\n\n    const formEl = fieldEl.closest('form'),\n          isValidValue = fieldEl.value.trim().length > 0;\n\n     // HANDLE FIELDS radio/data-require-more\n     if( fieldEl.type === 'radio' ){\n        const checkedEl = fieldEl.checked ? fieldEl : formEl.querySelector('[name=\"'+ fieldEl.name +'\"]:checked'),\n              reqMoreIsChecked = checkedEl && checkedEl.matches('[data-require-more]'),\n              findReqMoreEl = reqMoreIsChecked ? checkedEl : formEl.querySelector('[data-require-more][name=\"'+ fieldEl.name +'\"]'),\n              findReqFromEl = findReqMoreEl ? formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null;\n        \n        if( checkedEl && findReqFromEl ){\n            findReqFromEl.required = findReqMoreEl.required && findReqMoreEl.checked;\n            if( !reqMoreIsChecked ){\n                findReqFromEl.value = '';\n            } else if( fieldOptions.focusOnRelated ) {\n                findReqFromEl.focus();\n            }\n        }\n    }\n\n    // HANDLE FIELDS data-required-from\n    if( fieldEl.matches('[data-required-from]') && isValidValue ){\n        const reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n        reqMoreEl.checked = true;\n        fieldEl.required = reqMoreEl.required;\n    }\n\n    const needsValidation = fieldEl.required || (fieldEl.matches('[data-validate-if-filled]') && isValidValue);\n\n    return runFunctionsSequence({\n            functionsList: fieldOptions.beforeValidation,\n            data: {fieldEl}\n        })\n        .then(data => {\n            const dataObj = data.pop();\n            return new Promise(resolve => {\n                if( !needsValidation ){\n                    dataObj.result = true;\n                }\n                resolve( needsValidation ? isValid(fieldEl, fieldOptions, validationRules, validationErrors) : dataObj );\n            });\n        });\n\n}\n","\nimport { getValidateFieldDefault, mergeObjects, toCamelCase } from './helpers';\n\nexport function isValid( fieldEl, fieldOptions, validationRules, validationErrors ){\n\n    const fieldValue = fieldEl.value,\n          obj = getValidateFieldDefault({result: fieldValue.trim().length > 0, fieldEl}),\n          isRadioOrCheckbox = /^(radio|checkbox)$/.test(fieldEl.type),\n          hasSelectedInput = fieldEl.closest('form').querySelectorAll('[name=\"'+ fieldEl.name +'\"]:checked').length > 0;\n\n    if( (!isRadioOrCheckbox && !obj.result) || (isRadioOrCheckbox && !hasSelectedInput) ){\n        obj.result = false;\n        obj.errors = { empty: true };\n        return Promise.resolve(obj);\n    }\n\n    // COLLECT VALIDATION METHOD NAMES ( USED TO RUN VALIDATIONS AND GET ERRORS )\n    const validationMethods = Array.from(fieldEl.attributes).reduce((accList, attr) => {\n        const attrName = toCamelCase( attr.name.replace('data-', '') ),\n              attrValue = toCamelCase( attr.value ),\n              isAttrValueWithFn = (attrName === 'type' || attrName === 'subtype') && validationRules[attrValue],\n              isAttrNameWithFn = validationRules[attrName];\n\n        if( isAttrValueWithFn || isAttrNameWithFn ){\n            accList.push( isAttrValueWithFn ? attrValue : attrName );\n        }\n        return accList;\n    }, []);\n\n    return new Promise(resolve => {\n\n        // RUN VALIDATIONS\n        const validationsResult = validationMethods.reduce((accPromise, methodName) => {\n            return accPromise.then(accObj => {\n                return new Promise(resolveVal => {\n                    // RUN VALIDATION INSIDE A PROMISE IS USEFUL FOR ASYNC VALIDATIONS\n                    resolveVal( validationRules[methodName](fieldValue, fieldEl, fieldOptions) );\n                }).then(valObj => {\n                    // ADD CUSTOM ERROR-KEY FOR EACH VALIDATION RULE\n                    if( !valObj.result ){\n                        const errorObj = {};\n                        if( typeof valObj.errors === 'undefined' || typeof valObj.errors[methodName] === 'undefined' ){\n                            errorObj[methodName] = true;\n                        }\n                        valObj.errors = mergeObjects({}, valObj.errors, errorObj);\n                    }\n                    valObj = valObj.result ? {} : valObj;\n                    return mergeObjects(accObj, valObj);\n                });\n            });\n        }, Promise.resolve(obj));\n        resolve(validationsResult);\n\n    }).then(data => {\n\n        // GET ERRORS\n        if( !data.result ){\n            data.errors = validationMethods.reduce((accObj, methodName) => {\n                const errors = (validationErrors[methodName] && validationErrors[methodName](fieldValue, fieldEl)) || {};\n                return mergeObjects(accObj, errors);\n            }, data.errors);\n            data.errors.rule = true;\n        }\n        return data;\n\n    });\n\n}\n","\nimport { fieldsStringSelector, getUniqueFields, getValidateFieldDefault, getValidateFormDefault, mergeObjects } from './helpers';\nimport { checkFieldValidity } from './checkFieldValidity';\n\nexport function checkFormValidity( formEl, fieldOptions, validationRules, validationErrors, fieldToSkip = null ){\n\n    fieldOptions = mergeObjects( {}, fieldOptions, {focusOnRelated: false} );\n    const fieldsList = getUniqueFields( formEl.querySelectorAll(fieldsStringSelector) );\n\n    return Promise.all( fieldsList.map(fieldEl => {\n\n        if( fieldToSkip && fieldEl === fieldToSkip ){\n            const obj = getValidateFieldDefault({fieldEl, result: true});\n            return Promise.resolve(obj);\n        }\n        return checkFieldValidity( fieldEl, fieldOptions, validationRules, validationErrors );\n\n    }) ).then(fields => {\n\n        const areAllFieldsValid = fields.filter(fieldObj => !fieldObj.result).length === 0;\n        return getValidateFormDefault({result: areAllFieldsValid, fields});\n\n    });\n\n}\n","\nimport { version }              from './modules/version';\nimport { checkFormEl, customEvents, dispatchCustomEvent, excludeSelector, isNodeList, mergeObjects, removeClass } from './modules/helpers';\nimport { options }              from './modules/options';\nimport { validationRules }      from './modules/validationRules';\nimport { validationErrors }     from './modules/validationErrors';\nimport { formStartup }          from './modules/formStartup';\nimport { destroy }              from './modules/destroy';\nimport { init }                 from './modules/init';\nimport { checkFieldValidity }   from './modules/checkFieldValidity';\nimport { checkFormValidity }    from './modules/checkFormValidity';\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        const argsL = arguments.length,\n              checkFormElem = checkFormEl(formEl);\n\n        if( argsL === 0 || (argsL > 0 && !formEl) ){\n            throw new Error('First argument \"formEl\" is missing or falsy!');\n        }\n        if( isNodeList(formEl) ){\n            throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n        }\n        if( !checkFormElem.result ){\n            throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n        }\n\n        const self = this;\n\n        self.formEl = checkFormElem.element;\n        self.formEl.formjs = self;\n        self.options = mergeObjects({}, Form.prototype.options, optionsObj);\n\n        // BINDING CONTEXT FOR FUTURE EXECUTION\n        const cbList = [\n            // IN fieldOptions\n            'beforeValidation',\n            // IN formOptions\n            'beforeSend',\n            'getFormData'\n        ];\n        cbList.forEach(cbName => {\n            const optionType = self.options.formOptions[cbName] ? 'formOptions' : 'fieldOptions';\n            let cbOpt = self.options[optionType][cbName];\n\n            if( cbOpt ){\n                self.options[optionType][cbName] = ( Array.isArray(cbOpt) ? cbOpt.map(cbFn => cbFn.bind(self)) : cbOpt.bind(self) );\n            }\n        });\n\n        formStartup( self.formEl, self.options );\n    }\n\n    destroy(){\n        destroy(this.formEl, this.options);\n    }\n    \n    getFormData(){\n        const formFieldsEl = this.formEl.querySelectorAll('input, select, textarea'),\n              filteredFields = Array.from( formFieldsEl ).filter( elem => elem.matches(excludeSelector) );\n        return this.options.formOptions.getFormData(filteredFields);\n    }\n\n    init(){\n        const focusOnRelated = this.options.fieldOptions.focusOnRelated;\n        this.options.fieldOptions.focusOnRelated = false;\n        return init(this.formEl)\n            .then(initObj => {\n                this.options.fieldOptions.focusOnRelated = focusOnRelated;\n                return initObj;\n            });\n    }\n\n    validateField( fieldEl, fieldOptions ){\n        const self = this;\n        fieldEl = typeof fieldEl === 'string' ? self.formEl.querySelector(fieldEl) : fieldEl;\n        fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptions);\n        const formEl = self.formEl;\n        return checkFieldValidity(fieldEl, fieldOptions, self.validationRules, self.validationErrors)\n            .then(obj => {\n                dispatchCustomEvent( obj.fieldEl, customEvents.field.validation, obj );\n                if( obj.result && fieldOptions.onValidationCheckAll ){\n                    checkFormValidity( formEl, fieldOptions, self.validationRules, self.validationErrors, obj.fieldEl )\n                        .then(dataForm => {\n                            dispatchCustomEvent( formEl, customEvents.form.validation, dataForm );\n                        });\n                } else if( !obj.result ){\n                    removeClass( formEl, self.options.formOptions.cssClasses.valid );\n                }\n                return obj;\n            });\n    }\n\n    validateForm( fieldOptions ){\n        const self = this;\n        fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptions);\n        const formEl = self.formEl;\n        return checkFormValidity(formEl, fieldOptions, self.validationRules, self.validationErrors)\n            .then(data => {\n                data.fields.forEach(obj => {\n                    obj.isCheckingForm = true;\n                    dispatchCustomEvent( obj.fieldEl, customEvents.field.validation, obj );\n                });\n                dispatchCustomEvent( formEl, customEvents.form.validation, data );\n                return data;\n            });\n    }\n    \n    static addValidationErrors( errorsObj ){\n        Form.prototype.validationErrors = mergeObjects({}, Form.prototype.validationErrors, errorsObj);\n    }\n\n    static addValidationRules( rulesObj ){\n        Form.prototype.validationRules = mergeObjects({}, Form.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        Form.prototype.options = mergeObjects({}, Form.prototype.options, optionsObj);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationErrors = validationErrors;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\nexport default Form;\n","\nimport { isDOMNode } from './isDOMNode';\n\nexport const checkFormEl = formEl => {\n    const isString = typeof formEl,\n          isValidNodeSelector = isString === 'string' && isDOMNode(document.querySelector(formEl)),\n          isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n          obj = {\n            result: isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n          };\n\n    return obj;\n}\n","\nimport { customEvents } from './helpers';\nimport { dataTypeNumber, formValidationEnd, keypressMaxlength, pastePrevent, submit, validation, validationEnd } from './listenerCallbacks';\n\nexport function formStartup( formEl, options ){\n\n    formEl.noValidate = true;\n\n    const fieldOptions = options.fieldOptions,\n          formOptions = options.formOptions;\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // MAXLENGTH IS BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', pastePrevent, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            const useCapture = /^(blur|focus)$/.test(eventName);\n            formEl.addEventListener(eventName, validation, useCapture);\n        });\n\n        formEl.addEventListener(customEvents.field.validation, validationEnd, false);\n        formEl.addEventListener(customEvents.form.validation, formValidationEnd, false);\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nimport { customEvents } from './helpers';\nimport { dataTypeNumber, formValidationEnd, keypressMaxlength, pastePrevent, submit, validation, validationEnd } from './listenerCallbacks';\n\n\nexport function destroy( formEl, options ){\n\n    if( options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', keypressMaxlength, false);\n        formEl.removeEventListener('input', dataTypeNumber, false);\n    }\n\n    if( options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', pastePrevent, false);\n    }\n\n    if( options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', submit);\n    }\n\n    options.fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n        const useCapturing = eventName === 'blur' ? true : false;\n        formEl.removeEventListener(eventName, validation, useCapturing);\n    });\n\n    formEl.removeEventListener(customEvents.field.validation, validationEnd, false);\n    formEl.removeEventListener(customEvents.form.validation, formValidationEnd, false);\n\n    delete formEl.formjs;\n    \n}\n","\nexport const excludeSelector = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])'\n","\nexport const validationErrors = {\n\n    email: function ( string ) {\n        const obj = {};\n\n        if( string.indexOf('@') === -1 ){\n\n            // @ IS MISSING\n            obj.missingAtChar = true;\n\n        } else {\n\n            const splitAt_at = string.split('@');\n            if( splitAt_at[0].length === 0 ){\n\n                // USER NAME IS MISSING\n                obj.missingUserName = true;\n\n            }\n\n            if( splitAt_at[1].length === 0 ){\n\n                // IS EMPTY AFTER @\n                obj.missingDomain = true;\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                // DOT IS MISSING\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else {\n\n                // EXTENSION MISSING OR NOT LONG ENOUGH\n                const splitAt_dot = splitAt_at[1].split('.'),\n                      extLength = splitAt_dot[1].length;\n                if( extLength === 0 ) {\n                    obj.missingExtension = true;\n                } else if( extLength < 2 ){\n                    obj.minlengthExtension = true;\n                }\n\n            }\n        }\n\n        return obj;\n\n    }\n\n}\n"],"names":["addClass","element","cssClasses","split","forEach","className","classList","add","isNodeList","nodeList","NodeList","prototype","isPrototypeOf","removeClass","remove","isDOMNode","node","Element","customEvents","validation","submit","isPlainObject","object","Object","toString","call","mergeObjects","out","Array","from","arguments","slice","filter","arg","keys","key","isArray","concat","push","dispatchCustomEvent","elem","eventName","data","eventOptions","bubbles","eventObj","Event","dispatchEvent","fieldsStringSelector","formatMap","YYYY-MM-DD","dateArray","MM-DD-YYYY","DD-MM-YYYY","reverse","getDateAsNumber","dateString","dateFormat","splitChar","string","separator","match","length","getSplitChar","indexOf","replace","join","getUniqueFields","currentFieldName","currentFieldType","fieldEl","name","type","matches","getValidateFieldDefault","obj","result","getValidateFormDefault","fields","isFieldForChangeEvent","runFunctionsSequence","functionsList","stopConditionFn","reduce","acc","promiseFn","then","res","dataNew","Promise","resolve","dataList","serializeObject","constructor","a","k","encodeURIComponent","toCamelCase","all","letter","toUpperCase","defaultCallbacksInOptions","fieldOptions","beforeValidation","fieldObj","this","options","containerEl","closest","questionContainer","value","dirty","checkDirtyField","skipUIfeedback","pending","formOptions","getFormData","filteredFields","formData","formEl","isCheckbox","isRadio","isSelect","checked","checkboxes","querySelectorAll","field","checkedRadio","querySelector","selectedOpts","option","selected","error","errorEmpty","errorRule","valid","focusOnRelated","handleFileUpload","handleValidation","maxFileSize","onValidationCheckAll","preventPasteFields","strictHtmlValidation","validateOnEvents","ajaxOptions","cache","credentials","headers","Content-Type","Accept","method","mode","redirect","timeout","url","location","href","ajaxSubmit","beforeSend","ajaxComplete","ajaxError","ajaxPending","ajaxSuccess","handleSubmit","validationRules","date","test","email","number","checkbox","dataChecksEl","attrValue","JSON","parse","getAttribute","checkedElLength","isMinOk","isMaxOk","errors","checks","minChecks","maxChecks","equalTo","exactLength","valueLength","minlength","maxlength","file","MIMEtype","accept","RegExp","filesList","files","exceedMaxFileSize","size","isAcceptedFileType","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","stringLength","max","maxVal","maxLength","min","minVal","minLength","pattern","radio","fieldChecked","trim","dataTypeNumber","event","target","fieldValue","stopImmediatePropagation","valueReplaced","formValidationEnd","formjs","clMethodName","keypressMaxlength","keyPressed","which","keyCode","allowedKeys","pastePrevent","preventDefault","instance","formCssClasses","isAjaxForm","btnEl","eventPreventDefault","enableBtn","disabled","validateForm","formValidation","beforeSendData","stopExecution","formDataObj","callbacksBeforeSend","pop","timeoutTimer","isMultipart","body","formDataMultipart","FormData","append","idx","stringify","Headers","controller","AbortController","signal","window","setTimeout","abort","fetch","response","ok","Error","statusText","fetchMethod","get","contentType","headerOpt","getFetchMethod","catch","message","finally","clearTimeout","ajaxCall","isChangeEvent","self","isFieldForChangeEventBoolean","validateField","realtedFieldEqualTo","required","validationEnd","eventData","isReqFrom","reqMoreEl","document","errorClasses","extraErrorClass","isChecks","empty","errorClassToRemove","init","formFields","map","isCheckboxOrRadio","getFilledFields","isInitialized","checkFieldValidity","validationErrors","isValidValue","checkedEl","reqMoreIsChecked","findReqMoreEl","findReqFromEl","id","focus","needsValidation","dataObj","isRadioOrCheckbox","hasSelectedInput","validationMethods","attributes","accList","attr","attrName","isAttrValueWithFn","isAttrNameWithFn","accPromise","methodName","accObj","resolveVal","valObj","errorObj","rule","isValid","checkFormValidity","fieldToSkip","fieldsList","areAllFieldsValid","Form","[object Object]","optionsObj","argsL","checkFormElem","isString","isFormSelector","tagName","toLowerCase","checkFormEl","cbName","optionType","cbOpt","cbFn","bind","noValidate","addEventListener","useCapture","formStartup","removeEventListener","useCapturing","destroy","formFieldsEl","initObj","dataForm","isCheckingForm","errorsObj","rulesObj","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","version"],"mappings":"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"}
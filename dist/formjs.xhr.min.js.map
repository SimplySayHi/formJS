{"version":3,"sources":["webpack://Form/webpack/universalModuleDefinition","webpack://Form/webpack/bootstrap","webpack://Form/./src/modules/helpers.js","webpack://Form/./src/modules/optionsUtils.js","webpack://Form/./src/modules/optionsAjaxXhr.js","webpack://Form/./src/modules/options.js","webpack://Form/./src/modules/validationRules.js","webpack://Form/./src/modules/ajaxCallXhr.js","webpack://Form/./src/modules/submit.js","webpack://Form/./src/modules/listenerCallbacks.js","webpack://Form/./src/modules/formStartup.js","webpack://Form/./src/modules/constructor.js","webpack://Form/./src/modules/destroy.js","webpack://Form/./src/modules/getFormData.js","webpack://Form/./src/modules/init.js","webpack://Form/./src/modules/isValid.js","webpack://Form/./src/modules/isValidField.js","webpack://Form/./src/modules/isValidForm.js","webpack://Form/./src/modules/validateField.js","webpack://Form/./src/modules/validateForm.js","webpack://Form/./src/index.js","webpack://Form/./src/modules/validationErrors.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","fieldsStringSelector","addClass","element","cssClasses","split","forEach","className","classList","add","checkDirtyField","fields","options","fieldOptions","dirty","isNodeList","Array","from","fieldEl","type","containerEl","closest","removeClass","checkFormEl","formEl","isString","isFormSelector","isDOMNode","document","querySelector","tagName","toLowerCase","result","executeCallback","fn","data","self","optionsNew","mergeObjects","callbackFnList","push","isArray","promiseFn","getSplitChar","string","splitChar","indexOf","getUniqueFields","nodeList","currentFieldName","currentFieldType","filter","matches","node","Element","isPrototypeOf","isFieldForChangeEvent","NodeList","out","arguments","length","obj","toString","isObject","concat","slice","remove","runFunctionsSequence","functionsList","stopConditionFn","reduce","acc","then","res","dataNew","Promise","resolve","dataList","shift","toCamelCase","replace","all","letter","toUpperCase","validateFieldObjDefault","validateFormObjDefault","defaultCallbacksInOptions","beforeValidation","fieldObj","skipUIfeedback","pending","onValidation","fieldsArray","tempOptions","isReqFrom","reqMoreEl","getAttribute","checked","errorClasses","error","errorEmpty","errorRule","valid","extraErrorClass","isChecks","checkedElLength","querySelectorAll","errors","empty","errorClassToRemove","formOptions","getFormData","filteredFields","formData","isCheckbox","isRadio","isSelect","checkboxes","field","checkedRadio","selectedOpts","option","selected","ajaxOptions","async","cache","contentType","headers","method","timeout","url","location","href","focusOnRelated","handleFileUpload","handleValidation","maxFileSize","onPastePrevented","onValidationCheckAll","preventPasteFields","strictHtmlValidation","validateOnEvents","ajaxSubmit","beforeSend","ajaxComplete","ajaxError","ajaxPending","ajaxSuccess","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","validationRulesAttributes","checkbox","dataChecksEl","checks","attrValue","JSON","parse","isMinOk","isMaxOk","minChecks","maxChecks","e","Error","equalTo","checkFromEl","exactLength","valueLength","minlength","maxlength","file","MIMEtype","accept","RegExp","filesList","files","exceedMaxFileSize","size","isAcceptedFileType","test","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","stringLength","max","isDate","maxVal","reverse","join","min","minVal","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","required","ajaxCall","formDataObj","timeoutTimer","btnEl","xhrOptions","isMultipart","formDataMultipart","FormData","append","idx","XHR","XMLHttpRequest","errorFn","xhr","target","addEventListener","status","responseData","responseText","getJSON","responseXML","DOMParser","parseFromString","getXML_HTML","parseResponse","window","clearTimeout","disabled","constructor","keys","a","k","encodeURIComponent","Date","getTime","open","xhrFields","h","mimeType","overrideMimeType","setRequestHeader","stringify","send","setTimeout","abort","submit","event","isAjaxForm","eventPreventDefault","enableBtn","preventDefault","validateForm","formValidation","beforeSendData","stopExecution","callbacksBeforeSend","callbackFns","dataTypeNumber","fieldValue","stopImmediatePropagation","valueReplaced","keypressMaxlength","maxLength","keyPressed","which","keyCode","pastePrevent","validation","eventName","isFieldForChangeEventBoolean","isReqMore","findReqMoreEl","findReqFromEl","id","focus","validateField","realtedFieldEqualTo","formStartup","noValidate","listenerCallbacks","useCapturing","constructorFn","optionsObj","argsL","checkFormElem","formjs","freeze","destroy","validationListenerNames","removeEventListener","formFieldsEl","elem","init","map","isCheckboxOrRadio","getFilledFields","fakeEventObj","isInitialized","isValid","fieldType","fieldAttributes","attributes","sort","b","attrValidations","attrValidationsResult","attr","attrName","isAttrValueWithFn","isAttrNameWithFn","extraValObj","unshift","item","extraVal","validationRules","fieldErrors","validationErrors","rule","isValidField","fieldElem","fieldOptionsObj","isRequired","isValidateIfFilled","rfsObject","dataObj","pop","isValidForm","fieldsList","list","areAllFieldsValid","runCallback","fieldOptionsNew","dataForm","clMethodName","Form","errorsObj","rulesObj","email","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","date","number","version"],"mappings":"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","file":"formjs.xhr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Form\"] = factory();\n\telse\n\t\troot[\"Form\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport const\n\nfieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"hidden\"]), select, textarea',\n\naddClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\ncheckDirtyField = function( fields, cssClasses = this.options.fieldOptions.cssClasses.dirty ){\n\n    var fields = (isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(function(fieldEl){\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n},\n\ncheckFormEl = function( formEl ){\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\nexecuteCallback = function( {fn = null, data = {}, options = {}} = {} ){\n    let self = this,\n        optionsNew = mergeObjects({}, self.options, options),\n        callbackFnList = [];\n\n    if( typeof fn === 'function' ){\n        callbackFnList.push( fn );\n    } else if( Array.isArray(fn) ) {\n        callbackFnList = fn;\n    }\n\n    callbackFnList.forEach(function(promiseFn){\n        promiseFn.call( self, data, optionsNew );\n    });\n},\n\ngetFilledFields = function( formEl ){\n    return getUniqueFields( formEl.querySelectorAll(fieldsStringSelector) )\n    .map(fieldEl => {\n\n        const name = fieldEl.name,\n              type = fieldEl.type,\n              isCheckboxOrRadio = (type === 'checkbox' || type === 'radio'),\n              fieldChecked = formEl.querySelector('[name=\"' + name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        return (\n            isCheckboxOrRadio ? (fieldChecked || null) :\n            (isReqFrom && reqMoreEl.checked) || (!isReqFrom && fieldEl.value) ? fieldEl : null\n        );\n\n    })\n    .filter(fieldEl => {\n        return  fieldEl !== null;\n    });\n},\n\ngetSplitChar = function( string ){\n    let splitChar = '.';\n\n    if( string.indexOf(splitChar) === -1 ){\n        if( string.indexOf('-') >= 0 ){\n            splitChar = '-';\n        } else if( string.indexOf('/') >= 0 ){\n            splitChar = '/';\n        }\n    }\n\n    return splitChar;\n},\n\ngetUniqueFields = function( nodeList ){\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    return Array.from( nodeList ).filter(fieldEl => {\n        const name = fieldEl.name,\n              type = fieldEl.type;\n\n        if( name === currentFieldName && type === currentFieldType ){\n            return false;\n        }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        return true;\n    });\n    \n},\n\nisDOMNode = function( node ){\n    return Element.prototype.isPrototypeOf( node );\n},\n\nisFieldForChangeEvent = function ( fieldEl ) {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\nisNodeList = function( nodeList ){\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\nisPlainObject = function( object ){\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\nmergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // * STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        // IF THIS IS ONE OF ABOVE (*) AND THE DESTINATION OBJECT IS AN ARRAY\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\nremoveClass = function( element, cssClasses ){\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\nrunFunctionsSequence = function( { functionsList = [], data = {}, stopConditionFn = function(){return false} } = {} ){\n    const self = this;\n\n    return functionsList.reduce(function(acc, promiseFn){\n        return acc.then(function (res) {\n            let dataNew = mergeObjects({}, res[res.length - 1]);\n            if( stopConditionFn(dataNew) ){\n                return Promise.resolve(res);\n            }\n            return new Promise(resolve => { resolve(promiseFn.call(self, dataNew)) }).then(function (result = dataNew) {\n                res.push(result);\n                return res;\n            });\n        });\n    }, Promise.resolve([data])).then(dataList => {\n        if( dataList.length > 1 ){ dataList.shift(); }\n        return dataList;\n    });\n},\n\nserializeObject = function( obj ){\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce(function(a,k){\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\ntoCamelCase = function( string ){\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n},\n\nvalidateFieldObjDefault = { result: false, fieldEl: null },\n\nvalidateFormObjDefault = { result: true, fields: [] }\n","\nimport { addClass, checkDirtyField, mergeObjects, removeClass } from './helpers';\n\nexport const defaultCallbacksInOptions = {\n    fieldOptions: {\n\n        beforeValidation: function beforeValidationDefault ( fieldObj ) {\n\n            checkDirtyField.call( this, fieldObj.fieldEl );\n            if( !this.options.fieldOptions.skipUIfeedback ){\n                addClass( fieldObj.fieldEl.closest('[data-formjs-question]'), this.options.fieldOptions.cssClasses.pending );\n            }\n\n        },\n\n        onValidation: function onValidationDefault ( fieldsArray, tempOptions = {} ) {\n\n            let self = this,\n                options = mergeObjects( {}, self.options.fieldOptions, tempOptions.fieldOptions );\n\n            fieldsArray.forEach(function( obj ){\n                let fieldEl = obj.fieldEl,\n                    containerEl = fieldEl.closest('[data-formjs-question]'),\n                    isReqFrom = fieldEl.matches('[data-required-from]'),\n                    reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n\n                if( containerEl !== null ){\n                    removeClass( containerEl, options.cssClasses.pending );\n                }\n\n                if( containerEl !== null && !options.skipUIfeedback ){\n\n                    if( obj.result ){\n\n                        if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                            // IF FIELD IS VALID\n                            let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            removeClass( containerEl, errorClasses );\n                            addClass( containerEl, options.cssClasses.valid );\n                        }\n\n                    } else {\n\n                        // IF FIELD IS NOT VALID\n                        let extraErrorClass = options.cssClasses.errorRule;\n\n                        // HANDLE CASE OF FIELD data-checks\n                        let isChecks = fieldEl.matches('[data-checks]'),\n                            checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                        if( (!isChecks && (obj.errors && obj.errors.empty)) || (isChecks && checkedElLength === 0) ){\n                            extraErrorClass = options.cssClasses.errorEmpty;\n                        }\n\n                        let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                            errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                        removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                        addClass( containerEl, errorClasses );\n\n                    }\n                }\n            });\n            \n        }\n\n    },\n    formOptions: {\n\n        getFormData: function getFormDataDefault ( filteredFields ) {\n\n            let formData = {},\n                self = this,\n                formEl = self.formEl;\n\n            filteredFields.forEach(function( fieldEl ){\n                let isCheckbox = fieldEl.type === 'checkbox',\n                    isRadio = fieldEl.type === 'radio',\n                    isSelect = fieldEl.matches('select'),\n                    name = fieldEl.name,\n                    value = fieldEl.value;\n                                \n                if( isCheckbox ) {\n                    \n                    value = fieldEl.checked;\n                    let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                    if( checkboxes.length > 1 ){\n\n                        value = [];\n                        let checkedElems = checkboxes.filter(field => field.checked);\n                        checkedElems.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                        \n                } else if( isRadio ){\n                    \n                    let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                    value = (checkedRadio === null ? null : checkedRadio.value);\n                    \n                } else if( isSelect ){\n\n                    let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                    if( selectedOpts.length > 1 ){\n\n                        value = [];\n                        selectedOpts.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                }\n\n                formData[ name ] = value;\n            });\n\n            return formData;\n\n        }\n\n    }\n}\n","\nexport let ajaxOptions = {\n    async:              true,\n    cache:              false,\n    contentType:        'application/x-www-form-urlencoded; charset=UTF-8',\n    headers: {\n                        'X-Requested-With': 'XMLHttpRequest',\n    },\n    method:             'POST',\n    timeout:            0,\n    url:                location.href\n}\n","\nimport { defaultCallbacksInOptions } from './optionsUtils';\n//import { ajaxOptions } from './optionsAjax';\nimport { ajaxOptions } from './optionsAjaxXhr';\n\nexport const options = {\n\n    fieldOptions: {\n        beforeValidation:       [defaultCallbacksInOptions.fieldOptions.beforeValidation],\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            pending:            'is-pending',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onPastePrevented:       [],\n        onValidation:           [defaultCallbacksInOptions.fieldOptions.onValidation],\n        onValidationCheckAll:   true,\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            ajaxOptions,\n        ajaxSubmit:             true,\n        beforeSend:             [],\n        cssClasses: {\n            ajaxComplete:       'ajax-complete',\n            ajaxError:          'ajax-error',\n            ajaxPending:        'ajax-pending',\n            ajaxSuccess:        'ajax-success',\n            valid:              'is-valid'\n        },\n        getFormData:            defaultCallbacksInOptions.formOptions.getFormData,\n        handleSubmit:           true,\n        onSubmitComplete:       [],\n        onSubmitError:          [],\n        onSubmitSuccess:        []\n    }\n    \n}\n","\nimport { getSplitChar } from './helpers';\n\nexport const validationRules = {\n            \n    date: function( string ){\n        // DATE AS ISO 8601 DATE FORMAT     YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let date = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard EMAIL MUST BE AT LEAST:\n        // a@a.aa\n        let obj = {\n            result: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n        };\n\n        return obj;\n    }\n    \n}\n\nexport const validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]'),\n            obj = { result: data.fieldEl.checked };\n\n        if( dataChecksEl !== null ){\n            obj = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return obj;\n    },\n\n    checks: function( data ){\n        try {\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n                isMinOk = checkedElLength >= attrValue[0],\n                isMaxOk = checkedElLength <= attrValue[1],\n                obj = {\n                    result: isMinOk && isMaxOk\n                };\n\n            if( !obj.result ){\n\n                obj.errors = { checks: true };\n                if( !isMinOk ){ obj.errors.minChecks = true; }\n                if( !isMaxOk ){ obj.errors.maxChecks = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n            obj = {\n                result: fieldEl.value === checkFromEl.value\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { equalTo: true };\n        }\n\n        return obj;\n    },\n    \n    exactLength: function( data ){\n        let valueLength = data.fieldEl.value.length,\n            exactLength = (data.attrValue * 1),\n            obj = {\n                result: valueLength === exactLength\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n\n        }\n\n        return obj;\n    },\n\n    file: function( data ){\n        let fieldEl = data.fieldEl,\n            maxFileSize = (fieldEl.getAttribute('data-max-file-size') || data.fieldOptions.maxFileSize) * 1,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files),\n            obj = { result: true };\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = maxFileSize > 0 && (file.size/1024/1024) > maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                obj.result = false;\n                if( typeof obj.errors === 'undefined' ){\n                    obj.errors = {};\n                }\n                obj.errors.file = true;\n                if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n                if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n            }\n        });\n\n        return obj;\n    },\n\n    length: function( data ){\n        try {\n            let valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue),\n                isMinlengthOk = valueL >= attrValue[0],\n                isMaxlengthOk = valueL <= attrValue[1],\n                obj = { result: isMinlengthOk && isMaxlengthOk };\n\n            if( !obj.result ){\n\n                obj.errors = { stringLength: true };\n                if( !isMinlengthOk ){ obj.errors.minlength = true; }\n                if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            maxVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            maxVal = maxVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        maxVal = maxVal * 1;\n\n        let obj = {\n                result: value <= maxVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { max: true };\n        }\n        \n        return obj;\n    },\n    \n    maxlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length <= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    },\n    \n    min: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            minVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            minVal = minVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        minVal = minVal * 1;\n\n        let obj = {\n                result: value >= minVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { min: true };\n        }\n        \n        return obj;\n    },\n\n    minlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length >= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = {\n                result: fieldRegex.test( fieldEl.value )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0,\n            obj = { result: isValid };\n\n        return obj;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n            obj = { result: checkedEl !== null };\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            obj.result = isValidValue;\n        }\n\n        if( !obj.result ){\n            obj.errors = { requiredFrom: true };\n        }\n        \n        return obj;\n    }\n    \n}\n","\nimport { executeCallback, mergeObjects, serializeObject } from './helpers';\n\n// AJAX CALL USING XMLHttpRequest API\nexport function ajaxCall( formDataObj ){\n\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        xhrOptions = mergeObjects( {}, formOptions.ajaxOptions ),\n        isMultipart = xhrOptions.contentType === 'multipart/form-data';\n\n    xhrOptions.data = formDataObj;\n    \n    if( isMultipart && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in xhrOptions.data){\n            formDataMultipart.append( key, xhrOptions.data[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        xhrOptions.data = formDataMultipart;\n    }\n\n    let XHR = new XMLHttpRequest(),\n        parseResponse = function( xhr ){\n            let data = xhr.responseText,\n                getJSON = function(){\n                    try{\n                        let obj = JSON.parse(data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                },\n                getXML_HTML = function(){\n                    try{\n                        let isXML = xhr.responseXML !== null,\n                            obj = (isXML ? new DOMParser().parseFromString(data, 'text/xml') : data);\n                        return obj;\n                    } catch(e){\n                        return false;\n                    }\n                };\n            \n            return (getJSON() || getXML_HTML() || data);\n        },\n        successFn = function(e) {\n            let xhr = e.target;\n\n            if( xhr.status === 200 ){\n                let responseData = parseResponse(xhr);\n                formEl.classList.add( self.options.formOptions.cssClasses.ajaxSuccess );\n                executeCallback.call( self, {fn: formOptions.onSubmitSuccess, data: responseData} );\n            } else {\n                errorFn(e);\n            }\n        },\n        errorFn = function(e) {\n            let xhr = e.target;\n            formEl.classList.add( self.options.formOptions.cssClasses.ajaxError );\n            executeCallback.call( self, {fn: formOptions.onSubmitError, data: xhr} );\n        },\n        completeFn = function(e) {\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n\n            formEl.classList.remove( self.options.formOptions.cssClasses.ajaxPending );\n            formEl.classList.add( self.options.formOptions.cssClasses.ajaxComplete );\n            btnEl.disabled = false;\n            executeCallback.call( self, {fn: formOptions.onSubmitComplete} );\n        };\n    \n    XHR.addEventListener('load',    successFn, false);\n    XHR.addEventListener('error',   errorFn,    false);\n    XHR.addEventListener('loadend', completeFn,  false);\n    \n    if( xhrOptions.method === 'GET' ){\n        xhrOptions.url += ( /\\?/.test(xhrOptions.url) ? '&' : '?' ) + serializeObject( xhrOptions.data );\n        if( xhrOptions.cache === false ){\n            xhrOptions.url +=  (/\\&/.test(xhrOptions.url) ? '&' : '') + '_=' + (new Date().getTime());\n        }\n    }\n    \n    XHR.open(xhrOptions.method, xhrOptions.url, xhrOptions.async);\n\n    if ( xhrOptions.xhrFields ) {\n        for ( let i in xhrOptions.xhrFields ) {\n            XHR[ i ] = xhrOptions.xhrFields[ i ];\n        }\n    }\n\n    if ( xhrOptions.mimeType && XHR.overrideMimeType ) {\n        XHR.overrideMimeType( xhrOptions.mimeType );\n    }\n    \n    if( xhrOptions.data && xhrOptions.contentType !== 'multipart/form-data' ){\n        XHR.setRequestHeader('Content-Type', xhrOptions.contentType);\n    }\n    \n    for( let h in xhrOptions.headers ){\n        XHR.setRequestHeader( h, xhrOptions.headers[h] );\n    }\n\n    if( !isMultipart ){\n        xhrOptions.data = JSON.stringify(xhrOptions.data);\n    }\n    \n    XHR.send( (xhrOptions.method === 'GET' ? null : xhrOptions.data) );\n\n    if ( xhrOptions.async && xhrOptions.timeout > 0 ) {\n        timeoutTimer = window.setTimeout(function() {\n            XHR.abort();\n        }, xhrOptions.timeout);\n    }\n    \n}\n","\nimport { removeClass, runFunctionsSequence, validateFormObjDefault } from './helpers';\n//import { ajaxCall } from './ajaxCall';\nimport { ajaxCall } from './ajaxCallXhr';\n\nexport function submit( event ){\n\n    const self = this,\n          options = self.options,\n          isAjaxForm = options.formOptions.ajaxSubmit,\n          formEl = self.formEl,\n          btnEl = formEl.querySelector('[type=\"submit\"]'),\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n\n    if( isAjaxForm ){\n        eventPreventDefault(false);\n    }\n\n    if( btnEl ){\n        if( btnEl.disabled ){\n            eventPreventDefault(false);\n            return false;\n        }\n        btnEl.disabled = true;\n    }\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidationPromise = (handleValidation ? self.validateForm() : Promise.resolve(validateFormObjDefault));\n\n    formValidationPromise.then(formValidation => {\n\n        let beforeSendData = { stopExecution: false, formData: {} };\n\n        if( !formValidation.result ){\n            eventPreventDefault();\n            beforeSendData.stopExecution = true;\n            return [beforeSendData];\n        }\n        \n        let formDataObj = (isAjaxForm ? self.getFormData() : null),\n            callbacksBeforeSend = options.formOptions.beforeSend;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        const rfsObject = {\n            functionsList: callbacksBeforeSend,\n            data: beforeSendData,\n            stopConditionFn: function(data){ return data.stopExecution; }\n        };\n        return runFunctionsSequence.call(self, rfsObject);\n\n    }).then(dataList => {\n\n        if( dataList.filter(data => data.stopExecution).length > 0 ){\n            eventPreventDefault();\n            return false;\n        }\n        \n        if( isAjaxForm ){\n\n            const formData = dataList[dataList.length - 1].formData;\n            const cssClasses = self.options.formOptions.cssClasses;\n            removeClass( formEl, (cssClasses.ajaxComplete + ' ' + cssClasses.ajaxError + ' ' + cssClasses.ajaxSuccess) );\n            formEl.classList.add( cssClasses.ajaxPending );\n\n            ajaxCall.call(self, formData);\n\n        }\n\n    });\n    \n}\n","\nimport { executeCallback, fieldsStringSelector, isFieldForChangeEvent } from './helpers';\nimport { submit } from './submit';\n\nexport const callbackFns = {\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n            executeCallback.call( self, {fn: fieldOptions.onPastePrevented, data: fieldEl} );\n        }\n\n    },\n\n    submit: function( event ){\n        submit.call( this, event );\n    },\n\n    validation: function( event ){\n\n        const self = this,\n              eventName = event.type,\n              fieldEl = event.target;\n\n        if( fieldEl.matches( fieldsStringSelector ) ){\n            const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = fieldEl.required;\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = findReqMoreEl.required && findReqMoreEl.checked;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n                    fieldEl.required = reqMoreEl.required;\n                }\n            }\n            \n            if(\n                (isFieldForChangeEventBoolean && eventName === 'change') ||\n                (!isFieldForChangeEventBoolean && eventName !== 'change')\n            ){\n                \n                return self.validateField( fieldEl ).then(obj => {\n                    const type = obj.fieldEl.type,\n                          realtedFieldEqualTo = obj.fieldEl.closest('form').querySelector('[data-equal-to=\"'+ obj.fieldEl.name +'\"]');\n\n                    if(\n                        // FIELD IS ( required OR data-validate-if-filled ) AND RELATED FIELD data-equal-to HAS A VALUE\n                        (obj.fieldEl.required || obj.fieldEl.matches('[data-validate-if-filled]')) && \n                        !(type === 'checkbox' || type === 'radio') && \n                        realtedFieldEqualTo && realtedFieldEqualTo.value.trim() !== ''\n                    ){\n                        return self.validateField( realtedFieldEqualTo );\n                    } else {\n                        return obj;\n                    }\n                });\n\n            }\n        }\n        \n    }\n\n}\n","\nexport function formStartup(){\n\n    const self = this,\n          formEl = self.formEl;\n\n    formEl.noValidate = true;\n\n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // MAXLENGTH IS BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n\n                // FOR XMLHttpRequest API\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n\n                // FOR fetch API\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n                \n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nimport { checkFormEl, isNodeList, mergeObjects }   from './helpers';\nimport { callbackFns }                             from './listenerCallbacks';\nimport { formStartup }                             from './formStartup';\n\nexport function constructorFn( formEl, optionsObj = {} ){\n\n    let self = this,\n        argsL = arguments.length,\n        checkFormElem = checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormElem.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormElem.element;\n    self.formEl.formjs = self;\n    self.options = mergeObjects({}, self.constructor.prototype.options, optionsObj);\n    self.listenerCallbacks = {\n        dataTypeNumber:     callbackFns.dataTypeNumber,\n        keypressMaxlength:  callbackFns.keypressMaxlength,\n        pastePrevent:       callbackFns.pastePrevent.bind(self),\n        submit:             callbackFns.submit.bind(self),\n        validation:         callbackFns.validation.bind(self)\n    };\n    Object.freeze(self.listenerCallbacks);\n\n    formStartup.call( self );\n    \n}\n","\nexport function destroy(){\n\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents;\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n\n    delete self.formEl.formjs;\n    \n}\n","\nexport function getFormData(){\n\n    let self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    return self.options.formOptions.getFormData.call( self, filteredFields );\n    \n}\n","\nimport { getFilledFields, isFieldForChangeEvent } from './helpers';\n\nexport const init = function(){\n\n    const self = this,\n          formEl = self.formEl,\n          formFields = getFilledFields( formEl );\n\n    // VALIDATE ALL FILLED FIELDS\n    formFields.forEach(fieldEl => {\n        const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl);\n        const fakeEventObj = { target: fieldEl, type: (isFieldForChangeEventBoolean ? 'change': '') };\n        self.listenerCallbacks.validation.call( self, fakeEventObj );\n    });\n\n    self.isInitialized = true;\n    return self;\n\n}\n","\nimport { mergeObjects, toCamelCase } from './helpers';\nimport { validationRulesAttributes } from './validationRules';\n\nexport function isValid( fieldEl, fieldOptions = {} ){\n\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n\n    let attrValidations = [],\n        attrValidationsResult = isValidValue,\n        obj = { result: isValidValue, fieldEl };\n\n    if( !obj.result ){\n        obj.errors = { empty: true };\n        return Promise.resolve(obj);\n    }\n\n    // COLLECT SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isAttrValueWithFn = attrName === 'type' && typeof validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof validationRulesAttributes[attrName] === 'function';\n\n        if( isAttrValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isAttrValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isAttrValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    return new Promise(function(resolve){\n\n        // RUN SPECIFIC VALIDATIONS FOR validationRulesAttributes\n        attrValidations.forEach(function(item){\n            let extraVal = validationRulesAttributes[item.attrName]( item );\n            if( !extraVal.result ){\n                obj = mergeObjects({}, obj, extraVal);\n                attrValidationsResult = false;\n            }\n        });\n\n        // RUN VALIDATIONS FOR validationRules\n        if( typeof self.validationRules[fieldType] === 'function' ){\n            resolve( self.validationRules[fieldType](fieldValue, fieldEl) );\n        } else {\n            resolve( obj );\n        }\n\n    }).then(data => {\n\n        obj = mergeObjects( {}, obj, data, {fieldEl} );\n        obj.result = obj.result && attrValidationsResult;\n\n        if( !obj.result ){\n            let fieldErrors = (typeof self.validationErrors[fieldType] === 'function' ? self.validationErrors[fieldType](fieldValue, fieldEl) : {});\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.rule = true;\n            obj.errors = mergeObjects({}, obj.errors, fieldErrors);\n        }\n        \n        return obj;\n\n    });\n\n}\n","\nimport { isDOMNode, mergeObjects, runFunctionsSequence, validateFieldObjDefault } from './helpers';\nimport { isValid } from './isValid';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let obj = mergeObjects({}, validateFieldObjDefault, {fieldEl});\n\n    if( !isDOMNode(fieldEl) ){ return Promise.resolve(obj); }\n\n    let options =           mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj ),\n        isValidValue =      fieldEl.value.trim().length > 0,\n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]');\n\n    const rfsObject = {\n        functionsList: self.options.fieldOptions.beforeValidation,\n        data: {fieldEl}\n    };\n\n    return runFunctionsSequence.call(self, rfsObject)\n        .then(data => {\n\n            let dataObj = data.pop();\n            return new Promise(function(resolve){\n                if(\n                    (!isRequired && !isValidateIfFilled && !isReqFrom) ||   // IT IS A NORMAL FORM FIELD\n                    (isValidateIfFilled && !isValidValue) ||                // IT IS data-validate-if-filled AND EMPTY\n                    (isReqFrom && !isRequired )                             // IT IS data-required-from AND NOT required\n                ){\n\n                    dataObj.result = true;\n                    resolve( dataObj );\n                \n                } else {\n\n                    resolve( isValid.call(self, fieldEl, options) );\n                    \n                }\n\n            });\n\n        });\n\n}\n","\nimport { fieldsStringSelector, getUniqueFields, mergeObjects, validateFormObjDefault } from './helpers';\nimport { isValidField } from './isValidField';\n\nexport function isValidForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          formEl = self.formEl,\n          obj = mergeObjects({}, validateFormObjDefault),\n          fieldOptions = mergeObjects( {}, fieldOptionsObj, {focusOnRelated: false} ),\n          fieldsList = getUniqueFields( formEl.querySelectorAll(fieldsStringSelector) );\n\n    return Promise.all( fieldsList.map(function( fieldEl ){\n        \n        return isValidField.call( self, fieldEl, fieldOptions );\n\n    }) ).then(list => {\n\n        let areAllFieldsValid = list.filter(fieldObj => !fieldObj.result).length === 0;\n        obj.result = areAllFieldsValid;\n        obj.fields = list;\n\n        return obj;\n\n    });\n\n}\n","\nimport { executeCallback, mergeObjects } from './helpers';\nimport { isValidField } from './isValidField';\nimport { isValidForm } from './isValidForm';\n\nexport function validateField( fieldElem, fieldOptionsObj ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem),\n          skipUIfeedback = self.options.fieldOptions.skipUIfeedback,\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n    \n    return new Promise(function(resolve){\n\n        const prom = isValidField.call( self, fieldEl, fieldOptions );\n        resolve( prom );\n\n    }).then(obj => {\n\n        return new Promise(resolve => {\n            if( obj.fieldEl ){\n            \n                const runCallback = function( data, fieldOptionsNew = {} ){\n                    let options = mergeObjects({}, {fieldOptions}, {fieldOptions:fieldOptionsNew});\n                    executeCallback.call( self, {fn: fieldOptions.onValidation, data, options} );\n                };\n\n                runCallback( [obj] );\n\n                if( fieldOptions.onValidationCheckAll && obj.result ){\n                    // FORCE skipUIfeedback TO true\n                    self.options.fieldOptions.skipUIfeedback = true;\n                    resolve( isValidForm.call( self ).then(dataForm => {\n\n                        runCallback( dataForm.fields, {skipUIfeedback: true} );\n                        \n                        if( !skipUIfeedback ){\n                            const isFormValid = dataForm.fields.filter(function(field){ return !field.result; }).length === 0;\n                            const clMethodName = isFormValid ? 'add' : 'remove';\n                            self.formEl.classList[clMethodName]( self.options.formOptions.cssClasses.valid );\n                        }\n                        \n                        // RESTORE skipUIfeedback TO THE ORIGINAL VALUE\n                        self.options.fieldOptions.skipUIfeedback = skipUIfeedback;\n\n                        return obj;\n                    }) );\n                } else if( !skipUIfeedback && !obj.result ){\n                    self.formEl.classList.remove( self.options.formOptions.cssClasses.valid );\n                }\n            }\n            resolve( obj );\n        });\n        \n    });\n    \n}\n","\nimport { executeCallback, mergeObjects } from './helpers';\nimport { isValidForm } from './isValidForm';\n\nexport function validateForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n\n    return new Promise(function(resolve){\n\n        const prom = isValidForm.call( self, fieldOptions );\n        resolve(prom);\n\n    }).then(obj => {\n\n        if( !fieldOptions.skipUIfeedback ){\n            const isFormValid = obj.fields.filter(function(field){ return !field.result; }).length === 0;\n            const clMethodName = isFormValid ? 'add' : 'remove';\n            self.formEl.classList[clMethodName]( self.options.formOptions.cssClasses.valid );\n        }\n\n        executeCallback.call( self, {fn: fieldOptions.onValidation, data: obj.fields, options: {fieldOptions}} );\n        return obj;\n\n    });\n    \n}\n","\nimport { mergeObjects }         from './modules/helpers';\nimport { options }              from './modules/options';\nimport { validationRules }      from './modules/validationRules';\nimport { validationErrors }     from './modules/validationErrors';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { constructorFn }        from './modules/constructor';\nimport { destroy }              from './modules/destroy';\nimport { getFormData }          from './modules/getFormData';\nimport { init }                 from './modules/init';\nimport { validateField }        from './modules/validateField';\nimport { validateForm }         from './modules/validateForm';\n\nconst version = '3.2.2';\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        constructorFn.call(this, formEl, optionsObj);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n    \n    getFormData(){\n        return getFormData.call(this);\n    }\n\n    init(){\n        return init.call(this);\n    }\n\n    validateField( fieldEl, fieldOptions ){\n        return validateField.call(this, fieldEl, fieldOptions);\n    }\n\n    validateForm( fieldOptions ){\n        return validateForm.call(this, fieldOptions);\n    }\n    \n    static addValidationErrors( errorsObj ){\n        this.prototype.validationErrors = mergeObjects({}, this.prototype.validationErrors, errorsObj);\n    }\n\n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = mergeObjects({}, this.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationErrors = validationErrors;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\nexport default Form;\n","\nexport const validationErrors = {\n\n    email: function ( string ) {\n        const obj = {};\n\n        if( string.indexOf('@') === -1 ){\n\n            // @ IS MISSING\n            obj.missingAtChar = true;\n\n        } else {\n\n            let splitAt_at = string.split('@');\n            if( splitAt_at[0].length === 0 ){\n\n                // USER NAME IS MISSING\n                obj.missingUserName = true;\n\n            }\n\n            if( splitAt_at[1].length === 0 ){\n\n                // IS EMPTY AFTER @\n                obj.missingDomain = true;\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                // DOT IS MISSING\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else {\n\n                // EXTENSION MISSING OR NOT LONG ENOUGH\n                let splitAt_dot = splitAt_at[1].split('.'),\n                    extLength = splitAt_dot[1].length;\n                if( extLength === 0 ) {\n                    obj.missingExtension = true;\n                } else if( extLength < 2 ){\n                    obj.minlengthExtension = true;\n                }\n\n            }\n        }\n\n        return obj;\n\n    }\n\n}"],"sourceRoot":""}
{"version":3,"sources":["webpack://Form/webpack/universalModuleDefinition","webpack://Form/webpack/bootstrap","webpack://Form/./src/modules/helpers.js","webpack://Form/./src/modules/optionsUtils.js","webpack://Form/./src/modules/options.js","webpack://Form/./src/modules/validationRules.js","webpack://Form/./src/modules/submit.js","webpack://Form/./src/modules/ajaxCall.js","webpack://Form/./src/modules/listenerCallbacks.js","webpack://Form/./src/modules/formStartup.js","webpack://Form/./src/modules/init.js","webpack://Form/./src/modules/isValidField.js","webpack://Form/./src/modules/isValid.js","webpack://Form/./src/modules/isValidForm.js","webpack://Form/./src/modules/validateField.js","webpack://Form/./src/modules/validateForm.js","webpack://Form/./src/index.js","webpack://Form/./src/modules/constructor.js","webpack://Form/./src/modules/destroy.js","webpack://Form/./src/modules/validationErrors.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","addClass","element","cssClasses","split","forEach","className","classList","add","checkFormEl","formEl","isString","isFormSelector","isDOMNode","document","querySelector","tagName","toLowerCase","result","customEvents","validation","submit","dispatchCustomEvent","elem","eventName","data","eventOptions","mergeObjects","bubbles","eventObj","Event","dispatchEvent","fieldsStringSelector","getSplitChar","string","splitChar","indexOf","getUniqueFields","nodeList","currentFieldName","currentFieldType","Array","from","filter","fieldEl","type","matches","node","Element","isPrototypeOf","isFieldForChangeEvent","isNodeList","NodeList","out","arguments","length","obj","isArray","toString","isObject","concat","slice","push","removeClass","remove","runFunctionsSequence","functionsList","stopConditionFn","reduce","acc","promiseFn","then","res","dataNew","Promise","resolve","dataList","serializeObject","constructor","keys","a","k","encodeURIComponent","join","toCamelCase","replace","all","letter","toUpperCase","validateFieldObjDefault","validateFormObjDefault","fields","defaultCallbacksInOptions","fieldOptions","beforeValidation","fieldObj","options","dirty","containerEl","closest","skipUIfeedback","pending","formOptions","getFormData","filteredFields","formData","isCheckbox","isRadio","isSelect","checked","checkboxes","querySelectorAll","field","checkedRadio","selectedOpts","option","selected","error","errorEmpty","errorRule","valid","focusOnRelated","handleFileUpload","handleValidation","maxFileSize","onValidationCheckAll","preventPasteFields","strictHtmlValidation","validateOnEvents","ajaxOptions","cache","credentials","headers","method","redirect","timeout","url","location","href","ajaxSubmit","beforeSend","ajaxComplete","ajaxError","ajaxPending","ajaxSuccess","handleSubmit","validationRulesAttributes","checkbox","dataChecksEl","checks","attrValue","getAttribute","JSON","parse","checkedElLength","isMinOk","isMaxOk","errors","minChecks","maxChecks","e","Error","equalTo","checkFromEl","exactLength","valueLength","minlength","maxlength","file","MIMEtype","accept","RegExp","filesList","files","exceedMaxFileSize","size","isAcceptedFileType","test","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","stringLength","max","isDate","maxVal","reverse","min","minVal","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","reqMoreEl","required","event","target","instance","formjs","formCssClasses","isAjaxForm","btnEl","eventPreventDefault","enableBtn","disabled","preventDefault","validateForm","formValidation","beforeSendData","stopExecution","formDataObj","callbacksBeforeSend","pop","timeoutTimer","isMultipart","body","formDataMultipart","FormData","append","idx","stringify","Headers","controller","AbortController","signal","window","setTimeout","abort","fetch","response","ok","reject","fetchMethod","contentType","headerOpt","getFetchMethod","clearTimeout","ajaxCall","listenerCallbacks","fieldValue","stopImmediatePropagation","valueReplaced","maxLength","keyPressed","which","keyCode","self","isFieldForChangeEventBoolean","isReqFrom","isReqMore","findReqMoreEl","findReqFromEl","id","focus","validateField","realtedFieldEqualTo","fieldsArray","errorClasses","extraErrorClass","isChecks","empty","errorClassToRemove","formStartup","noValidate","addEventListener","useCapturing","init","formFields","map","isCheckboxOrRadio","getFilledFields","isInitialized","isValidField","validationRules","validationErrors","isRequired","isValidateIfFilled","rfsObject","dataObj","fieldType","fieldAttributes","attributes","sort","b","attrValidations","attrValidationsResult","attr","attrName","isAttrValueWithFn","isAttrNameWithFn","extraValObj","unshift","item","extraVal","fieldErrors","rule","isValid","isValidForm","fieldsList","list","areAllFieldsValid","dataForm","clMethodName","Form","optionsObj","argsL","checkFormElem","cbList","cbName","optionType","cbOpt","cbFn","constructorFn","errorsObj","rulesObj","removeEventListener","formFieldsEl","email","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","date","number","version"],"mappings":"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","file":"formjs.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Form\"] = factory();\n\telse\n\t\troot[\"Form\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport const\n\naddClass = ( element, cssClasses ) => {\n    cssClasses.split(' ').forEach(className => {\n        element.classList.add( className );\n    });\n},\n\ncheckDirtyField = ( fields, cssClasses ) => {\n\n    var fields = (isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(fieldEl => {\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n},\n\ncheckFormEl = formEl => {\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\ncustomEvents = {\n    field: {\n        validation: 'fjs.field:validation'\n    },\n    form: {\n        submit:     'fjs.form:submit',\n        validation: 'fjs.form:validation'\n    }\n},\n\ndispatchCustomEvent = ( elem, eventName, data = {}, eventOptions = {} ) => {\n    eventOptions = mergeObjects({}, { bubbles: true }, eventOptions);\n    const eventObj = new Event(eventName, eventOptions);\n    eventObj.data = data;\n    elem.dispatchEvent( eventObj );\n},\n\nexcludeSelector = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])',\n\nfieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"hidden\"]), select, textarea',\n\ngetFilledFields = formEl => {\n    return getUniqueFields( formEl.querySelectorAll(fieldsStringSelector) )\n    .map(fieldEl => {\n\n        const name = fieldEl.name,\n              type = fieldEl.type,\n              isCheckboxOrRadio = (type === 'checkbox' || type === 'radio'),\n              fieldChecked = formEl.querySelector('[name=\"' + name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        return (\n            isCheckboxOrRadio ? (fieldChecked || null) :\n            (isReqFrom && reqMoreEl.checked) || (!isReqFrom && fieldEl.value) ? fieldEl : null\n        );\n\n    })\n    .filter(fieldEl => {\n        return  fieldEl !== null;\n    });\n},\n\ngetSplitChar = string => {\n    let splitChar = '.';\n\n    if( string.indexOf(splitChar) === -1 ){\n        if( string.indexOf('-') >= 0 ){\n            splitChar = '-';\n        } else if( string.indexOf('/') >= 0 ){\n            splitChar = '/';\n        }\n    }\n\n    return splitChar;\n},\n\ngetUniqueFields = nodeList => {\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    return Array.from( nodeList ).filter(fieldEl => {\n        const name = fieldEl.name,\n              type = fieldEl.type;\n\n        if( name === currentFieldName && type === currentFieldType ){\n            return false;\n        }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        return true;\n    });\n    \n},\n\nisDOMNode = node => {\n    return Element.prototype.isPrototypeOf( node );\n},\n\nisFieldForChangeEvent = fieldEl => {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\nisNodeList = nodeList => {\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\nisPlainObject = object => {\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\nmergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // * STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        // IF THIS IS ONE OF ABOVE (*) AND THE DESTINATION OBJECT IS AN ARRAY\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\nremoveClass = ( element, cssClasses ) => {\n    cssClasses.split(' ').forEach(className => {\n        element.classList.remove( className );\n    });\n},\n\nrunFunctionsSequence = ( { functionsList = [], data = {}, stopConditionFn = function(){return false} } = {} ) => {\n    return functionsList.reduce((acc, promiseFn) => {\n        return acc.then(res => {\n            let dataNew = mergeObjects({}, res[res.length - 1]);\n            if( stopConditionFn(dataNew) ){\n                return Promise.resolve(res);\n            }\n            return new Promise(resolve => { resolve(promiseFn(dataNew)) })\n                .then((result = dataNew) => {\n                    res.push(result);\n                    return res;\n                });\n        });\n    }, Promise.resolve([data]))\n        .then(dataList => dataList.length > 1 ? dataList.slice(1) : dataList);\n},\n\nserializeObject = obj => {\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce((a,k) => {\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\ntoCamelCase = string => {\n    return string.replace(/-([a-z])/ig, (all, letter) => { return letter.toUpperCase(); });\n},\n\nvalidateFieldObjDefault = { result: false, fieldEl: null },\n\nvalidateFormObjDefault = { result: true, fields: [] }\n","\nimport { addClass, checkDirtyField } from './helpers';\n\nexport const defaultCallbacksInOptions = {\n    fieldOptions: {\n\n        beforeValidation: function beforeValidationDefault ( fieldObj ) {\n\n            const fieldOptions = this.options.fieldOptions;\n\n            checkDirtyField( fieldObj.fieldEl, fieldOptions.cssClasses.dirty );\n            if( !fieldOptions.skipUIfeedback ){\n                addClass( fieldObj.fieldEl.closest('[data-formjs-question]'), fieldOptions.cssClasses.pending );\n            }\n\n        }\n\n    },\n    formOptions: {\n\n        getFormData: function getFormDataDefault ( filteredFields ) {\n\n            const formData = {},\n                  formEl = this.formEl;\n\n            filteredFields.forEach(function( fieldEl ){\n                const isCheckbox = fieldEl.type === 'checkbox',\n                      isRadio = fieldEl.type === 'radio',\n                      isSelect = fieldEl.matches('select'),\n                      name = fieldEl.name;\n                let value = fieldEl.value;\n                                \n                if( isCheckbox ) {\n                    \n                    value = fieldEl.checked;\n                    let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                    if( checkboxes.length > 1 ){\n\n                        value = [];\n                        let checkedElems = checkboxes.filter(field => field.checked);\n                        checkedElems.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                        \n                } else if( isRadio ){\n                    \n                    let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                    value = (checkedRadio === null ? null : checkedRadio.value);\n                    \n                } else if( isSelect ){\n\n                    let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                    if( selectedOpts.length > 1 ){\n\n                        value = [];\n                        selectedOpts.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                }\n\n                formData[ name ] = value;\n            });\n\n            return formData;\n\n        }\n\n    }\n}\n","\nimport { defaultCallbacksInOptions } from './optionsUtils';\n\nexport const options = {\n\n    fieldOptions: {\n        beforeValidation:       [defaultCallbacksInOptions.fieldOptions.beforeValidation],\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            pending:            'is-pending',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onValidationCheckAll:   true,\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            {\n            cache:              'no-store',\n            credentials:        'same-origin',\n            headers: {\n                                'Content-Type': 'application/json',\n                                'Accept':       'application/json'\n            },\n            method:             'POST',\n            mode:               'same-origin',\n            redirect:           'follow',\n            timeout:            0,\n            url:                location.href\n        },\n        ajaxSubmit:             true,\n        beforeSend:             [],\n        cssClasses: {\n            ajaxComplete:       'ajax-complete',\n            ajaxError:          'ajax-error',\n            ajaxPending:        'ajax-pending',\n            ajaxSuccess:        'ajax-success',\n            submit:             'is-submitting',\n            valid:              'is-valid'\n        },\n        getFormData:            defaultCallbacksInOptions.formOptions.getFormData,\n        handleSubmit:           true\n    }\n    \n}\n","\nimport { getSplitChar } from './helpers';\n\nexport const validationRules = {\n            \n    date: function( string ){\n        // DATE AS ISO 8601 DATE FORMAT     YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let date = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard EMAIL MUST BE AT LEAST:\n        // a@a.aa\n        let obj = {\n            result: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n        };\n\n        return obj;\n    }\n    \n}\n\nexport const validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]'),\n            obj = { result: data.fieldEl.checked };\n\n        if( dataChecksEl !== null ){\n            obj = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return obj;\n    },\n\n    checks: function( data ){\n        try {\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n                isMinOk = checkedElLength >= attrValue[0],\n                isMaxOk = checkedElLength <= attrValue[1],\n                obj = {\n                    result: isMinOk && isMaxOk\n                };\n\n            if( !obj.result ){\n\n                obj.errors = { checks: true };\n                if( !isMinOk ){ obj.errors.minChecks = true; }\n                if( !isMaxOk ){ obj.errors.maxChecks = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n            obj = {\n                result: fieldEl.value === checkFromEl.value\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { equalTo: true };\n        }\n\n        return obj;\n    },\n    \n    exactLength: function( data ){\n        let valueLength = data.fieldEl.value.length,\n            exactLength = (data.attrValue * 1),\n            obj = {\n                result: valueLength === exactLength\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n\n        }\n\n        return obj;\n    },\n\n    file: function( data ){\n        let fieldEl = data.fieldEl,\n            maxFileSize = (fieldEl.getAttribute('data-max-file-size') || data.fieldOptions.maxFileSize) * 1,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files),\n            obj = { result: true };\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = maxFileSize > 0 && (file.size/1024/1024) > maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                obj.result = false;\n                if( typeof obj.errors === 'undefined' ){\n                    obj.errors = {};\n                }\n                obj.errors.file = true;\n                if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n                if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n            }\n        });\n\n        return obj;\n    },\n\n    length: function( data ){\n        try {\n            let valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue),\n                isMinlengthOk = valueL >= attrValue[0],\n                isMaxlengthOk = valueL <= attrValue[1],\n                obj = { result: isMinlengthOk && isMaxlengthOk };\n\n            if( !obj.result ){\n\n                obj.errors = { stringLength: true };\n                if( !isMinlengthOk ){ obj.errors.minlength = true; }\n                if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            maxVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            maxVal = maxVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        maxVal = maxVal * 1;\n\n        let obj = {\n                result: value <= maxVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { max: true };\n        }\n        \n        return obj;\n    },\n    \n    maxlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length <= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    },\n    \n    min: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            minVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            minVal = minVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        minVal = minVal * 1;\n\n        let obj = {\n                result: value >= minVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { min: true };\n        }\n        \n        return obj;\n    },\n\n    minlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length >= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = {\n                result: fieldRegex.test( fieldEl.value )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0,\n            obj = { result: isValid };\n\n        return obj;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n            obj = { result: checkedEl !== null };\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            obj.result = isValidValue;\n        }\n\n        if( !obj.result ){\n            obj.errors = { requiredFrom: true };\n        }\n        \n        return obj;\n    }\n    \n}\n","\nimport { addClass, customEvents, dispatchCustomEvent, removeClass, runFunctionsSequence, validateFormObjDefault } from './helpers';\nimport { ajaxCall } from './ajaxCall';\n\nexport function submit( event ){\n\n    const formEl = event.target,\n          instance = formEl.formjs,\n          options = instance.options,\n          formCssClasses = options.formOptions.cssClasses,\n          isAjaxForm = options.formOptions.ajaxSubmit,\n          btnEl = formEl.querySelector('[type=\"submit\"]'),\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n\n    if( isAjaxForm ){\n        eventPreventDefault(false);\n    }\n\n    if( btnEl ){\n        if( btnEl.disabled ){\n            eventPreventDefault(false);\n            return false;\n        }\n        btnEl.disabled = true;\n    }\n\n    removeClass( formEl, (formCssClasses.ajaxComplete + ' ' + formCssClasses.ajaxError + ' ' + formCssClasses.ajaxSuccess) );\n    addClass( formEl, formCssClasses.submit );\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidationPromise = (handleValidation ? instance.validateForm() : Promise.resolve(validateFormObjDefault));\n\n    formValidationPromise.then(formValidation => {\n\n        let beforeSendData = { stopExecution: false, formData: {} };\n\n        if( !formValidation.result ){\n            eventPreventDefault();\n            removeClass( formEl, formCssClasses.submit );\n            beforeSendData.stopExecution = true;\n            return [beforeSendData];\n        }\n        \n        let formDataObj = (isAjaxForm ? instance.getFormData() : null),\n            callbacksBeforeSend = options.formOptions.beforeSend;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        const rfsObject = {\n            functionsList: callbacksBeforeSend,\n            data: beforeSendData,\n            stopConditionFn: function(data){ return data.stopExecution; }\n        };\n        return runFunctionsSequence(rfsObject);\n\n    }).then(dataList => {\n\n        if( dataList.filter(data => data.stopExecution).length > 0 ){\n            eventPreventDefault();\n            return false;\n        }\n        \n        if( isAjaxForm ){\n\n            const formData = dataList.pop().formData;\n            addClass( formEl, formCssClasses.ajaxPending );\n            dispatchCustomEvent( formEl, customEvents.form.submit, ajaxCall( formEl, formData, options ) );\n            \n        }\n\n    });\n    \n}\n","\nimport { addClass, mergeObjects, removeClass, serializeObject } from './helpers';\n\nconst getFetchMethod = (response, options) => {\n    const accept = options.headers.get('Accept');\n    const contentType = response.headers.get('Content-Type');\n    const headerOpt = accept || contentType || '';\n\n    if( headerOpt.indexOf('application/json') > -1 || headerOpt === '' ){\n        return 'json';\n    } else if( headerOpt.indexOf('text/') > -1 ){\n        return 'text';\n    } else {\n        return 'blob';\n    }\n};\n\nexport function ajaxCall( formEl, formDataObj, options ){\n\n    let btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        ajaxOptions = mergeObjects( {}, options.formOptions.ajaxOptions ),\n        isMultipart = ajaxOptions.headers['Content-Type'] === 'multipart/form-data';\n\n    ajaxOptions.body = formDataObj;\n    \n    // POST A FormData OBJECT ( multipart )\n    if( isMultipart && options.fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in ajaxOptions.body){\n            formDataMultipart.append( key, ajaxOptions.body[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        ajaxOptions.body = formDataMultipart;\n    }\n\n    if( ajaxOptions.method === 'GET' ){\n\n        // FETCH WITH \"GET\" METHOD CAN'T HAVE \"body\". SO IT IS APPENDED TO THE URL\n        ajaxOptions.url += ( /\\?/.test(ajaxOptions.url) ? '&' : '?' ) + serializeObject( ajaxOptions.body );\n        delete ajaxOptions.body;\n\n    } else {\n\n        if( ajaxOptions.headers['Content-Type'].indexOf('application/x-www-form-urlencoded') > -1 ){\n            // POST A NORMAL FORM\n            ajaxOptions.body = serializeObject( ajaxOptions.body );\n        } else if( !isMultipart ){\n            // POST A JSON STRING\n            ajaxOptions.body = JSON.stringify(ajaxOptions.body);\n        }\n\n    }\n\n    ajaxOptions.headers = new Headers( ajaxOptions.headers );\n\n    if ( ajaxOptions.timeout > 0 ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        ajaxOptions.signal = signal;\n\n        timeoutTimer = window.setTimeout(function() {\n            controller.abort();\n        }, ajaxOptions.timeout);\n    }\n\n    return fetch(ajaxOptions.url, ajaxOptions)\n        .then(function( response ){\n            if( !response.ok ){\n                return Promise.reject(response);\n            }\n\n            let fetchMethod = getFetchMethod(response, ajaxOptions);\n\n            return response[fetchMethod]();\n        })\n        .then(function( data ){\n            addClass( formEl, options.formOptions.cssClasses.ajaxSuccess );\n            return data;\n        })\n        .catch(function( error ){\n            addClass( formEl, options.formOptions.cssClasses.ajaxError );\n            return Promise.reject(error);\n        })\n        .finally(function(){\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n            removeClass( formEl, options.formOptions.cssClasses.submit + ' ' + options.formOptions.cssClasses.ajaxPending );\n            addClass( formEl, options.formOptions.cssClasses.ajaxComplete );\n            btnEl.disabled = false;\n        });\n\n}\n","\nimport { addClass, fieldsStringSelector, isFieldForChangeEvent, removeClass } from './helpers';\nimport { submit } from './submit';\n\nexport const listenerCallbacks = {\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const fieldEl = event.target;\n        let fieldOptions = fieldEl.closest('form').formjs.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n        }\n\n    },\n\n    submit: function( event ){\n        submit(event);\n    },\n\n    validation: function( event ){\n\n        const eventName = event.type,\n              fieldEl = event.target,\n              self = fieldEl.closest('form').formjs;\n\n        if( fieldEl.matches( fieldsStringSelector ) ){\n            const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = fieldEl.required;\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = findReqMoreEl.required && findReqMoreEl.checked;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n                    fieldEl.required = reqMoreEl.required;\n                }\n            }\n            \n            if(\n                (isFieldForChangeEventBoolean && eventName === 'change') ||\n                (!isFieldForChangeEventBoolean && eventName !== 'change')\n            ){\n                \n                return self.validateField( fieldEl ).then(obj => {\n                    const type = obj.fieldEl.type,\n                          realtedFieldEqualTo = obj.fieldEl.closest('form').querySelector('[data-equal-to=\"'+ obj.fieldEl.name +'\"]');\n\n                    if(\n                        // FIELD IS ( required OR data-validate-if-filled ) AND RELATED FIELD data-equal-to HAS A VALUE\n                        (obj.fieldEl.required || obj.fieldEl.matches('[data-validate-if-filled]')) && \n                        !(type === 'checkbox' || type === 'radio') && \n                        realtedFieldEqualTo && realtedFieldEqualTo.value.trim() !== ''\n                    ){\n                        return self.validateField( realtedFieldEqualTo );\n                    } else {\n                        return obj;\n                    }\n                });\n\n            }\n        }\n        \n    },\n\n    validationEnd: function( event ){\n\n        const fieldsArray = event.data.fieldEl ? [event.data] : event.data.fields,\n              options = fieldsArray[0].fieldEl.closest('form').formjs.options.fieldOptions;\n\n        fieldsArray.forEach(function( obj ){\n            let fieldEl = obj.fieldEl;\n            if( fieldEl.matches( fieldsStringSelector ) ){\n                let containerEl = fieldEl.closest('[data-formjs-question]'),\n                    isReqFrom = fieldEl.matches('[data-required-from]'),\n                    reqMoreEl = document.querySelector( fieldEl.getAttribute('data-required-from') );\n\n                if( containerEl !== null ){\n                    removeClass( containerEl, options.cssClasses.pending );\n                }\n\n                if( containerEl !== null && !options.skipUIfeedback ){\n\n                    if( obj.result ){\n\n                        if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                            // IF FIELD IS VALID\n                            let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            removeClass( containerEl, errorClasses );\n                            addClass( containerEl, options.cssClasses.valid );\n                        }\n\n                    } else {\n\n                        // IF FIELD IS NOT VALID\n                        let extraErrorClass = options.cssClasses.errorRule;\n\n                        // HANDLE CASE OF FIELD data-checks\n                        let isChecks = fieldEl.matches('[data-checks]'),\n                            checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                        if( (!isChecks && (obj.errors && obj.errors.empty)) || (isChecks && checkedElLength === 0) ){\n                            extraErrorClass = options.cssClasses.errorEmpty;\n                        }\n\n                        let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                            errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                        removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                        addClass( containerEl, errorClasses );\n\n                    }\n                }\n            }\n        });\n\n    }\n\n}\n","\nimport { customEvents } from './helpers';\nimport { listenerCallbacks } from './listenerCallbacks';\n\nexport function formStartup( formEl, options ){\n\n    formEl.noValidate = true;\n\n    let fieldOptions = options.fieldOptions,\n        formOptions = options.formOptions;\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // MAXLENGTH IS BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', listenerCallbacks.pastePrevent, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, listenerCallbacks.validation, useCapturing);\n        });\n\n        formEl.addEventListener(customEvents.field.validation, listenerCallbacks.validationEnd, false);\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nimport { getFilledFields, isFieldForChangeEvent } from './helpers';\nimport { listenerCallbacks } from './listenerCallbacks';\n\nexport const init = function( formEl ){\n\n    const instance = formEl.formjs;\n    const formFields = getFilledFields( formEl );\n\n    // VALIDATE ALL FILLED FIELDS\n    return Promise.all( formFields.map(fieldEl => {\n\n        const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl);\n        const fakeEventObj = { target: fieldEl, type: (isFieldForChangeEventBoolean ? 'change': '') };\n        return listenerCallbacks.validation( fakeEventObj );\n\n    }) ).then(fields => {\n        instance.isInitialized = true;\n        return { instance, fields };\n    });;\n\n}\n","\nimport { isDOMNode, mergeObjects, runFunctionsSequence, validateFieldObjDefault } from './helpers';\nimport { isValid } from './isValid';\n\nexport function isValidField( fieldEl, fieldOptions, validationRules, validationErrors ){\n\n    const obj = mergeObjects({}, validateFieldObjDefault, {fieldEl});\n\n    if( !isDOMNode(fieldEl) ){ return Promise.resolve(obj); }\n\n    const isValidValue =      fieldEl.value.trim().length > 0,\n          isRequired =        fieldEl.required,\n          isReqFrom =         fieldEl.matches('[data-required-from]'),\n          isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]'),\n          rfsObject = {\n            functionsList: fieldOptions.beforeValidation,\n            data: {fieldEl}\n        };\n\n    return runFunctionsSequence(rfsObject)\n        .then(data => {\n\n            let dataObj = data.pop();\n            return new Promise(resolve => {\n                if(\n                    (!isRequired && !isValidateIfFilled && !isReqFrom) ||   // IT IS A NORMAL FORM FIELD\n                    (isValidateIfFilled && !isValidValue) ||                // IT IS data-validate-if-filled AND EMPTY\n                    (isReqFrom && !isRequired )                             // IT IS data-required-from AND NOT required\n                ){\n\n                    dataObj.result = true;\n                    resolve( dataObj );\n                \n                } else {\n\n                    resolve( isValid( fieldEl, fieldOptions, validationRules, validationErrors ) );\n                    \n                }\n\n            });\n\n        });\n\n}\n","\nimport { mergeObjects, toCamelCase } from './helpers';\nimport { validationRulesAttributes } from './validationRules';\n\nexport function isValid( fieldEl, fieldOptions, validationRules, validationErrors ){\n\n    const fieldType = ( fieldEl.matches('[data-subtype]') ? toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort((a,b) => { return a.name < b.name });\n\n    const attrValidations = [];\n    let attrValidationsResult = isValidValue,\n        obj = { result: isValidValue, fieldEl };\n\n    if( !obj.result ){\n        obj.errors = { empty: true };\n        return Promise.resolve(obj);\n    }\n\n    // COLLECT SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    fieldAttributes.forEach(attr => {\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        const attrName = toCamelCase( attr.name.replace('data-', '') ),\n              attrValue = attr.value,\n              isAttrValueWithFn = attrName === 'type' && typeof validationRulesAttributes[attrValue] === 'function',\n              isAttrNameWithFn = typeof validationRulesAttributes[attrName] === 'function';\n\n        if( isAttrValueWithFn || isAttrNameWithFn ){\n\n            const extraValObj = {\n                    attrName: (isAttrValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isAttrValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    return new Promise(resolve => {\n\n        // RUN SPECIFIC VALIDATIONS FOR validationRulesAttributes\n        attrValidations.forEach(item => {\n            const extraVal = validationRulesAttributes[item.attrName]( item );\n            if( !extraVal.result ){\n                obj = mergeObjects({}, obj, extraVal);\n                attrValidationsResult = false;\n            }\n        });\n\n        // RUN VALIDATIONS FOR validationRules\n        if( typeof validationRules[fieldType] === 'function' ){\n            resolve( validationRules[fieldType](fieldValue, fieldEl) );\n        } else {\n            resolve( obj );\n        }\n\n    }).then(data => {\n\n        obj = mergeObjects( {}, obj, data, {fieldEl} );\n        obj.result = obj.result && attrValidationsResult;\n\n        if( !obj.result ){\n            const fieldErrors = (typeof validationErrors[fieldType] === 'function' ? validationErrors[fieldType](fieldValue, fieldEl) : {});\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.rule = true;\n            obj.errors = mergeObjects({}, obj.errors, fieldErrors);\n        }\n        \n        return obj;\n\n    });\n\n}\n","\nimport { fieldsStringSelector, getUniqueFields, mergeObjects, validateFormObjDefault } from './helpers';\nimport { isValidField } from './isValidField';\n\nexport function isValidForm( formEl, fieldOptions, validationRules, validationErrors ){\n\n    fieldOptions = mergeObjects( {}, fieldOptions, {focusOnRelated: false} );\n\n    const obj = mergeObjects({}, validateFormObjDefault),\n          fieldsList = getUniqueFields( formEl.querySelectorAll(fieldsStringSelector) );\n\n    return Promise.all( fieldsList.map(fieldEl => {\n        \n        return isValidField( fieldEl, fieldOptions, validationRules, validationErrors );\n\n    }) ).then(list => {\n\n        let areAllFieldsValid = list.filter(fieldObj => !fieldObj.result).length === 0;\n        obj.result = areAllFieldsValid;\n        obj.fields = list;\n\n        return obj;\n\n    });\n\n}\n","\nimport { customEvents, dispatchCustomEvent, removeClass } from './helpers';\nimport { isValidField } from './isValidField';\nimport { isValidForm } from './isValidForm';\n\nexport function validateField( fieldEl, options, validationRules, validationErrors ){\n\n    const formEl = fieldEl.closest('form');\n    const skipUIfeedback = options.fieldOptions.skipUIfeedback;\n    \n    return new Promise(function(resolve){\n\n        const prom = isValidField( fieldEl, options.fieldOptions, validationRules, validationErrors );\n        resolve( prom );\n\n    }).then(obj => {\n\n        return new Promise(resolve => {\n            if( obj.fieldEl ){\n\n                dispatchCustomEvent( obj.fieldEl, customEvents.field.validation, obj, { bubbles: false } );\n                dispatchCustomEvent( formEl, customEvents.field.validation, obj );\n\n                if( options.fieldOptions.onValidationCheckAll && obj.result ){\n                    // FORCE skipUIfeedback TO true\n                    options.fieldOptions.skipUIfeedback = true;\n                    resolve(\n                        isValidForm( formEl, options.fieldOptions, validationRules, validationErrors )\n                            .then(dataForm => {\n                                const clMethodName = dataForm.result ? 'add' : 'remove';\n\n                                formEl.classList[clMethodName]( options.formOptions.cssClasses.valid );\n                                dispatchCustomEvent( formEl, customEvents.form.validation, dataForm );\n                                // RESTORE skipUIfeedback TO THE ORIGINAL VALUE\n                                options.fieldOptions.skipUIfeedback = skipUIfeedback;\n\n                                return obj;\n                            })\n                    );\n                } else if( !obj.result ){\n                    removeClass( formEl, options.formOptions.cssClasses.valid );\n                }\n            }\n            resolve( obj );\n        });\n        \n    });\n    \n}\n","\nimport { customEvents, dispatchCustomEvent } from './helpers';\nimport { listenerCallbacks } from './listenerCallbacks';\nimport { isValidForm } from './isValidForm';\n\nexport function validateForm( formEl, options, validationRules, validationErrors ){\n\n    return new Promise(function(resolve){\n\n        const prom = isValidForm( formEl, options.fieldOptions, validationRules, validationErrors );\n        resolve(prom);\n\n    }).then(data => {\n\n        const clMethodName = data.result ? 'add' : 'remove';\n        formEl.classList[clMethodName]( options.formOptions.cssClasses.valid );\n        listenerCallbacks.validationEnd( {data} );\n        dispatchCustomEvent( formEl, customEvents.form.validation, data );\n\n        return data;\n\n    });\n    \n}\n","\nimport { excludeSelector, mergeObjects } from './modules/helpers';\nimport { options }              from './modules/options';\nimport { validationRules }      from './modules/validationRules';\nimport { validationErrors }     from './modules/validationErrors';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { constructorFn }        from './modules/constructor';\nimport { destroy }              from './modules/destroy';\nimport { init }                 from './modules/init';\nimport { validateField }        from './modules/validateField';\nimport { validateForm }         from './modules/validateForm';\n\nconst version = '4.0.0';\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        constructorFn(this, formEl, optionsObj);\n    }\n\n    destroy(){\n        destroy(this.formEl, this.options);\n    }\n    \n    getFormData(){\n        const formFieldsEl = this.formEl.querySelectorAll('input, select, textarea'),\n              filteredFields = Array.from( formFieldsEl ).filter( elem => elem.matches(excludeSelector) );\n        return this.options.formOptions.getFormData(filteredFields);\n    }\n\n    init(){\n        return init(this.formEl);\n    }\n\n    validateField( fieldEl, fieldOptions = {} ){\n        fieldEl = (typeof fieldEl === 'string' ? this.formEl.querySelector(fieldEl) : fieldEl);\n        const options = mergeObjects({}, this.options, {fieldOptions});\n        return validateField(fieldEl, options, this.validationRules, this.validationErrors);\n    }\n\n    validateForm( fieldOptions = {} ){\n        const options = mergeObjects({}, this.options, {fieldOptions});\n        return validateForm(this.formEl, options, this.validationRules, this.validationErrors);\n    }\n    \n    static addValidationErrors( errorsObj ){\n        this.prototype.validationErrors = mergeObjects({}, this.prototype.validationErrors, errorsObj);\n    }\n\n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = mergeObjects({}, this.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationErrors = validationErrors;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\nexport default Form;\n","\nimport { checkFormEl, isNodeList, mergeObjects }   from './helpers';\nimport { formStartup }                             from './formStartup';\n\nexport function constructorFn( self, formEl, optionsObj ){\n\n    let argsL = arguments.length,\n        checkFormElem = checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormElem.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormElem.element;\n    self.formEl.formjs = self;\n    self.options = mergeObjects({}, self.constructor.prototype.options, optionsObj);\n\n    // BINDING CONTEXT FOR FUTURE EXECUTION\n    const cbList = [\n        // IN fieldOptions\n        'beforeValidation',\n        // IN formOptions\n        'beforeSend',\n        'getFormData'\n    ];\n    cbList.forEach(cbName => {\n        let optionType = self.options.formOptions[cbName] ? 'formOptions' : 'fieldOptions',\n            cbOpt = self.options[optionType][cbName];\n\n        if( cbOpt ){\n            self.options[optionType][cbName] = ( Array.isArray(cbOpt) ? cbOpt.map(cbFn => cbFn.bind(self)) : cbOpt.bind(self) );\n        }\n    });\n\n    formStartup( self.formEl, self.options );\n    \n}\n","\nimport { customEvents } from './helpers';\nimport { listenerCallbacks } from './listenerCallbacks';\n\n\nexport function destroy( formEl, options ){\n\n    if( options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', listenerCallbacks.pastePrevent, false);\n    }\n\n    if( options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', listenerCallbacks.submit);\n    }\n\n    options.fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, listenerCallbacks.validation, useCapturing);\n    });\n\n    formEl.removeEventListener(customEvents.field.validation, listenerCallbacks.validationEnd, false);\n\n    delete formEl.formjs;\n    \n}\n","\nexport const validationErrors = {\n\n    email: function ( string ) {\n        const obj = {};\n\n        if( string.indexOf('@') === -1 ){\n\n            // @ IS MISSING\n            obj.missingAtChar = true;\n\n        } else {\n\n            let splitAt_at = string.split('@');\n            if( splitAt_at[0].length === 0 ){\n\n                // USER NAME IS MISSING\n                obj.missingUserName = true;\n\n            }\n\n            if( splitAt_at[1].length === 0 ){\n\n                // IS EMPTY AFTER @\n                obj.missingDomain = true;\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                // DOT IS MISSING\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else {\n\n                // EXTENSION MISSING OR NOT LONG ENOUGH\n                let splitAt_dot = splitAt_at[1].split('.'),\n                    extLength = splitAt_dot[1].length;\n                if( extLength === 0 ) {\n                    obj.missingExtension = true;\n                } else if( extLength < 2 ){\n                    obj.minlengthExtension = true;\n                }\n\n            }\n        }\n\n        return obj;\n\n    }\n\n}"],"sourceRoot":""}
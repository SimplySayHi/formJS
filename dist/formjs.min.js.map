{"version":3,"sources":["webpack://Form/webpack/universalModuleDefinition","webpack://Form/webpack/bootstrap","webpack://Form/./src/modules/helpers.js","webpack://Form/./src/modules/optionsUtils.js","webpack://Form/./src/modules/options.js","webpack://Form/./src/modules/validationRules.js","webpack://Form/./src/modules/ajaxCall.js","webpack://Form/./src/modules/submit.js","webpack://Form/./src/modules/listenerCallbacks.js","webpack://Form/./src/modules/formStartup.js","webpack://Form/./src/modules/constructor.js","webpack://Form/./src/modules/destroy.js","webpack://Form/./src/modules/getFormData.js","webpack://Form/./src/modules/init.js","webpack://Form/./src/modules/isValid.js","webpack://Form/./src/modules/isValidField.js","webpack://Form/./src/modules/isValidForm.js","webpack://Form/./src/modules/validateField.js","webpack://Form/./src/modules/validateForm.js","webpack://Form/./src/index.js","webpack://Form/./src/modules/validationErrors.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","fieldsStringSelector","addClass","element","cssClasses","split","forEach","className","classList","add","checkDirtyField","fields","options","fieldOptions","dirty","isNodeList","Array","from","fieldEl","type","containerEl","closest","removeClass","checkFormEl","formEl","isString","isFormSelector","isDOMNode","document","querySelector","tagName","toLowerCase","result","customEvents","validated","ajax","complete","error","success","dispatchCustomEvent","elem","eventName","data","eventObj","Event","bubbles","dispatchEvent","getSplitChar","string","splitChar","indexOf","getUniqueFields","nodeList","currentFieldName","currentFieldType","filter","matches","node","Element","isPrototypeOf","isFieldForChangeEvent","NodeList","mergeObjects","out","arguments","length","obj","isArray","toString","isObject","concat","slice","push","remove","runFunctionsSequence","functionsList","stopConditionFn","self","reduce","acc","promiseFn","then","res","dataNew","Promise","resolve","dataList","shift","serializeObject","constructor","keys","a","k","encodeURIComponent","join","toCamelCase","replace","all","letter","toUpperCase","validateFieldObjDefault","validateFormObjDefault","defaultCallbacksInOptions","beforeValidation","fieldObj","skipUIfeedback","pending","formOptions","getFormData","filteredFields","formData","isCheckbox","isRadio","isSelect","checked","checkboxes","querySelectorAll","field","checkedRadio","selectedOpts","option","selected","errorEmpty","errorRule","valid","focusOnRelated","handleFileUpload","handleValidation","maxFileSize","onPastePrevented","onValidation","onValidationCheckAll","preventPasteFields","strictHtmlValidation","validateOnEvents","ajaxOptions","cache","credentials","headers","method","redirect","timeout","url","location","href","ajaxSubmit","beforeSend","ajaxComplete","ajaxError","ajaxPending","ajaxSuccess","submit","handleSubmit","onSubmitComplete","onSubmitError","onSubmitSuccess","validationRulesAttributes","checkbox","dataChecksEl","checks","attrValue","getAttribute","JSON","parse","checkedElLength","isMinOk","isMaxOk","errors","minChecks","maxChecks","e","Error","equalTo","checkFromEl","exactLength","valueLength","minlength","maxlength","file","MIMEtype","accept","RegExp","filesList","files","exceedMaxFileSize","size","isAcceptedFileType","test","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","stringLength","max","isDate","maxVal","reverse","min","minVal","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","reqMoreEl","required","ajaxCall","formDataObj","timeoutTimer","btnEl","isMultipart","body","formDataMultipart","FormData","append","idx","stringify","Headers","controller","AbortController","signal","window","setTimeout","abort","fetch","response","ok","reject","fetchMethod","contentType","methodName","getFetchMethod","clearTimeout","disabled","event","formCssClasses","isAjaxForm","eventPreventDefault","enableBtn","preventDefault","validateForm","formValidation","beforeSendData","stopExecution","callbacksBeforeSend","callbackFns","dataTypeNumber","target","fieldValue","stopImmediatePropagation","valueReplaced","keypressMaxlength","maxLength","keyPressed","which","keyCode","pastePrevent","validation","isFieldForChangeEventBoolean","isReqFrom","isReqMore","findReqMoreEl","findReqFromEl","id","focus","validateField","realtedFieldEqualTo","errorClasses","extraErrorClass","isChecks","empty","errorClassToRemove","formStartup","noValidate","addEventListener","listenerCallbacks","useCapturing","constructorFn","optionsObj","argsL","checkFormElem","formjs","freeze","destroy","validationListenerNames","removeEventListener","formFieldsEl","init","instance","formFields","map","isCheckboxOrRadio","fakeEventObj","isInitialized","isValid","fieldType","fieldAttributes","attributes","sort","b","attrValidations","attrValidationsResult","attr","attrName","isAttrValueWithFn","isAttrNameWithFn","extraValObj","unshift","item","extraVal","validationRules","fieldErrors","validationErrors","rule","isValidField","fieldElem","fieldOptionsObj","isRequired","isValidateIfFilled","rfsObject","dataObj","pop","isValidForm","fieldsList","list","areAllFieldsValid","dataForm","clMethodName","Form","errorsObj","rulesObj","email","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","date","number","version"],"mappings":"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","file":"formjs.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Form\"] = factory();\n\telse\n\t\troot[\"Form\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport const\n\nfieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"hidden\"]), select, textarea',\n\naddClass = ( element, cssClasses ) => {\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.add( className );\n    });\n},\n\ncheckDirtyField = function( fields, cssClasses = this.options.fieldOptions.cssClasses.dirty ){\n\n    var fields = (isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(function(fieldEl){\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n},\n\ncheckFormEl = formEl => {\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\ncustomEvents = {\n    field: {\n        validated:          'fjs.field:validated'\n    },\n    form: {\n        ajax: {\n            complete:       'fjs.form:ajax-complete',\n            error:          'fjs.form:ajax-error',\n            success:        'fjs.form:ajax-success'\n        },\n        validated:          'fjs.form:validated'\n    }\n},\n\ndispatchCustomEvent = ( elem, eventName, data = {} ) => {\n    const eventObj = new Event(eventName, { bubbles: true });\n    eventObj.data = data;\n    elem.dispatchEvent( eventObj );\n},\n\nexecuteCallback = function( {fn = null, data = {}, options = {}} = {} ){\n    let self = this,\n        optionsNew = mergeObjects({}, self.options, options),\n        callbackFnList = [];\n\n    if( typeof fn === 'function' ){\n        callbackFnList.push( fn );\n    } else if( Array.isArray(fn) ) {\n        callbackFnList = fn;\n    }\n\n    callbackFnList.forEach(function(promiseFn){\n        promiseFn.call( self, data, optionsNew );\n    });\n},\n\ngetFilledFields = formEl => {\n    return getUniqueFields( formEl.querySelectorAll(fieldsStringSelector) )\n    .map(fieldEl => {\n\n        const name = fieldEl.name,\n              type = fieldEl.type,\n              isCheckboxOrRadio = (type === 'checkbox' || type === 'radio'),\n              fieldChecked = formEl.querySelector('[name=\"' + name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        return (\n            isCheckboxOrRadio ? (fieldChecked || null) :\n            (isReqFrom && reqMoreEl.checked) || (!isReqFrom && fieldEl.value) ? fieldEl : null\n        );\n\n    })\n    .filter(fieldEl => {\n        return  fieldEl !== null;\n    });\n},\n\ngetSplitChar = string => {\n    let splitChar = '.';\n\n    if( string.indexOf(splitChar) === -1 ){\n        if( string.indexOf('-') >= 0 ){\n            splitChar = '-';\n        } else if( string.indexOf('/') >= 0 ){\n            splitChar = '/';\n        }\n    }\n\n    return splitChar;\n},\n\ngetUniqueFields = nodeList => {\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    return Array.from( nodeList ).filter(fieldEl => {\n        const name = fieldEl.name,\n              type = fieldEl.type;\n\n        if( name === currentFieldName && type === currentFieldType ){\n            return false;\n        }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        return true;\n    });\n    \n},\n\nisDOMNode = node => {\n    return Element.prototype.isPrototypeOf( node );\n},\n\nisFieldForChangeEvent = fieldEl => {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\nisNodeList = nodeList => {\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\nisPlainObject = object => {\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\nmergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // * STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        // IF THIS IS ONE OF ABOVE (*) AND THE DESTINATION OBJECT IS AN ARRAY\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\nremoveClass = ( element, cssClasses ) => {\n    cssClasses.split(' ').forEach(function(className){\n        element.classList.remove( className );\n    });\n},\n\nrunFunctionsSequence = function( { functionsList = [], data = {}, stopConditionFn = function(){return false} } = {} ){\n    const self = this;\n\n    return functionsList.reduce(function(acc, promiseFn){\n        return acc.then(function (res) {\n            let dataNew = mergeObjects({}, res[res.length - 1]);\n            if( stopConditionFn(dataNew) ){\n                return Promise.resolve(res);\n            }\n            return new Promise(resolve => { resolve(promiseFn.call(self, dataNew)) }).then(function (result = dataNew) {\n                res.push(result);\n                return res;\n            });\n        });\n    }, Promise.resolve([data])).then(dataList => {\n        if( dataList.length > 1 ){ dataList.shift(); }\n        return dataList;\n    });\n},\n\nserializeObject = obj => {\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce(function(a,k){\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\ntoCamelCase = string => {\n    return string.replace(/-([a-z])/ig, function(all, letter){ return letter.toUpperCase(); });\n},\n\nvalidateFieldObjDefault = { result: false, fieldEl: null },\n\nvalidateFormObjDefault = { result: true, fields: [] }\n","\nimport { addClass, checkDirtyField } from './helpers';\n\nexport const defaultCallbacksInOptions = {\n    fieldOptions: {\n\n        beforeValidation: function beforeValidationDefault ( fieldObj ) {\n\n            checkDirtyField.call( this, fieldObj.fieldEl );\n            if( !this.options.fieldOptions.skipUIfeedback ){\n                addClass( fieldObj.fieldEl.closest('[data-formjs-question]'), this.options.fieldOptions.cssClasses.pending );\n            }\n\n        }\n\n    },\n    formOptions: {\n\n        getFormData: function getFormDataDefault ( filteredFields ) {\n\n            let formData = {},\n                self = this,\n                formEl = self.formEl;\n\n            filteredFields.forEach(function( fieldEl ){\n                let isCheckbox = fieldEl.type === 'checkbox',\n                    isRadio = fieldEl.type === 'radio',\n                    isSelect = fieldEl.matches('select'),\n                    name = fieldEl.name,\n                    value = fieldEl.value;\n                                \n                if( isCheckbox ) {\n                    \n                    value = fieldEl.checked;\n                    let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                    if( checkboxes.length > 1 ){\n\n                        value = [];\n                        let checkedElems = checkboxes.filter(field => field.checked);\n                        checkedElems.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                        \n                } else if( isRadio ){\n                    \n                    let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                    value = (checkedRadio === null ? null : checkedRadio.value);\n                    \n                } else if( isSelect ){\n\n                    let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                    if( selectedOpts.length > 1 ){\n\n                        value = [];\n                        selectedOpts.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                }\n\n                formData[ name ] = value;\n            });\n\n            return formData;\n\n        }\n\n    }\n}\n","\nimport { defaultCallbacksInOptions } from './optionsUtils';\n\nexport const options = {\n\n    fieldOptions: {\n        beforeValidation:       [defaultCallbacksInOptions.fieldOptions.beforeValidation],\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            pending:            'is-pending',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onPastePrevented:       [],\n        onValidation:           [defaultCallbacksInOptions.fieldOptions.onValidation],\n        onValidationCheckAll:   true,\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            {\n            cache:              'no-store',\n            credentials:        'same-origin',\n            headers: {\n                                'Content-Type': 'application/json',\n                                'Accept':       'application/json'\n            },\n            method:             'POST',\n            mode:               'same-origin',\n            redirect:           'follow',\n            timeout:            0,\n            url:                location.href\n        },\n        ajaxSubmit:             true,\n        beforeSend:             [],\n        cssClasses: {\n            ajaxComplete:       'ajax-complete',\n            ajaxError:          'ajax-error',\n            ajaxPending:        'ajax-pending',\n            ajaxSuccess:        'ajax-success',\n            submit:             'is-submitting',\n            valid:              'is-valid'\n        },\n        getFormData:            defaultCallbacksInOptions.formOptions.getFormData,\n        handleSubmit:           true,\n        onSubmitComplete:       [],\n        onSubmitError:          [],\n        onSubmitSuccess:        []\n    }\n    \n}\n","\nimport { getSplitChar } from './helpers';\n\nexport const validationRules = {\n            \n    date: function( string ){\n        // DATE AS ISO 8601 DATE FORMAT     YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let date = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard EMAIL MUST BE AT LEAST:\n        // a@a.aa\n        let obj = {\n            result: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n        };\n\n        return obj;\n    }\n    \n}\n\nexport const validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]'),\n            obj = { result: data.fieldEl.checked };\n\n        if( dataChecksEl !== null ){\n            obj = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return obj;\n    },\n\n    checks: function( data ){\n        try {\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n                isMinOk = checkedElLength >= attrValue[0],\n                isMaxOk = checkedElLength <= attrValue[1],\n                obj = {\n                    result: isMinOk && isMaxOk\n                };\n\n            if( !obj.result ){\n\n                obj.errors = { checks: true };\n                if( !isMinOk ){ obj.errors.minChecks = true; }\n                if( !isMaxOk ){ obj.errors.maxChecks = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n            obj = {\n                result: fieldEl.value === checkFromEl.value\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { equalTo: true };\n        }\n\n        return obj;\n    },\n    \n    exactLength: function( data ){\n        let valueLength = data.fieldEl.value.length,\n            exactLength = (data.attrValue * 1),\n            obj = {\n                result: valueLength === exactLength\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n\n        }\n\n        return obj;\n    },\n\n    file: function( data ){\n        let fieldEl = data.fieldEl,\n            maxFileSize = (fieldEl.getAttribute('data-max-file-size') || data.fieldOptions.maxFileSize) * 1,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files),\n            obj = { result: true };\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = maxFileSize > 0 && (file.size/1024/1024) > maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                obj.result = false;\n                if( typeof obj.errors === 'undefined' ){\n                    obj.errors = {};\n                }\n                obj.errors.file = true;\n                if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n                if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n            }\n        });\n\n        return obj;\n    },\n\n    length: function( data ){\n        try {\n            let valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue),\n                isMinlengthOk = valueL >= attrValue[0],\n                isMaxlengthOk = valueL <= attrValue[1],\n                obj = { result: isMinlengthOk && isMaxlengthOk };\n\n            if( !obj.result ){\n\n                obj.errors = { stringLength: true };\n                if( !isMinlengthOk ){ obj.errors.minlength = true; }\n                if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            maxVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            maxVal = maxVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        maxVal = maxVal * 1;\n\n        let obj = {\n                result: value <= maxVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { max: true };\n        }\n        \n        return obj;\n    },\n    \n    maxlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length <= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    },\n    \n    min: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            minVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            minVal = minVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        minVal = minVal * 1;\n\n        let obj = {\n                result: value >= minVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { min: true };\n        }\n        \n        return obj;\n    },\n\n    minlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length >= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = {\n                result: fieldRegex.test( fieldEl.value )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0,\n            obj = { result: isValid };\n\n        return obj;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n            obj = { result: checkedEl !== null };\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            obj.result = isValidValue;\n        }\n\n        if( !obj.result ){\n            obj.errors = { requiredFrom: true };\n        }\n        \n        return obj;\n    }\n    \n}\n","\nimport { addClass, customEvents, dispatchCustomEvent, mergeObjects, removeClass, serializeObject } from './helpers';\n\n// AJAX CALL USING fetch API\nexport function ajaxCall( formDataObj ){\n\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        ajaxOptions = mergeObjects( {}, formOptions.ajaxOptions ),\n        isMultipart = ajaxOptions.headers['Content-Type'] === 'multipart/form-data';\n\n    ajaxOptions.body = formDataObj;\n    \n    // POST A FormData OBJECT ( multipart )\n    if( isMultipart && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in ajaxOptions.body){\n            formDataMultipart.append( key, ajaxOptions.body[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        ajaxOptions.body = formDataMultipart;\n    }\n\n    if( ajaxOptions.method === 'GET' ){\n\n        // FETCH WITH \"GET\" METHOD CAN'T HAVE \"body\". SO IT IS APPENDED TO THE URL\n        ajaxOptions.url += ( /\\?/.test(ajaxOptions.url) ? '&' : '?' ) + serializeObject( ajaxOptions.body );\n        delete ajaxOptions.body;\n\n    } else {\n\n        if( ajaxOptions.headers['Content-Type'].indexOf('application/x-www-form-urlencoded') > -1 ){\n            // POST A NORMAL FORM\n            ajaxOptions.body = serializeObject( ajaxOptions.body );\n        } else if( !isMultipart ){\n            // POST A JSON STRING\n            ajaxOptions.body = JSON.stringify(ajaxOptions.body);\n        }\n\n    }\n\n    ajaxOptions.headers = new Headers( ajaxOptions.headers );\n\n    if ( ajaxOptions.timeout > 0 ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        ajaxOptions.signal = signal;\n\n        timeoutTimer = window.setTimeout(function() {\n            controller.abort();\n        }, ajaxOptions.timeout);\n    }\n\n    fetch(ajaxOptions.url, ajaxOptions)\n        .then(function( response ){\n\n            if( !response.ok ){\n                return Promise.reject(response);\n            }\n\n            let getFetchMethod = function( response ){\n                let contentType = response.headers.get('Content-Type'),\n                    methodName = 'blob';\n\n                if( contentType.indexOf('application/json') > -1 ){\n                    methodName = 'json';\n                } else if( contentType.indexOf('text/') > -1 ){\n                    methodName = 'text';\n                }\n                \n                return methodName;\n            };\n            let fetchMethod = getFetchMethod( response );\n\n            return response[fetchMethod]();\n\n        })\n        .then(function( data ){\n            addClass( formEl, formOptions.cssClasses.ajaxSuccess );\n            dispatchCustomEvent( formEl, customEvents.form.ajax.success, data );\n        })\n        .catch(function( error ){\n            addClass( formEl, formOptions.cssClasses.ajaxError );\n            dispatchCustomEvent( formEl, customEvents.form.ajax.error, error );\n        })\n        .finally(function(){\n\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n            removeClass( formEl, formOptions.cssClasses.submit + ' ' + formOptions.cssClasses.ajaxPending );\n            addClass( formEl, formOptions.cssClasses.ajaxComplete );\n            btnEl.disabled = false;\n            dispatchCustomEvent( formEl, customEvents.form.ajax.complete );\n\n        });\n    \n}\n","\nimport { addClass, removeClass, runFunctionsSequence, validateFormObjDefault } from './helpers';\nimport { ajaxCall } from './ajaxCall';\n\nexport function submit( event ){\n\n    const self = this,\n          options = self.options,\n          formCssClasses = options.formOptions.cssClasses,\n          isAjaxForm = options.formOptions.ajaxSubmit,\n          formEl = self.formEl,\n          btnEl = formEl.querySelector('[type=\"submit\"]'),\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n\n    if( isAjaxForm ){\n        eventPreventDefault(false);\n    }\n\n    if( btnEl ){\n        if( btnEl.disabled ){\n            eventPreventDefault(false);\n            return false;\n        }\n        btnEl.disabled = true;\n    }\n\n    removeClass( formEl, (formCssClasses.ajaxComplete + ' ' + formCssClasses.ajaxError + ' ' + formCssClasses.ajaxSuccess) );\n    addClass( formEl, formCssClasses.submit );\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidationPromise = (handleValidation ? self.validateForm() : Promise.resolve(validateFormObjDefault));\n\n    formValidationPromise.then(formValidation => {\n\n        let beforeSendData = { stopExecution: false, formData: {} };\n\n        if( !formValidation.result ){\n            eventPreventDefault();\n            removeClass( formEl, formCssClasses.submit );\n            beforeSendData.stopExecution = true;\n            return [beforeSendData];\n        }\n        \n        let formDataObj = (isAjaxForm ? self.getFormData() : null),\n            callbacksBeforeSend = options.formOptions.beforeSend;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        const rfsObject = {\n            functionsList: callbacksBeforeSend,\n            data: beforeSendData,\n            stopConditionFn: function(data){ return data.stopExecution; }\n        };\n        return runFunctionsSequence.call(self, rfsObject);\n\n    }).then(dataList => {\n\n        if( dataList.filter(data => data.stopExecution).length > 0 ){\n            eventPreventDefault();\n            return false;\n        }\n        \n        if( isAjaxForm ){\n\n            const formData = dataList[dataList.length - 1].formData;\n            addClass( formEl, formCssClasses.ajaxPending );\n            ajaxCall.call(self, formData);\n            \n        }\n\n    });\n    \n}\n","\nimport { addClass, fieldsStringSelector, isFieldForChangeEvent, /* mergeObjects, */ removeClass } from './helpers';\nimport { submit } from './submit';\n\nexport const callbackFns = {\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n        }\n\n    },\n\n    submit: function( event ){\n        submit.call( this, event );\n    },\n\n    validation: function( event ){\n\n        const self = this,\n              eventName = event.type,\n              fieldEl = event.target;\n\n        if( fieldEl.matches( fieldsStringSelector ) ){\n            const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = fieldEl.required;\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = findReqMoreEl.required && findReqMoreEl.checked;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n                    fieldEl.required = reqMoreEl.required;\n                }\n            }\n            \n            if(\n                (isFieldForChangeEventBoolean && eventName === 'change') ||\n                (!isFieldForChangeEventBoolean && eventName !== 'change')\n            ){\n                \n                return self.validateField( fieldEl ).then(obj => {\n                    const type = obj.fieldEl.type,\n                          realtedFieldEqualTo = obj.fieldEl.closest('form').querySelector('[data-equal-to=\"'+ obj.fieldEl.name +'\"]');\n\n                    if(\n                        // FIELD IS ( required OR data-validate-if-filled ) AND RELATED FIELD data-equal-to HAS A VALUE\n                        (obj.fieldEl.required || obj.fieldEl.matches('[data-validate-if-filled]')) && \n                        !(type === 'checkbox' || type === 'radio') && \n                        realtedFieldEqualTo && realtedFieldEqualTo.value.trim() !== ''\n                    ){\n                        return self.validateField( realtedFieldEqualTo );\n                    } else {\n                        return obj;\n                    }\n                });\n\n            }\n        }\n        \n    },\n\n    validated: function( event ){\n\n        const self = this,\n              options = self.options.fieldOptions,\n              fieldsArray = event.data.fieldEl ? [event.data] : event.data.fields;\n\n        fieldsArray.forEach(function( obj ){\n            let fieldEl = obj.fieldEl;\n            if( fieldEl.matches( fieldsStringSelector ) ){\n                let containerEl = fieldEl.closest('[data-formjs-question]'),\n                    isReqFrom = fieldEl.matches('[data-required-from]'),\n                    reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n\n                if( containerEl !== null ){\n                    removeClass( containerEl, options.cssClasses.pending );\n                }\n\n                if( containerEl !== null && !options.skipUIfeedback ){\n\n                    if( obj.result ){\n\n                        if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                            // IF FIELD IS VALID\n                            let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            removeClass( containerEl, errorClasses );\n                            addClass( containerEl, options.cssClasses.valid );\n                        }\n\n                    } else {\n\n                        // IF FIELD IS NOT VALID\n                        let extraErrorClass = options.cssClasses.errorRule;\n\n                        // HANDLE CASE OF FIELD data-checks\n                        let isChecks = fieldEl.matches('[data-checks]'),\n                            checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                        if( (!isChecks && (obj.errors && obj.errors.empty)) || (isChecks && checkedElLength === 0) ){\n                            extraErrorClass = options.cssClasses.errorEmpty;\n                        }\n\n                        let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                            errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                        removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                        addClass( containerEl, errorClasses );\n\n                    }\n                }\n            }\n        });\n\n    }\n\n}\n","\nimport { customEvents } from './helpers';\n\nexport function formStartup(){\n\n    const self = this,\n          formEl = self.formEl;\n\n    formEl.noValidate = true;\n\n    let fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions;\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // MAXLENGTH IS BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n        });\n\n        formEl.addEventListener(customEvents.field.validated, self.listenerCallbacks.validated, false);\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', self.listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n\n                // FOR XMLHttpRequest API\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n\n                // FOR fetch API\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n                \n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nimport { checkFormEl, isNodeList, mergeObjects }   from './helpers';\nimport { callbackFns }                             from './listenerCallbacks';\nimport { formStartup }                             from './formStartup';\n\nexport function constructorFn( formEl, optionsObj = {} ){\n\n    let self = this,\n        argsL = arguments.length,\n        checkFormElem = checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormElem.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormElem.element;\n    self.formEl.formjs = self;\n    self.options = mergeObjects({}, self.constructor.prototype.options, optionsObj);\n    self.listenerCallbacks = {\n        dataTypeNumber:     callbackFns.dataTypeNumber,\n        keypressMaxlength:  callbackFns.keypressMaxlength,\n        pastePrevent:       callbackFns.pastePrevent.bind(self),\n        submit:             callbackFns.submit.bind(self),\n        validation:         callbackFns.validation.bind(self),\n        validated:          callbackFns.validated.bind(self)\n    };\n    Object.freeze(self.listenerCallbacks);\n\n    formStartup.call( self );\n    \n}\n","\nimport { customEvents } from './helpers';\n\nexport function destroy(){\n\n    const self = this,\n          formEl = self.formEl,\n          validationListenerNames = self.options.fieldOptions.validateOnEvents;\n\n    if( self.options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', self.listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', self.listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( self.options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', self.listenerCallbacks.pastePrevent, false);\n    }\n\n    if( self.options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', self.listenerCallbacks.submit);\n    }\n\n    validationListenerNames.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, self.listenerCallbacks.validation, useCapturing);\n    });\n\n    formEl.removeEventListener(customEvents.field.validated, self.listenerCallbacks.validated, false);\n\n    delete self.formEl.formjs;\n    \n}\n","\nexport function getFormData(){\n\n    let self = this,\n        formEl = self.formEl,\n        formFieldsEl = formEl.querySelectorAll('input, select, textarea'),\n        excludeSelectors = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])',\n        filteredFields = Array.from(formFieldsEl).filter(elem => elem.matches(excludeSelectors) );\n    \n    return self.options.formOptions.getFormData.call( self, filteredFields );\n    \n}\n","\nimport { getFilledFields, isFieldForChangeEvent } from './helpers';\n\nexport const init = function(){\n\n    const instance = this,\n          formFields = getFilledFields( instance.formEl );\n\n    // VALIDATE ALL FILLED FIELDS\n    return Promise.all( formFields.map(fieldEl => {\n\n        const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl);\n        const fakeEventObj = { target: fieldEl, type: (isFieldForChangeEventBoolean ? 'change': '') };\n        return instance.listenerCallbacks.validation.call( instance, fakeEventObj );\n\n    }) ).then(fields => {\n\n        instance.isInitialized = true;\n        return { instance, fields };\n\n    });\n\n}\n","\nimport { mergeObjects, toCamelCase } from './helpers';\nimport { validationRulesAttributes } from './validationRules';\n\nexport function isValid( fieldEl, fieldOptions = {} ){\n\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n\n    let attrValidations = [],\n        attrValidationsResult = isValidValue,\n        obj = { result: isValidValue, fieldEl };\n\n    if( !obj.result ){\n        obj.errors = { empty: true };\n        return Promise.resolve(obj);\n    }\n\n    // COLLECT SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isAttrValueWithFn = attrName === 'type' && typeof validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof validationRulesAttributes[attrName] === 'function';\n\n        if( isAttrValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isAttrValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isAttrValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    return new Promise(function(resolve){\n\n        // RUN SPECIFIC VALIDATIONS FOR validationRulesAttributes\n        attrValidations.forEach(function(item){\n            let extraVal = validationRulesAttributes[item.attrName]( item );\n            if( !extraVal.result ){\n                obj = mergeObjects({}, obj, extraVal);\n                attrValidationsResult = false;\n            }\n        });\n\n        // RUN VALIDATIONS FOR validationRules\n        if( typeof self.validationRules[fieldType] === 'function' ){\n            resolve( self.validationRules[fieldType](fieldValue, fieldEl) );\n        } else {\n            resolve( obj );\n        }\n\n    }).then(data => {\n\n        obj = mergeObjects( {}, obj, data, {fieldEl} );\n        obj.result = obj.result && attrValidationsResult;\n\n        if( !obj.result ){\n            let fieldErrors = (typeof self.validationErrors[fieldType] === 'function' ? self.validationErrors[fieldType](fieldValue, fieldEl) : {});\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.rule = true;\n            obj.errors = mergeObjects({}, obj.errors, fieldErrors);\n        }\n        \n        return obj;\n\n    });\n\n}\n","\nimport { isDOMNode, mergeObjects, runFunctionsSequence, validateFieldObjDefault } from './helpers';\nimport { isValid } from './isValid';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let obj = mergeObjects({}, validateFieldObjDefault, {fieldEl});\n\n    if( !isDOMNode(fieldEl) ){ return Promise.resolve(obj); }\n\n    let options =           mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj ),\n        isValidValue =      fieldEl.value.trim().length > 0,\n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]');\n\n    const rfsObject = {\n        functionsList: self.options.fieldOptions.beforeValidation,\n        data: {fieldEl}\n    };\n\n    return runFunctionsSequence.call(self, rfsObject)\n        .then(data => {\n\n            let dataObj = data.pop();\n            return new Promise(function(resolve){\n                if(\n                    (!isRequired && !isValidateIfFilled && !isReqFrom) ||   // IT IS A NORMAL FORM FIELD\n                    (isValidateIfFilled && !isValidValue) ||                // IT IS data-validate-if-filled AND EMPTY\n                    (isReqFrom && !isRequired )                             // IT IS data-required-from AND NOT required\n                ){\n\n                    dataObj.result = true;\n                    resolve( dataObj );\n                \n                } else {\n\n                    resolve( isValid.call(self, fieldEl, options) );\n                    \n                }\n\n            });\n\n        });\n\n}\n","\nimport { fieldsStringSelector, getUniqueFields, mergeObjects, validateFormObjDefault } from './helpers';\nimport { isValidField } from './isValidField';\n\nexport function isValidForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          formEl = self.formEl,\n          obj = mergeObjects({}, validateFormObjDefault),\n          fieldOptions = mergeObjects( {}, fieldOptionsObj, {focusOnRelated: false} ),\n          fieldsList = getUniqueFields( formEl.querySelectorAll(fieldsStringSelector) );\n\n    return Promise.all( fieldsList.map(function( fieldEl ){\n        \n        return isValidField.call( self, fieldEl, fieldOptions );\n\n    }) ).then(list => {\n\n        let areAllFieldsValid = list.filter(fieldObj => !fieldObj.result).length === 0;\n        obj.result = areAllFieldsValid;\n        obj.fields = list;\n\n        return obj;\n\n    });\n\n}\n","\nimport { customEvents, dispatchCustomEvent, mergeObjects, removeClass } from './helpers';\nimport { isValidField } from './isValidField';\nimport { isValidForm } from './isValidForm';\n\nexport function validateField( fieldElem, fieldOptionsObj ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem),\n          skipUIfeedback = self.options.fieldOptions.skipUIfeedback,\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n    \n    return new Promise(function(resolve){\n\n        const prom = isValidField.call( self, fieldEl, fieldOptions );\n        resolve( prom );\n\n    }).then(obj => {\n\n        return new Promise(resolve => {\n            if( obj.fieldEl ){\n\n                dispatchCustomEvent( self.formEl, customEvents.field.validated, obj );\n\n                if( fieldOptions.onValidationCheckAll && obj.result ){\n                    // FORCE skipUIfeedback TO true\n                    self.options.fieldOptions.skipUIfeedback = true;\n                    resolve(\n                        isValidForm.call( self ).then(dataForm => {\n                            const clMethodName = dataForm.result ? 'add' : 'remove';\n\n                            self.formEl.classList[clMethodName]( self.options.formOptions.cssClasses.valid );\n                            dispatchCustomEvent( self.formEl, customEvents.form.validated, dataForm );\n                            // RESTORE skipUIfeedback TO THE ORIGINAL VALUE\n                            self.options.fieldOptions.skipUIfeedback = skipUIfeedback;\n\n                            return obj;\n                        })\n                    );\n                } else if( !obj.result ){\n                    removeClass( self.formEl, self.options.formOptions.cssClasses.valid );\n                }\n            }\n            resolve( obj );\n        });\n        \n    });\n    \n}\n","\nimport { customEvents, dispatchCustomEvent, mergeObjects } from './helpers';\nimport { isValidForm } from './isValidForm';\n\nexport function validateForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n\n    return new Promise(function(resolve){\n\n        const prom = isValidForm.call( self, fieldOptions );\n        resolve(prom);\n\n    }).then(data => {\n\n        const clMethodName = data.result ? 'add' : 'remove';\n        self.formEl.classList[clMethodName]( self.options.formOptions.cssClasses.valid );\n        self.listenerCallbacks.validated.call( self, {data} );\n        dispatchCustomEvent( self.formEl, customEvents.form.validated, data );\n\n        return data;\n\n    });\n    \n}\n","\nimport { mergeObjects }         from './modules/helpers';\nimport { options }              from './modules/options';\nimport { validationRules }      from './modules/validationRules';\nimport { validationErrors }     from './modules/validationErrors';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { constructorFn }        from './modules/constructor';\nimport { destroy }              from './modules/destroy';\nimport { getFormData }          from './modules/getFormData';\nimport { init }                 from './modules/init';\nimport { validateField }        from './modules/validateField';\nimport { validateForm }         from './modules/validateForm';\n\nconst version = '4.0.0';\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        constructorFn.call(this, formEl, optionsObj);\n    }\n\n    destroy(){\n        destroy.call(this);\n    }\n    \n    getFormData(){\n        return getFormData.call(this);\n    }\n\n    init(){\n        return init.call(this);\n    }\n\n    validateField( fieldEl, fieldOptions ){\n        return validateField.call(this, fieldEl, fieldOptions);\n    }\n\n    validateForm( fieldOptions ){\n        return validateForm.call(this, fieldOptions);\n    }\n    \n    static addValidationErrors( errorsObj ){\n        this.prototype.validationErrors = mergeObjects({}, this.prototype.validationErrors, errorsObj);\n    }\n\n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = mergeObjects({}, this.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationErrors = validationErrors;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\nexport default Form;\n","\nexport const validationErrors = {\n\n    email: function ( string ) {\n        const obj = {};\n\n        if( string.indexOf('@') === -1 ){\n\n            // @ IS MISSING\n            obj.missingAtChar = true;\n\n        } else {\n\n            let splitAt_at = string.split('@');\n            if( splitAt_at[0].length === 0 ){\n\n                // USER NAME IS MISSING\n                obj.missingUserName = true;\n\n            }\n\n            if( splitAt_at[1].length === 0 ){\n\n                // IS EMPTY AFTER @\n                obj.missingDomain = true;\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                // DOT IS MISSING\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else {\n\n                // EXTENSION MISSING OR NOT LONG ENOUGH\n                let splitAt_dot = splitAt_at[1].split('.'),\n                    extLength = splitAt_dot[1].length;\n                if( extLength === 0 ) {\n                    obj.missingExtension = true;\n                } else if( extLength < 2 ){\n                    obj.minlengthExtension = true;\n                }\n\n            }\n        }\n\n        return obj;\n\n    }\n\n}"],"sourceRoot":""}
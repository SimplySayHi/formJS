{"version":3,"sources":["webpack://Form/webpack/universalModuleDefinition","webpack://Form/webpack/bootstrap","webpack://Form/./src/modules/helpers.js","webpack://Form/./src/modules/optionsUtils.js","webpack://Form/./src/modules/options.js","webpack://Form/./src/modules/validationRules.js","webpack://Form/./src/modules/ajaxCall.js","webpack://Form/./src/modules/submit.js","webpack://Form/./src/modules/listenerCallbacks.js","webpack://Form/./src/modules/formStartup.js","webpack://Form/./src/modules/init.js","webpack://Form/./src/modules/isValid.js","webpack://Form/./src/modules/isValidField.js","webpack://Form/./src/modules/isValidForm.js","webpack://Form/./src/modules/validateField.js","webpack://Form/./src/modules/validateForm.js","webpack://Form/./src/index.js","webpack://Form/./src/modules/constructor.js","webpack://Form/./src/modules/destroy.js","webpack://Form/./src/modules/validationErrors.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","addClass","element","cssClasses","split","forEach","className","classList","add","checkFormEl","formEl","isString","isFormSelector","isDOMNode","document","querySelector","tagName","toLowerCase","result","customEvents","validation","submit","dispatchCustomEvent","elem","eventName","data","eventObj","Event","bubbles","dispatchEvent","fieldsStringSelector","getSplitChar","string","splitChar","indexOf","getUniqueFields","nodeList","currentFieldName","currentFieldType","Array","from","filter","fieldEl","type","matches","node","Element","isPrototypeOf","isFieldForChangeEvent","isNodeList","NodeList","mergeObjects","out","arguments","length","obj","isArray","toString","isObject","concat","slice","push","removeClass","remove","runFunctionsSequence","functionsList","stopConditionFn","self","reduce","acc","promiseFn","then","res","dataNew","Promise","resolve","dataList","shift","serializeObject","constructor","keys","a","k","encodeURIComponent","join","toCamelCase","replace","all","letter","toUpperCase","validateFieldObjDefault","validateFormObjDefault","fields","defaultCallbacksInOptions","fieldOptions","beforeValidation","fieldObj","options","dirty","containerEl","closest","skipUIfeedback","pending","formOptions","getFormData","filteredFields","formData","isCheckbox","isRadio","isSelect","checked","checkboxes","querySelectorAll","field","checkedRadio","selectedOpts","option","selected","error","errorEmpty","errorRule","valid","focusOnRelated","handleFileUpload","handleValidation","maxFileSize","onValidationCheckAll","preventPasteFields","strictHtmlValidation","validateOnEvents","ajaxOptions","cache","credentials","headers","method","redirect","timeout","url","location","href","ajaxSubmit","beforeSend","ajaxComplete","ajaxError","ajaxPending","ajaxSuccess","handleSubmit","validationRulesAttributes","checkbox","dataChecksEl","checks","attrValue","getAttribute","JSON","parse","checkedElLength","isMinOk","isMaxOk","errors","minChecks","maxChecks","e","Error","equalTo","checkFromEl","exactLength","valueLength","minlength","maxlength","file","MIMEtype","accept","RegExp","filesList","files","exceedMaxFileSize","size","isAcceptedFileType","test","acceptedFileType","valueL","isMinlengthOk","isMaxlengthOk","stringLength","max","isDate","maxVal","reverse","min","minVal","pattern","fieldPattern","radio","fieldChecked","trim","requiredFrom","isValidValue","reqMoreEl","required","ajaxCall","formDataObj","timeoutTimer","btnEl","isMultipart","body","formDataMultipart","FormData","append","idx","stringify","Headers","controller","AbortController","signal","window","setTimeout","abort","fetch","response","ok","reject","fetchMethod","contentType","methodName","getFetchMethod","clearTimeout","disabled","event","formCssClasses","isAjaxForm","eventPreventDefault","enableBtn","preventDefault","validateForm","formValidation","beforeSendData","stopExecution","callbacksBeforeSend","callbackFns","dataTypeNumber","target","fieldValue","stopImmediatePropagation","valueReplaced","keypressMaxlength","maxLength","keyPressed","which","keyCode","pastePrevent","isFieldForChangeEventBoolean","isReqFrom","isReqMore","findReqMoreEl","findReqFromEl","id","focus","validateField","realtedFieldEqualTo","validationEnd","errorClasses","extraErrorClass","isChecks","empty","errorClassToRemove","formStartup","listenerCallbacks","noValidate","addEventListener","useCapturing","init","instance","formFields","map","isCheckboxOrRadio","fakeEventObj","isInitialized","isValid","fieldType","fieldAttributes","attributes","sort","b","attrValidations","attrValidationsResult","attr","attrName","isAttrValueWithFn","isAttrNameWithFn","extraValObj","unshift","item","extraVal","validationRules","fieldErrors","validationErrors","rule","isValidField","fieldElem","fieldOptionsObj","isRequired","isValidateIfFilled","rfsObject","dataObj","pop","isValidForm","fieldsList","list","areAllFieldsValid","dataForm","clMethodName","Form","optionsObj","argsL","checkFormElem","formjs","freeze","constructorFn","errorsObj","rulesObj","removeEventListener","formFieldsEl","email","missingAtChar","splitAt_at","missingUserName","missingDomain","missingExtensionDot","missingExtension","extLength","minlengthExtension","date","number","version"],"mappings":"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","file":"formjs.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Form\"] = factory();\n\telse\n\t\troot[\"Form\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport const\n\naddClass = ( element, cssClasses ) => {\n    cssClasses.split(' ').forEach(className => {\n        element.classList.add( className );\n    });\n},\n\ncheckDirtyField = ( fields, cssClasses ) => {\n\n    var fields = (isNodeList(fields) ? Array.from( fields ) : [fields]);\n    \n    fields.forEach(fieldEl => {\n        if( fieldEl.type !== 'checkbox' && fieldEl.type !== 'radio' ){\n            let containerEl = fieldEl.closest('[data-formjs-question]') || fieldEl;\n\n            if( fieldEl.value ){\n                \n                addClass( containerEl, cssClasses );\n                \n            } else {\n                \n                removeClass( containerEl, cssClasses );\n                \n            }\n        }\n    });\n    \n},\n\ncheckFormEl = formEl => {\n    let isString = typeof formEl,\n        isValidNodeSelector = isString === 'string' && isDOMNode(document.querySelector(formEl)),\n        isFormSelector = isValidNodeSelector && document.querySelector(formEl).tagName.toLowerCase() === 'form',\n        obj = {\n            result: isDOMNode(formEl) || isFormSelector,\n            element: (isString === 'string' ? document.querySelector(formEl) : formEl)\n        };\n\n    return obj;\n},\n\ncustomEvents = {\n    field: {\n        validation: 'fjs.field:validation'\n    },\n    form: {\n        submit:     'fjs.form:submit',\n        validation: 'fjs.form:validation'\n    }\n},\n\ndispatchCustomEvent = ( elem, eventName, data = {} ) => {\n    const eventObj = new Event(eventName, { bubbles: true });\n    eventObj.data = data;\n    elem.dispatchEvent( eventObj );\n},\n\nexcludeSelector = ':not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"file\"]):not([data-exclude-data])',\n\nfieldsStringSelector = 'input:not([type=\"reset\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"hidden\"]), select, textarea',\n\ngetFilledFields = formEl => {\n    return getUniqueFields( formEl.querySelectorAll(fieldsStringSelector) )\n    .map(fieldEl => {\n\n        const name = fieldEl.name,\n              type = fieldEl.type,\n              isCheckboxOrRadio = (type === 'checkbox' || type === 'radio'),\n              fieldChecked = formEl.querySelector('[name=\"' + name + '\"]:checked'),\n              isReqFrom = fieldEl.matches('[data-required-from]'),\n              reqMoreEl = (isReqFrom ? formEl.querySelector(fieldEl.getAttribute('data-required-from')) : null);\n\n        return (\n            isCheckboxOrRadio ? (fieldChecked || null) :\n            (isReqFrom && reqMoreEl.checked) || (!isReqFrom && fieldEl.value) ? fieldEl : null\n        );\n\n    })\n    .filter(fieldEl => {\n        return  fieldEl !== null;\n    });\n},\n\ngetSplitChar = string => {\n    let splitChar = '.';\n\n    if( string.indexOf(splitChar) === -1 ){\n        if( string.indexOf('-') >= 0 ){\n            splitChar = '-';\n        } else if( string.indexOf('/') >= 0 ){\n            splitChar = '/';\n        }\n    }\n\n    return splitChar;\n},\n\ngetUniqueFields = nodeList => {\n\n    let currentFieldName = '',\n        currentFieldType = '';\n\n    return Array.from( nodeList ).filter(fieldEl => {\n        const name = fieldEl.name,\n              type = fieldEl.type;\n\n        if( name === currentFieldName && type === currentFieldType ){\n            return false;\n        }\n        \n        if( !fieldEl.matches('[data-required-from]') ){\n            currentFieldName = name;\n            currentFieldType = type;\n        }\n        return true;\n    });\n    \n},\n\nisDOMNode = node => {\n    return Element.prototype.isPrototypeOf( node );\n},\n\nisFieldForChangeEvent = fieldEl => {\n    return fieldEl.matches('select, [type=\"radio\"], [type=\"checkbox\"], [type=\"file\"]');\n},\n\nisNodeList = nodeList => {\n    return NodeList.prototype.isPrototypeOf( nodeList );\n},\n\nisPlainObject = object => {\n    return Object.prototype.toString.call( object ) === '[object Object]';\n},\n\nmergeObjects = function( out = {} ){\n    for(let i=1; i<arguments.length; i++){\n        let obj = arguments[i];\n\n        if(!obj){ continue; }\n\n        for(let key in obj){\n            let isArray = Object.prototype.toString.call(obj[key]) === \"[object Array]\";\n            let isObject = Object.prototype.toString.call(obj[key]) === \"[object Object]\";\n\n            // COPY ONLY ENUMERABLE PROPERTIES\n            if( obj.hasOwnProperty(key) ){\n                if( isArray ){\n\n                    if( typeof out[key] === 'undefined' ){\n                        out[key] = [];\n                    }\n                    out[key] = out[key].concat( obj[key].slice(0) );\n\n                } else if( isObject ){\n\n                    out[key] = mergeObjects(out[key], obj[key]);\n\n                } else {\n\n                    // * STRING | NUMBER | BOOLEAN | FUNCTION\n                    if( Array.isArray(out[key]) ){\n                        // IF THIS IS ONE OF ABOVE (*) AND THE DESTINATION OBJECT IS AN ARRAY\n                        out[key].push(obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n\n                }\n            }\n        }\n    }\n\n    return out;\n},\n\nremoveClass = ( element, cssClasses ) => {\n    cssClasses.split(' ').forEach(className => {\n        element.classList.remove( className );\n    });\n},\n\nrunFunctionsSequence = function( { functionsList = [], data = {}, stopConditionFn = function(){return false} } = {} ){\n    const self = this;\n\n    return functionsList.reduce((acc, promiseFn) => {\n        return acc.then(res => {\n            let dataNew = mergeObjects({}, res[res.length - 1]);\n            if( stopConditionFn(dataNew) ){\n                return Promise.resolve(res);\n            }\n            return new Promise(resolve => { resolve(promiseFn.call(self, dataNew)) }).then((result = dataNew) => {\n                res.push(result);\n                return res;\n            });\n        });\n    }, Promise.resolve([data])).then(dataList => {\n        if( dataList.length > 1 ){ dataList.shift(); }\n        return dataList;\n    });\n},\n\nserializeObject = obj => {\n    var objToString = (\n            (obj && typeof obj === 'object' && obj.constructor === Object) ? \n            Object.keys(obj)\n                .reduce((a,k) => {\n                    a.push(k+'='+encodeURIComponent(obj[k]));\n                    return a\n                },[]).join('&') : \n            obj\n    );\n    return objToString;\n},\n\ntoCamelCase = string => {\n    return string.replace(/-([a-z])/ig, (all, letter) => { return letter.toUpperCase(); });\n},\n\nvalidateFieldObjDefault = { result: false, fieldEl: null },\n\nvalidateFormObjDefault = { result: true, fields: [] }\n","\nimport { addClass, checkDirtyField } from './helpers';\n\nexport const defaultCallbacksInOptions = {\n    fieldOptions: {\n\n        beforeValidation: function beforeValidationDefault ( fieldObj ) {\n\n            const fieldOptions = this.options.fieldOptions;\n\n            checkDirtyField( fieldObj.fieldEl, fieldOptions.cssClasses.dirty );\n            if( !fieldOptions.skipUIfeedback ){\n                addClass( fieldObj.fieldEl.closest('[data-formjs-question]'), fieldOptions.cssClasses.pending );\n            }\n\n        }\n\n    },\n    formOptions: {\n\n        getFormData: function getFormDataDefault ( filteredFields ) {\n\n            const formData = {},\n                  formEl = this.formEl;\n\n            filteredFields.forEach(function( fieldEl ){\n                const isCheckbox = fieldEl.type === 'checkbox',\n                      isRadio = fieldEl.type === 'radio',\n                      isSelect = fieldEl.matches('select'),\n                      name = fieldEl.name;\n                let value = fieldEl.value;\n                                \n                if( isCheckbox ) {\n                    \n                    value = fieldEl.checked;\n                    let checkboxes = Array.from( formEl.querySelectorAll('[name=\"'+ name +'\"]') );\n                    if( checkboxes.length > 1 ){\n\n                        value = [];\n                        let checkedElems = checkboxes.filter(field => field.checked);\n                        checkedElems.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                        \n                } else if( isRadio ){\n                    \n                    let checkedRadio = formEl.querySelector('[name=\"'+ name +'\"]:checked');\n                    value = (checkedRadio === null ? null : checkedRadio.value);\n                    \n                } else if( isSelect ){\n\n                    let selectedOpts = Array.from( fieldEl.options ).filter(option => option.selected);\n                    if( selectedOpts.length > 1 ){\n\n                        value = [];\n                        selectedOpts.forEach(fieldEl => {\n                            value.push( fieldEl.value );\n                        });\n\n                    }\n                }\n\n                formData[ name ] = value;\n            });\n\n            return formData;\n\n        }\n\n    }\n}\n","\nimport { defaultCallbacksInOptions } from './optionsUtils';\n\nexport const options = {\n\n    fieldOptions: {\n        beforeValidation:       [defaultCallbacksInOptions.fieldOptions.beforeValidation],\n        cssClasses: {\n            dirty:              'is-dirty',\n            error:              'has-error',\n            errorEmpty:         'has-error-empty',\n            errorRule:          'has-error-rule',\n            pending:            'is-pending',\n            valid:              'is-valid'\n        },\n        focusOnRelated:         true,\n        handleFileUpload:       true,\n        handleValidation:       true,\n        maxFileSize:            10,\n        onValidationCheckAll:   true,\n        preventPasteFields:     '[type=\"password\"], [data-equal-to]',\n        skipUIfeedback:         false,\n        strictHtmlValidation:   true,\n        validateOnEvents:       'input change'\n    },\n\n    formOptions: {\n        ajaxOptions:            {\n            cache:              'no-store',\n            credentials:        'same-origin',\n            headers: {\n                                'Content-Type': 'application/json',\n                                'Accept':       'application/json'\n            },\n            method:             'POST',\n            mode:               'same-origin',\n            redirect:           'follow',\n            timeout:            0,\n            url:                location.href\n        },\n        ajaxSubmit:             true,\n        beforeSend:             [],\n        cssClasses: {\n            ajaxComplete:       'ajax-complete',\n            ajaxError:          'ajax-error',\n            ajaxPending:        'ajax-pending',\n            ajaxSuccess:        'ajax-success',\n            submit:             'is-submitting',\n            valid:              'is-valid'\n        },\n        getFormData:            defaultCallbacksInOptions.formOptions.getFormData,\n        handleSubmit:           true\n    }\n    \n}\n","\nimport { getSplitChar } from './helpers';\n\nexport const validationRules = {\n            \n    date: function( string ){\n        // DATE AS ISO 8601 DATE FORMAT     YYYY MM DD | YYYY/MM/DD | YYYY.MM.DD | YYYY-MM-DD\n\n        let date = /^(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13578]|1[02])[ \\/\\-.](0[1-9]|[12]\\d|3[01]))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.](0[13456789]|1[012])[ \\/\\-.](0[1-9]|[12]\\d|30))|(((19|[2-9]\\d)\\d{2})[ \\/\\-.]02[ \\/\\-.](0[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))[ \\/\\-.]02[ \\/\\-.]29)$/g.test( string ),\n            obj = {\n                result: date\n            };\n\n        return obj;\n    },\n    \n    email: function( string ){\n        // FROM https://emailregex.com\n        // AS FOR RFC 5322 Official Standard EMAIL MUST BE AT LEAST:\n        // a@a.aa\n        let obj = {\n            result: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test( string )\n        };\n\n        return obj;\n    },\n    \n    number: function( string ){\n        // ALL NUMBERS ( INTEGERS AND FLOATING )\n        // VALID NUMBERS: 123 | 123.456 | .123\n        let obj = {\n            result: /[+-]?([0-9]*[.])?[0-9]+/.test( string )\n        };\n\n        return obj;\n    }\n    \n}\n\nexport const validationRulesAttributes = {\n\n    checkbox: function( data ){\n        let formEl = data.fieldEl.closest('form'),\n            dataChecksEl = formEl.querySelector('[name=\"' + data.fieldEl.name + '\"][data-checks]'),\n            obj = { result: data.fieldEl.checked };\n\n        if( dataChecksEl !== null ){\n            obj = this.checks({ attrValue: dataChecksEl.getAttribute('data-checks'), fieldEl: dataChecksEl});\n        }\n\n        return obj;\n    },\n\n    checks: function( data ){\n        try {\n            let attrValue = JSON.parse(data.attrValue),\n                fieldEl = data.fieldEl,\n                formEl = fieldEl.closest('form'),\n                checkedElLength = formEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length,\n                isMinOk = checkedElLength >= attrValue[0],\n                isMaxOk = checkedElLength <= attrValue[1],\n                obj = {\n                    result: isMinOk && isMaxOk\n                };\n\n            if( !obj.result ){\n\n                obj.errors = { checks: true };\n                if( !isMinOk ){ obj.errors.minChecks = true; }\n                if( !isMaxOk ){ obj.errors.maxChecks = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-checks\" attribute is not a valid array!');\n        }\n    },\n\n    equalTo: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            checkFromEl = formEl.querySelector( '[name=\"' + fieldEl.getAttribute('data-equal-to') + '\"]' ),\n            obj = {\n                result: fieldEl.value === checkFromEl.value\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { equalTo: true };\n        }\n\n        return obj;\n    },\n    \n    exactLength: function( data ){\n        let valueLength = data.fieldEl.value.length,\n            exactLength = (data.attrValue * 1),\n            obj = {\n                result: valueLength === exactLength\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { exactLength: true };\n            if( valueLength < exactLength ){ obj.errors.minlength = true; }\n            else { obj.errors.maxlength = true; }\n\n        }\n\n        return obj;\n    },\n\n    file: function( data ){\n        let fieldEl = data.fieldEl,\n            maxFileSize = (fieldEl.getAttribute('data-max-file-size') || data.fieldOptions.maxFileSize) * 1,\n            MIMEtype = (fieldEl.accept ? new RegExp(fieldEl.accept.replace( '*', '[^\\\\/,]+' )) : null),\n            filesList = Array.from(fieldEl.files),\n            obj = { result: true };\n\n        filesList.forEach(function( file ){\n            let exceedMaxFileSize = maxFileSize > 0 && (file.size/1024/1024) > maxFileSize,\n                isAcceptedFileType = (MIMEtype !== null ? MIMEtype.test(file.type) : true);\n\n            if( exceedMaxFileSize || !isAcceptedFileType ){\n                obj.result = false;\n                if( typeof obj.errors === 'undefined' ){\n                    obj.errors = {};\n                }\n                obj.errors.file = true;\n                if( exceedMaxFileSize ){ obj.errors.maxFileSize = true; }\n                if( !isAcceptedFileType ){ obj.errors.acceptedFileType = true; }\n\n            }\n        });\n\n        return obj;\n    },\n\n    length: function( data ){\n        try {\n            let valueL = data.fieldEl.value.length,\n                attrValue = JSON.parse(data.attrValue),\n                isMinlengthOk = valueL >= attrValue[0],\n                isMaxlengthOk = valueL <= attrValue[1],\n                obj = { result: isMinlengthOk && isMaxlengthOk };\n\n            if( !obj.result ){\n\n                obj.errors = { stringLength: true };\n                if( !isMinlengthOk ){ obj.errors.minlength = true; }\n                if( !isMaxlengthOk ){ obj.errors.maxlength = true; }\n\n            }\n\n            return obj;\n        } catch(e){\n            throw new Error('\"data-length\" attribute is not a valid array!');\n        }\n    },\n    \n    max: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            maxVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            maxVal = maxVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        maxVal = maxVal * 1;\n\n        let obj = {\n                result: value <= maxVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { max: true };\n        }\n        \n        return obj;\n    },\n    \n    maxlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length <= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { maxlength: true };\n        }\n\n        return obj;\n    },\n    \n    min: function( data ){\n        let fieldEl = data.fieldEl,\n            isDate = (fieldEl.matches('[type=\"date\"]') || fieldEl.matches('[data-subtype=\"date\"]') || fieldEl.matches('[data-subtype=\"dateDDMMYYYY\"]')),\n            value = data.fieldEl.value,\n            minVal = data.attrValue;\n        \n        if( isDate ){\n\n            let splitChar = getSplitChar( value );\n\n            if( value.indexOf(splitChar) === 2 ){\n                // DD MM YYYY\n                value = value.split( splitChar ).reverse();\n            } else {\n                // YYYY MM DD\n                value = value.split( splitChar );\n            }\n\n            value = value.join('');\n            minVal = minVal.split('-').join('');\n\n        }\n\n        value = value * 1;\n        minVal = minVal * 1;\n\n        let obj = {\n                result: value >= minVal\n            };\n\n        if( !obj.result ){\n            \n            obj.errors = { min: true };\n        }\n        \n        return obj;\n    },\n\n    minlength: function( data ){\n        const obj = {\n            result: data.fieldEl.value.length >= (data.attrValue * 1)\n        };\n\n        if( !obj.result ){\n\n            obj.errors = { minlength: true };\n        }\n\n        return obj;\n    },\n\n    pattern: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldPattern = fieldEl.pattern,\n            fieldRegex = new RegExp( fieldPattern ),\n            obj = {\n                result: fieldRegex.test( fieldEl.value )\n            };\n\n        if( !obj.result ){\n\n            obj.errors = { pattern: true };\n        }\n\n        return obj;\n    },\n\n    radio: function( data ){\n        let fieldEl = data.fieldEl,\n            fieldChecked = fieldEl.closest('form').querySelector( '[name=\"'+ fieldEl.name +'\"]:checked' ),\n            isValid = fieldChecked !== null && fieldChecked.value.trim().length > 0,\n            obj = { result: isValid };\n\n        return obj;\n    },\n\n    requiredFrom: function( data ){\n        let fieldEl = data.fieldEl,\n            formEl = fieldEl.closest('form'),\n            isValidValue = fieldEl.value.trim().length > 0,\n            reqMoreEl = formEl.querySelector( fieldEl.getAttribute('data-required-from') ),\n            checkedEl = formEl.querySelector( '[name=\"'+ reqMoreEl.name +'\"]:checked' ),\n            obj = { result: checkedEl !== null };\n\n        if( reqMoreEl.checked && reqMoreEl.required ){\n            obj.result = isValidValue;\n        }\n\n        if( !obj.result ){\n            obj.errors = { requiredFrom: true };\n        }\n        \n        return obj;\n    }\n    \n}\n","\nimport { addClass, mergeObjects, removeClass, serializeObject } from './helpers';\n\n// AJAX CALL USING fetch API\nexport function ajaxCall( formDataObj ){\n\n    let self = this,\n        formEl = self.formEl,\n        fieldOptions = self.options.fieldOptions,\n        formOptions = self.options.formOptions,\n        btnEl = formEl.querySelector('[type=\"submit\"]'),\n        timeoutTimer,\n        ajaxOptions = mergeObjects( {}, formOptions.ajaxOptions ),\n        isMultipart = ajaxOptions.headers['Content-Type'] === 'multipart/form-data';\n\n    ajaxOptions.body = formDataObj;\n    \n    // POST A FormData OBJECT ( multipart )\n    if( isMultipart && fieldOptions.handleFileUpload ){\n        let formDataMultipart = new FormData();\n        \n        for(let key in ajaxOptions.body){\n            formDataMultipart.append( key, ajaxOptions.body[key] );\n        }\n        \n        Array.from( formEl.querySelectorAll('[type=\"file\"]') ).forEach(function( field ){\n            Array.from(field.files).forEach(function( file, idx ){\n                let name = field.name+'['+ idx +']';\n                formDataMultipart.append( name, file, file.name );\n            });\n        });\n        \n        ajaxOptions.body = formDataMultipart;\n    }\n\n    if( ajaxOptions.method === 'GET' ){\n\n        // FETCH WITH \"GET\" METHOD CAN'T HAVE \"body\". SO IT IS APPENDED TO THE URL\n        ajaxOptions.url += ( /\\?/.test(ajaxOptions.url) ? '&' : '?' ) + serializeObject( ajaxOptions.body );\n        delete ajaxOptions.body;\n\n    } else {\n\n        if( ajaxOptions.headers['Content-Type'].indexOf('application/x-www-form-urlencoded') > -1 ){\n            // POST A NORMAL FORM\n            ajaxOptions.body = serializeObject( ajaxOptions.body );\n        } else if( !isMultipart ){\n            // POST A JSON STRING\n            ajaxOptions.body = JSON.stringify(ajaxOptions.body);\n        }\n\n    }\n\n    ajaxOptions.headers = new Headers( ajaxOptions.headers );\n\n    if ( ajaxOptions.timeout > 0 ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        ajaxOptions.signal = signal;\n\n        timeoutTimer = window.setTimeout(function() {\n            controller.abort();\n        }, ajaxOptions.timeout);\n    }\n\n    return fetch(ajaxOptions.url, ajaxOptions)\n        .then(function( response ){\n            if( !response.ok ){\n                return Promise.reject(response);\n            }\n\n            let getFetchMethod = function( response ){\n                let contentType = response.headers.get('Content-Type'),\n                    methodName = 'blob';\n\n                if( contentType.indexOf('application/json') > -1 ){\n                    methodName = 'json';\n                } else if( contentType.indexOf('text/') > -1 ){\n                    methodName = 'text';\n                }\n                \n                return methodName;\n            };\n            let fetchMethod = getFetchMethod( response );\n\n            return response[fetchMethod]();\n        })\n        .then(function( data ){\n            addClass( formEl, formOptions.cssClasses.ajaxSuccess );\n            return data;\n        })\n        .catch(function( error ){\n            addClass( formEl, formOptions.cssClasses.ajaxError );\n            return Promise.reject(error);\n        })\n        .finally(function(){\n            if( timeoutTimer ){\n                window.clearTimeout( timeoutTimer );\n            }\n            removeClass( formEl, formOptions.cssClasses.submit + ' ' + formOptions.cssClasses.ajaxPending );\n            addClass( formEl, formOptions.cssClasses.ajaxComplete );\n            btnEl.disabled = false;\n        });\n\n}\n","\nimport { addClass, customEvents, dispatchCustomEvent, removeClass, runFunctionsSequence, validateFormObjDefault } from './helpers';\nimport { ajaxCall } from './ajaxCall';\n\nexport function submit( event ){\n\n    const self = this,\n          options = self.options,\n          formCssClasses = options.formOptions.cssClasses,\n          isAjaxForm = options.formOptions.ajaxSubmit,\n          formEl = self.formEl,\n          btnEl = formEl.querySelector('[type=\"submit\"]'),\n          eventPreventDefault = ( enableBtn = true ) => {\n              if( btnEl && enableBtn ){ btnEl.disabled = false; }\n              if( event ){ event.preventDefault(); }\n          };\n\n    if( isAjaxForm ){\n        eventPreventDefault(false);\n    }\n\n    if( btnEl ){\n        if( btnEl.disabled ){\n            eventPreventDefault(false);\n            return false;\n        }\n        btnEl.disabled = true;\n    }\n\n    removeClass( formEl, (formCssClasses.ajaxComplete + ' ' + formCssClasses.ajaxError + ' ' + formCssClasses.ajaxSuccess) );\n    addClass( formEl, formCssClasses.submit );\n    \n    const handleValidation = options.fieldOptions.handleValidation,\n          formValidationPromise = (handleValidation ? self.validateForm() : Promise.resolve(validateFormObjDefault));\n\n    formValidationPromise.then(formValidation => {\n\n        let beforeSendData = { stopExecution: false, formData: {} };\n\n        if( !formValidation.result ){\n            eventPreventDefault();\n            removeClass( formEl, formCssClasses.submit );\n            beforeSendData.stopExecution = true;\n            return [beforeSendData];\n        }\n        \n        let formDataObj = (isAjaxForm ? self.getFormData() : null),\n            callbacksBeforeSend = options.formOptions.beforeSend;\n\n        if( formDataObj ){\n            beforeSendData.formData = formDataObj;\n        }\n\n        const rfsObject = {\n            functionsList: callbacksBeforeSend,\n            data: beforeSendData,\n            stopConditionFn: function(data){ return data.stopExecution; }\n        };\n        return runFunctionsSequence.call(self, rfsObject);\n\n    }).then(dataList => {\n\n        if( dataList.filter(data => data.stopExecution).length > 0 ){\n            eventPreventDefault();\n            return false;\n        }\n        \n        if( isAjaxForm ){\n\n            const formData = dataList[dataList.length - 1].formData;\n            addClass( formEl, formCssClasses.ajaxPending );\n            dispatchCustomEvent( formEl, customEvents.form.submit, ajaxCall.call(self, formData) );\n            \n        }\n\n    });\n    \n}\n","\nimport { addClass, fieldsStringSelector, isFieldForChangeEvent, removeClass } from './helpers';\nimport { submit } from './submit';\n\nexport const callbackFns = {\n\n    dataTypeNumber: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches('[data-type=\"number\"]') ){\n            let fieldValue = fieldEl.value,\n                hasInvalidChars = /[^\\d.,+\\-]/.test(fieldValue);\n            \n            if( hasInvalidChars ){\n                event.stopImmediatePropagation();\n                let valueReplaced = fieldValue.replace(/[^\\d.,+\\-]/g, '');\n                fieldEl.value = valueReplaced;\n            }\n        }\n\n    },\n\n    keypressMaxlength: function( event ){\n\n        const fieldEl = event.target;\n        \n        if( fieldEl.matches( '[maxlength]' ) ){\n            const maxLength = fieldEl.maxLength * 1,\n                keyPressed = event.which || event.keyCode,\n                allowedKeys = [8, 37, 38, 39, 46];\n\n            if( fieldEl.value.length >= maxLength && allowedKeys.indexOf(keyPressed) === -1 ){\n                return false;\n            }\n        }\n\n    },\n\n    pastePrevent: function( event ){\n\n        const self = this,\n              fieldEl = event.target;\n        let fieldOptions = self.options.fieldOptions;\n\n        if( fieldEl.matches( fieldOptions.preventPasteFields ) ){     \n            event.preventDefault();\n        }\n\n    },\n\n    submit: function( event ){\n        submit.call( this, event );\n    },\n\n    validation: function( event ){\n\n        const self = this,\n              eventName = event.type,\n              fieldEl = event.target;\n\n        if( fieldEl.matches( fieldsStringSelector ) ){\n            const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl),\n                isRadio = fieldEl.type === 'radio',\n                isReqFrom = fieldEl.matches('[data-required-from]'),\n                isReqMore = fieldEl.matches('[data-require-more]'),\n                isValidValue = fieldEl.value.trim().length > 0;\n\n            // HANDLE data-require-more FIELDS\n            if( isRadio && eventName === 'change' ){\n                let findReqMoreEl = (isReqMore ? fieldEl : self.formEl.querySelector('[name=\"'+ fieldEl.name +'\"][data-require-more]')),\n                    findReqFromEl = (findReqMoreEl !== null ? self.formEl.querySelector('[data-required-from=\"#'+ findReqMoreEl.id +'\"]') : null);\n\n                if( isReqMore ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = fieldEl.required;\n                        if( self.options.fieldOptions.focusOnRelated ){\n                            findReqFromEl.focus();\n                        }\n                    }\n\n                } else if( findReqMoreEl !== null ){\n\n                    if( findReqFromEl !== null ){\n                        findReqFromEl.required = findReqMoreEl.required && findReqMoreEl.checked;\n                        findReqFromEl.value = '';\n                    }\n\n                }\n            }\n\n            // HANDLE data-required-from FIELDS\n            if( isReqFrom ){\n                if( isValidValue ){\n\n                    let reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n                    reqMoreEl.checked = true;\n                    fieldEl.required = reqMoreEl.required;\n                }\n            }\n            \n            if(\n                (isFieldForChangeEventBoolean && eventName === 'change') ||\n                (!isFieldForChangeEventBoolean && eventName !== 'change')\n            ){\n                \n                return self.validateField( fieldEl ).then(obj => {\n                    const type = obj.fieldEl.type,\n                          realtedFieldEqualTo = obj.fieldEl.closest('form').querySelector('[data-equal-to=\"'+ obj.fieldEl.name +'\"]');\n\n                    if(\n                        // FIELD IS ( required OR data-validate-if-filled ) AND RELATED FIELD data-equal-to HAS A VALUE\n                        (obj.fieldEl.required || obj.fieldEl.matches('[data-validate-if-filled]')) && \n                        !(type === 'checkbox' || type === 'radio') && \n                        realtedFieldEqualTo && realtedFieldEqualTo.value.trim() !== ''\n                    ){\n                        return self.validateField( realtedFieldEqualTo );\n                    } else {\n                        return obj;\n                    }\n                });\n\n            }\n        }\n        \n    },\n\n    validationEnd: function( event ){\n\n        const self = this,\n              options = self.options.fieldOptions,\n              fieldsArray = event.data.fieldEl ? [event.data] : event.data.fields;\n\n        fieldsArray.forEach(function( obj ){\n            let fieldEl = obj.fieldEl;\n            if( fieldEl.matches( fieldsStringSelector ) ){\n                let containerEl = fieldEl.closest('[data-formjs-question]'),\n                    isReqFrom = fieldEl.matches('[data-required-from]'),\n                    reqMoreEl = self.formEl.querySelector( fieldEl.getAttribute('data-required-from') );\n\n                if( containerEl !== null ){\n                    removeClass( containerEl, options.cssClasses.pending );\n                }\n\n                if( containerEl !== null && !options.skipUIfeedback ){\n\n                    if( obj.result ){\n\n                        if( !isReqFrom || (isReqFrom && reqMoreEl.checked) ){\n                            // IF FIELD IS VALID\n                            let errorClasses = options.cssClasses.error + ' ' + options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                            removeClass( containerEl, errorClasses );\n                            addClass( containerEl, options.cssClasses.valid );\n                        }\n\n                    } else {\n\n                        // IF FIELD IS NOT VALID\n                        let extraErrorClass = options.cssClasses.errorRule;\n\n                        // HANDLE CASE OF FIELD data-checks\n                        let isChecks = fieldEl.matches('[data-checks]'),\n                            checkedElLength = (isChecks ? containerEl.querySelectorAll('[name=\"' + fieldEl.name + '\"]:checked').length : 0);\n\n                        if( (!isChecks && (obj.errors && obj.errors.empty)) || (isChecks && checkedElLength === 0) ){\n                            extraErrorClass = options.cssClasses.errorEmpty;\n                        }\n\n                        let errorClasses = options.cssClasses.error + ' ' + extraErrorClass,\n                            errorClassToRemove = options.cssClasses.errorEmpty + ' ' + options.cssClasses.errorRule;\n                        removeClass( containerEl, options.cssClasses.valid + ' ' + errorClassToRemove );\n                        addClass( containerEl, errorClasses );\n\n                    }\n                }\n            }\n        });\n\n    }\n\n}\n","\nimport { customEvents } from './helpers';\n\nexport function formStartup( formEl, options, listenerCallbacks ){\n\n    formEl.noValidate = true;\n\n    let fieldOptions = options.fieldOptions,\n        formOptions = options.formOptions;\n\n    // HANDLE FIELD VALIDATION\n    if( fieldOptions.handleValidation ){\n        \n        // VALIDATION WITH ATTRIBUTES LIKE HTML ONES ( ALSO FOR BUG FIXING, EG: maxlength IN ANDROID )\n        if( fieldOptions.strictHtmlValidation ){\n            \n            // maxlength\n            // MAXLENGTH IS BUGGY IN ANDROID BROWSERS\n            formEl.addEventListener('keypress', listenerCallbacks.keypressMaxlength, false);\n\n            // data-type=\"number\"\n            // SINCE VALIDATING type=\"number\" WITH NON NUMERIC CHARS WILL RETURN EMPTY STRING IN SOME BROWSERS ( EG: FIREFOX )\n            formEl.addEventListener('input', listenerCallbacks.dataTypeNumber, false);\n            \n        }\n        \n        if( fieldOptions.preventPasteFields && formEl.querySelectorAll( fieldOptions.preventPasteFields ).length ){\n            // INIT EVENT LISTENER FOR \"PASTE\" EVENT TO PREVENT IT ON SPECIFIED FIELDS\n            formEl.addEventListener('paste', listenerCallbacks.pastePrevent, false);\n        }\n\n        // INIT EVENTS LISTENER ( AS IN fieldOptions )\n        fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n            let useCapturing = (eventName === 'blur' ? true : false);\n            formEl.addEventListener(eventName, listenerCallbacks.validation, useCapturing);\n        });\n\n        formEl.addEventListener(customEvents.field.validation, listenerCallbacks.validationEnd, false);\n\n    }\n    \n    // HANDLE FORM SUBMIT\n    if( formOptions.handleSubmit ){\n        // INIT FORM SUBMIT ( DEFAULT AND AJAX )\n        formEl.addEventListener('submit', listenerCallbacks.submit);\n\n        if( formOptions.ajaxSubmit ){\n            if( formEl.getAttribute('enctype') ){\n\n                // FOR XMLHttpRequest API\n                formOptions.ajaxOptions.contentType = formEl.getAttribute('enctype');\n\n                // FOR fetch API\n                formOptions.ajaxOptions.headers['Content-Type'] = formEl.getAttribute('enctype');\n                \n            }\n\n            if( formEl.getAttribute('method') ){\n                formOptions.ajaxOptions.method = formEl.getAttribute('method').toUpperCase();\n            }\n\n            if( formEl.getAttribute('action') ){\n                formOptions.ajaxOptions.url = formEl.getAttribute('action');\n            }\n        }\n    }\n\n}\n","\nimport { getFilledFields, isFieldForChangeEvent } from './helpers';\n\nexport const init = function(){\n\n    const instance = this,\n          formFields = getFilledFields( instance.formEl );\n\n    // VALIDATE ALL FILLED FIELDS\n    return Promise.all( formFields.map(fieldEl => {\n\n        const isFieldForChangeEventBoolean = isFieldForChangeEvent(fieldEl);\n        const fakeEventObj = { target: fieldEl, type: (isFieldForChangeEventBoolean ? 'change': '') };\n        return instance.listenerCallbacks.validation.call( instance, fakeEventObj );\n\n    }) ).then(fields => {\n\n        instance.isInitialized = true;\n        return { instance, fields };\n\n    });\n\n}\n","\nimport { mergeObjects, toCamelCase } from './helpers';\nimport { validationRulesAttributes } from './validationRules';\n\nexport function isValid( fieldEl, fieldOptions = {} ){\n\n    const self = this,\n          fieldType = ( fieldEl.matches('[data-subtype]') ? toCamelCase( fieldEl.getAttribute('data-subtype') ) : fieldEl.type ),\n          fieldValue = fieldEl.value,\n          isValidValue = fieldValue.trim().length > 0,\n          // ALPHABETICAL REVERSE ORDER\n          fieldAttributes = Array.from(fieldEl.attributes).sort(function(a,b){ return a.name < b.name });\n\n    let attrValidations = [],\n        attrValidationsResult = isValidValue,\n        obj = { result: isValidValue, fieldEl };\n\n    if( !obj.result ){\n        obj.errors = { empty: true };\n        return Promise.resolve(obj);\n    }\n\n    // COLLECT SPECIFIC VALIDATIONS FOR validationRulesAttributes\n    fieldAttributes.forEach(function(attr){\n        // FOR data-* ATTRIBUTES -> REMOVE \"data-\" AND TRANSFORM TO CAMELCASE\n        let attrName = toCamelCase( attr.name.replace('data-', '') ),\n            attrValue = attr.value,\n            isAttrValueWithFn = attrName === 'type' && typeof validationRulesAttributes[attrValue] === 'function',\n            isAttrNameWithFn = typeof validationRulesAttributes[attrName] === 'function';\n\n        if( isAttrValueWithFn || isAttrNameWithFn ){\n\n            let extraValObj = {\n                    attrName: (isAttrValueWithFn ? attrValue : attrName),\n                    attrValue: attrValue,\n                    fieldEl,\n                    fieldOptions\n                };\n\n            if( isAttrValueWithFn || attrName === 'requiredFrom' ){\n                // THESE VALIDATIONS MUST RUN BEFORE ALL OTHERS\n                attrValidations.unshift( extraValObj );\n            } else {\n                attrValidations.push( extraValObj );\n            }\n\n        }\n    });\n\n    return new Promise(function(resolve){\n\n        // RUN SPECIFIC VALIDATIONS FOR validationRulesAttributes\n        attrValidations.forEach(function(item){\n            let extraVal = validationRulesAttributes[item.attrName]( item );\n            if( !extraVal.result ){\n                obj = mergeObjects({}, obj, extraVal);\n                attrValidationsResult = false;\n            }\n        });\n\n        // RUN VALIDATIONS FOR validationRules\n        if( typeof self.validationRules[fieldType] === 'function' ){\n            resolve( self.validationRules[fieldType](fieldValue, fieldEl) );\n        } else {\n            resolve( obj );\n        }\n\n    }).then(data => {\n\n        obj = mergeObjects( {}, obj, data, {fieldEl} );\n        obj.result = obj.result && attrValidationsResult;\n\n        if( !obj.result ){\n            let fieldErrors = (typeof self.validationErrors[fieldType] === 'function' ? self.validationErrors[fieldType](fieldValue, fieldEl) : {});\n            if( typeof obj.errors === 'undefined' ){\n                obj.errors = {};\n            }\n            obj.errors.rule = true;\n            obj.errors = mergeObjects({}, obj.errors, fieldErrors);\n        }\n        \n        return obj;\n\n    });\n\n}\n","\nimport { isDOMNode, mergeObjects, runFunctionsSequence, validateFieldObjDefault } from './helpers';\nimport { isValid } from './isValid';\n\nexport function isValidField( fieldElem, fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem);\n\n    let obj = mergeObjects({}, validateFieldObjDefault, {fieldEl});\n\n    if( !isDOMNode(fieldEl) ){ return Promise.resolve(obj); }\n\n    let options =           mergeObjects( {}, self.options.fieldOptions, fieldOptionsObj ),\n        isValidValue =      fieldEl.value.trim().length > 0,\n        isRequired =        fieldEl.required,\n        isReqFrom =         fieldEl.matches('[data-required-from]'),\n        isValidateIfFilled =fieldEl.matches('[data-validate-if-filled]');\n\n    const rfsObject = {\n        functionsList: self.options.fieldOptions.beforeValidation,\n        data: {fieldEl}\n    };\n\n    return runFunctionsSequence.call(self, rfsObject)\n        .then(data => {\n\n            let dataObj = data.pop();\n            return new Promise(function(resolve){\n                if(\n                    (!isRequired && !isValidateIfFilled && !isReqFrom) ||   // IT IS A NORMAL FORM FIELD\n                    (isValidateIfFilled && !isValidValue) ||                // IT IS data-validate-if-filled AND EMPTY\n                    (isReqFrom && !isRequired )                             // IT IS data-required-from AND NOT required\n                ){\n\n                    dataObj.result = true;\n                    resolve( dataObj );\n                \n                } else {\n\n                    resolve( isValid.call(self, fieldEl, options) );\n                    \n                }\n\n            });\n\n        });\n\n}\n","\nimport { fieldsStringSelector, getUniqueFields, mergeObjects, validateFormObjDefault } from './helpers';\nimport { isValidField } from './isValidField';\n\nexport function isValidForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          formEl = self.formEl,\n          obj = mergeObjects({}, validateFormObjDefault),\n          fieldOptions = mergeObjects( {}, fieldOptionsObj, {focusOnRelated: false} ),\n          fieldsList = getUniqueFields( formEl.querySelectorAll(fieldsStringSelector) );\n\n    return Promise.all( fieldsList.map(function( fieldEl ){\n        \n        return isValidField.call( self, fieldEl, fieldOptions );\n\n    }) ).then(list => {\n\n        let areAllFieldsValid = list.filter(fieldObj => !fieldObj.result).length === 0;\n        obj.result = areAllFieldsValid;\n        obj.fields = list;\n\n        return obj;\n\n    });\n\n}\n","\nimport { customEvents, dispatchCustomEvent, mergeObjects, removeClass } from './helpers';\nimport { isValidField } from './isValidField';\nimport { isValidForm } from './isValidForm';\n\nexport function validateField( fieldElem, fieldOptionsObj ){\n\n    const self = this,\n          fieldEl = (typeof fieldElem === 'string' ? self.formEl.querySelector(fieldElem) : fieldElem),\n          skipUIfeedback = self.options.fieldOptions.skipUIfeedback,\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n    \n    return new Promise(function(resolve){\n\n        const prom = isValidField.call( self, fieldEl, fieldOptions );\n        resolve( prom );\n\n    }).then(obj => {\n\n        return new Promise(resolve => {\n            if( obj.fieldEl ){\n\n                dispatchCustomEvent( obj.fieldEl, customEvents.field.validation, obj );\n                dispatchCustomEvent( self.formEl, customEvents.field.validation, obj );\n\n                if( fieldOptions.onValidationCheckAll && obj.result ){\n                    // FORCE skipUIfeedback TO true\n                    self.options.fieldOptions.skipUIfeedback = true;\n                    resolve(\n                        isValidForm.call( self ).then(dataForm => {\n                            const clMethodName = dataForm.result ? 'add' : 'remove';\n\n                            self.formEl.classList[clMethodName]( self.options.formOptions.cssClasses.valid );\n                            dispatchCustomEvent( self.formEl, customEvents.form.validation, dataForm );\n                            // RESTORE skipUIfeedback TO THE ORIGINAL VALUE\n                            self.options.fieldOptions.skipUIfeedback = skipUIfeedback;\n\n                            return obj;\n                        })\n                    );\n                } else if( !obj.result ){\n                    removeClass( self.formEl, self.options.formOptions.cssClasses.valid );\n                }\n            }\n            resolve( obj );\n        });\n        \n    });\n    \n}\n","\nimport { customEvents, dispatchCustomEvent, mergeObjects } from './helpers';\nimport { isValidForm } from './isValidForm';\n\nexport function validateForm( fieldOptionsObj = {} ){\n\n    const self = this,\n          fieldOptions = mergeObjects({}, self.options.fieldOptions, fieldOptionsObj);\n\n    return new Promise(function(resolve){\n\n        const prom = isValidForm.call( self, fieldOptions );\n        resolve(prom);\n\n    }).then(data => {\n\n        const clMethodName = data.result ? 'add' : 'remove';\n        self.formEl.classList[clMethodName]( self.options.formOptions.cssClasses.valid );\n        self.listenerCallbacks.validationEnd.call( self, {data} );\n        dispatchCustomEvent( self.formEl, customEvents.form.validation, data );\n\n        return data;\n\n    });\n    \n}\n","\nimport { excludeSelector, mergeObjects } from './modules/helpers';\nimport { options }              from './modules/options';\nimport { validationRules }      from './modules/validationRules';\nimport { validationErrors }     from './modules/validationErrors';\n\n// CONSTRUCTOR FUNCTION & PUBLIC METHODS\nimport { constructorFn }        from './modules/constructor';\nimport { destroy }              from './modules/destroy';\nimport { init }                 from './modules/init';\nimport { validateField }        from './modules/validateField';\nimport { validateForm }         from './modules/validateForm';\n\nconst version = '4.0.0';\n\nclass Form {\n\n    constructor( formEl, optionsObj ){\n        // REFACTORING OK\n        constructorFn(this, formEl, optionsObj);\n    }\n\n    destroy(){\n        // REFACTORING OK\n        destroy(this.formEl, this.options, this.listenerCallbacks);\n    }\n    \n    getFormData(){\n        // REFACTORING OK\n        const formFieldsEl = this.formEl.querySelectorAll('input, select, textarea'),\n              filteredFields = Array.from( formFieldsEl ).filter( elem => elem.matches(excludeSelector) );\n        return this.options.formOptions.getFormData.call(this, filteredFields);\n    }\n\n    init(){\n        return init.call(this);\n    }\n\n    validateField( fieldEl, fieldOptions ){\n        return validateField.call(this, fieldEl, fieldOptions);\n    }\n\n    validateForm( fieldOptions ){\n        return validateForm.call(this, fieldOptions);\n    }\n    \n    static addValidationErrors( errorsObj ){\n        this.prototype.validationErrors = mergeObjects({}, this.prototype.validationErrors, errorsObj);\n    }\n\n    static addValidationRules( rulesObj ){\n        this.prototype.validationRules = mergeObjects({}, this.prototype.validationRules, rulesObj);\n    }\n    \n    static setOptions( optionsObj ){\n        this.prototype.options = mergeObjects({}, this.prototype.options, optionsObj);\n    }\n\n}\n\nForm.prototype.isInitialized = false;\nForm.prototype.options = options;\nForm.prototype.validationErrors = validationErrors;\nForm.prototype.validationRules = validationRules;\nForm.prototype.version = version;\n\nexport default Form;\n","\nimport { checkFormEl, isNodeList, mergeObjects }   from './helpers';\nimport { callbackFns }                             from './listenerCallbacks';\nimport { formStartup }                             from './formStartup';\n\nexport function constructorFn( self, formEl, optionsObj ){\n\n    let argsL = arguments.length,\n        checkFormElem = checkFormEl(formEl);\n\n    if( argsL === 0 || (argsL > 0 && !formEl) ){\n        throw new Error('First argument \"formEl\" is missing or falsy!');\n    }\n    if( isNodeList(formEl) ){\n        throw new Error('First argument \"formEl\" must be a single DOM node or a form CSS selector, not a NodeList!');\n    }\n    if( !checkFormElem.result ){\n        throw new Error('First argument \"formEl\" is not a DOM node nor a form CSS selector!');\n    }\n\n    self.formEl = checkFormElem.element;\n    self.formEl.formjs = self;\n    self.options = mergeObjects({}, self.constructor.prototype.options, optionsObj);\n    self.listenerCallbacks = {\n        dataTypeNumber:     callbackFns.dataTypeNumber,\n        keypressMaxlength:  callbackFns.keypressMaxlength,\n        pastePrevent:       callbackFns.pastePrevent.bind(self),\n        submit:             callbackFns.submit.bind(self),\n        validation:         callbackFns.validation.bind(self),\n        validationEnd:      callbackFns.validationEnd.bind(self)\n    };\n    Object.freeze(self.listenerCallbacks);\n\n    formStartup( self.formEl, self.options, self.listenerCallbacks );\n    \n}\n","\nimport { customEvents } from './helpers';\n\nexport function destroy( formEl, options, listenerCallbacks ){\n\n    if( options.fieldOptions.strictHtmlValidation ){\n        formEl.removeEventListener('keypress', listenerCallbacks.keypressMaxlength, false);\n        formEl.removeEventListener('input', listenerCallbacks.dataTypeNumber, false);\n    }\n\n    if( options.fieldOptions.preventPasteFields ){\n        formEl.removeEventListener('paste', listenerCallbacks.pastePrevent, false);\n    }\n\n    if( options.formOptions.handleSubmit ){\n        formEl.removeEventListener('submit', listenerCallbacks.submit);\n    }\n\n    options.fieldOptions.validateOnEvents.split(' ').forEach(function( eventName ){\n        let useCapturing = (eventName === 'blur' ? true : false);\n        formEl.removeEventListener(eventName, listenerCallbacks.validation, useCapturing);\n    });\n\n    formEl.removeEventListener(customEvents.field.validation, listenerCallbacks.validationEnd, false);\n\n    delete formEl.formjs;\n    \n}\n","\nexport const validationErrors = {\n\n    email: function ( string ) {\n        const obj = {};\n\n        if( string.indexOf('@') === -1 ){\n\n            // @ IS MISSING\n            obj.missingAtChar = true;\n\n        } else {\n\n            let splitAt_at = string.split('@');\n            if( splitAt_at[0].length === 0 ){\n\n                // USER NAME IS MISSING\n                obj.missingUserName = true;\n\n            }\n\n            if( splitAt_at[1].length === 0 ){\n\n                // IS EMPTY AFTER @\n                obj.missingDomain = true;\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else if( splitAt_at[1].indexOf('.') === -1 ) {\n\n                // DOT IS MISSING\n                obj.missingExtensionDot = true;\n                obj.missingExtension = true;\n\n            } else {\n\n                // EXTENSION MISSING OR NOT LONG ENOUGH\n                let splitAt_dot = splitAt_at[1].split('.'),\n                    extLength = splitAt_dot[1].length;\n                if( extLength === 0 ) {\n                    obj.missingExtension = true;\n                } else if( extLength < 2 ){\n                    obj.minlengthExtension = true;\n                }\n\n            }\n        }\n\n        return obj;\n\n    }\n\n}"],"sourceRoot":""}